{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 3e1ac832edc4b89a2958","webpack:///./src/alfrid/GLTool.js","webpack:///./node_modules/gl-matrix/src/gl-matrix.js","webpack:///./src/alfrid/GLShader.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/common.js","webpack:///./src/alfrid/Batch.js","webpack:///./src/alfrid/Mesh.js","webpack:///./src/alfrid/Geom.js","webpack:///./node_modules/scheduling/src/scheduler.js","webpack:///./src/alfrid/post/Pass.js","webpack:///./src/alfrid/shaders/simpleColor.frag","webpack:///./src/alfrid/shaders/basic.vert","webpack:///./src/alfrid/GLTexture.js","webpack:///./src/alfrid/FrameBuffer.js","webpack:///./src/alfrid/utils/EaseNumber.js","webpack:///./src/alfrid/cameras/Camera.js","webpack:///./src/alfrid/cameras/CameraPerspective.js","webpack:///./src/alfrid/loaders/BinaryLoader.js","webpack:///./src/alfrid/shaders/bigTriangle.vert","webpack:///./src/alfrid/shaders/copy.frag","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat3.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/vec3.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/vec4.js","webpack:///./src/alfrid/utils/getAttribLoc.js","webpack:///./src/alfrid/GLCubeTexture.js","webpack:///./src/alfrid/utils/OrbitalControl.js","webpack:///./src/alfrid/cameras/CameraOrtho.js","webpack:///./src/alfrid/math/Ray.js","webpack:///./src/alfrid/objects/Object3D.js","webpack:///./src/alfrid/utils/ShaderLibs.js","webpack:///./src/alfrid/shaders/general.vert","webpack:///./src/alfrid/shaders/skybox.vert","webpack:///./src/alfrid/shaders/skybox.frag","webpack:///./src/alfrid/post/PassMacro.js","webpack:///./src/alfrid/post/PassVBlur.js","webpack:///./src/alfrid/post/PassBlurBase.js","webpack:///./src/alfrid/post/PassHBlur.js","webpack:///./src/alfrid/shaders/fxaa.frag","webpack:///./src/alfrid.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat2.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat2d.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat4.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/quat.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/vec2.js","webpack:///./src/alfrid/utils/getAndApplyExtension.js","webpack:///./src/alfrid/utils/exposeAttributes.js","webpack:///./src/alfrid/utils/getFloat.js","webpack:///./src/alfrid/utils/getHalfFloat.js","webpack:///./src/alfrid/utils/ExtensionsList.js","webpack:///./node_modules/glslify/browser.js","webpack:///./src/alfrid/shaders/basic.frag","webpack:///./node_modules/parse-dds/index.js","webpack:///./src/alfrid/CubeFrameBuffer.js","webpack:///./src/alfrid/MultisampleFrameBuffer.js","webpack:///./src/alfrid/TransformFeedbackObject.js","webpack:///./src/alfrid/utils/EventDispatcher.js","webpack:///./src/alfrid/utils/TweenNumber.js","webpack:///./src/alfrid/utils/QuatRotation.js","webpack:///./src/alfrid/cameras/CameraCube.js","webpack:///./src/alfrid/loaders/ObjLoader.js","webpack:///./src/alfrid/loaders/HDRLoader.js","webpack:///./src/alfrid/utils/HDRParser.js","webpack:///./src/alfrid/loaders/ColladaParser.js","webpack:///./node_modules/collada-parser/lib/ColladaParser.js","webpack:///./node_modules/collada-parser/lib/Collada.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/alfrid/post/EffectComposer.js","webpack:///./src/alfrid/post/PassBlur.js","webpack:///./src/alfrid/shaders/blur5.frag","webpack:///./src/alfrid/shaders/blur9.frag","webpack:///./src/alfrid/shaders/blur13.frag","webpack:///./src/alfrid/post/PassFxaa.js","webpack:///./src/alfrid/helpers/BatchCopy.js","webpack:///./src/alfrid/helpers/BatchAxis.js","webpack:///./src/alfrid/shaders/axis.vert","webpack:///./src/alfrid/shaders/axis.frag","webpack:///./src/alfrid/helpers/BatchBall.js","webpack:///./src/alfrid/helpers/BatchDotsPlane.js","webpack:///./src/alfrid/shaders/dotsPlane.vert","webpack:///./src/alfrid/helpers/BatchLine.js","webpack:///./src/alfrid/helpers/BatchSkybox.js","webpack:///./src/alfrid/helpers/BatchSky.js","webpack:///./src/alfrid/shaders/sky.vert","webpack:///./src/alfrid/helpers/BatchFXAA.js","webpack:///./src/alfrid/helpers/Scene.js","webpack:///./src/alfrid/helpers/View.js","webpack:///./src/alfrid/helpers/View3D.js"],"names":["gl","GLTool","canvas","_viewport","_enabledVertexAttribute","identityMatrix","create","_normalMatrix","_inverseModelViewMatrix","_modelMatrix","_matrix","_lastMesh","_useWebGL2","_hasArrayInstance","_extArrayInstance","_hasCheckedExt","identity","isMobile","test","navigator","userAgent","mCanvas","mParameters","undefined","console","error","destroy","setSize","window","innerWidth","innerHeight","ctx","ignoreWebgl2","getContext","log","webgl2","initWithGL","extensions","i","length","getExtension","enable","DEPTH_TEST","CULL_FACE","BLEND","enableAlphaBlending","x","y","w","h","hasChanged","viewport","scissor","r","g","b","a","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","mCamera","camera","rotate","mShader","shader","shaderProgram","mRotation","copy","multiply","matrix","fromMat4","invert","transpose","mMesh","mDrawingType","draw","bind","uniform","projection","drawType","isInstanced","drawElementsInstanced","iBuffer","numItems","UNSIGNED_SHORT","numInstance","POINTS","drawArrays","vertexSize","drawElements","unbind","mTransformObject","meshSource","meshDestination","numPoints","transformFeedback","generateBuffers","bindTransformFeedback","TRANSFORM_FEEDBACK","attributes","forEach","attr","bindBufferBase","TRANSFORM_FEEDBACK_BUFFER","buffer","RASTERIZER_DISCARD","beginTransformFeedback","endTransformFeedback","disable","useProgram","bindBuffer","ARRAY_BUFFER","mWidth","mHeight","_width","_height","width","height","_aspectRatio","ext","mExtension","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","mParameter","setViewport","parentNode","removeChild","e","GL","glslify","require","isSame","array1","array2","addLineNumbers","string","lines","split","join","cloneArray","mArray","slice","Float32Array","defaultVertexShader","defaultFragmentShader","uniformMapping","float","vec2","vec3","vec4","int","mat3","mat4","GLShader","strVertexShader","strFragmentShader","mVaryings","parameters","uniformTextures","_varyings","vsShader","_createShaderProgram","fsShader","_attachShaderProgram","useShader","mName","mType","mValue","uniformObject","uniformType","hasUniform","oUniform","parameterIndex","name","isNumber","getUniformLocation","push","type","value","uniformLoc","indexOf","needUpdate","mUniformObj","uniformName","uniformValue","getUniformType","concat","tmp","mShaderStr","isVertexShader","shaderType","VERTEX_SHADER","FRAGMENT_SHADER","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","warn","getShaderInfoLog","mVertexShader","mFragmentShader","createProgram","attachShader","deleteShader","transformFeedbackVaryings","SEPARATE_ATTRIBS","linkProgram","isArray","getArrayUniformType","Batch","_mesh","_shader","mesh","STATIC_DRAW","getBuffer","createBuffer","formBuffer","mData","mNum","ary","o","j","Mesh","mUseVao","_attributes","_numInstance","_indices","_faces","_bufferChanged","_hasIndexBufferChanged","_hasVAO","_isInstanced","_extVAO","createVertexArray","_useVAO","mArrayVertices","mDrawType","bufferData","normals","vertices","bufferNormal","mArrayTexCoords","mNormals","mArrayIndices","isDynamic","_drawType","DYNAMIC_DRAW","Uint16Array","_numItems","mItemSize","data","dataArray","attribute","getAttribute","itemSize","source","vertexAttribDivisor","mShaderProgram","hasVAO","bindVertexArray","vao","attrPosition","vertexAttribPointer","FLOAT","ELEMENT_ARRAY_BUFFER","_vao","attrObj","enableVertexAttribArray","_updateIndexBuffer","usingFaceNormals","generateFaces","_computeFaceNormals","_computeVertexNormals","faceIndex","face","N","normal","indices","sumNormal","set","normalize","ia","ib","ic","c","vba","vca","vNormal","find","getSource","Geom","meshTri","plane","numSegments","axis","positions","coords","gapX","gapY","gapUV","sx","sy","index","tx","ty","u","v","bufferVertex","bufferTexCoord","bufferIndex","sphere","size","isInvert","getPosition","isNormal","rx","Math","PI","ry","pos","sin","t","cos","precision","floor","reverse","cube","d","z","count","skybox","bigTriangle","Pass","mSource","mParams","bigTriangleVert","_uniforms","_hasOwnFbo","_fbo","mParmas","texture","isPowerOfTwo","isSourcePowerOfTwo","obj","videoWidth","videoHeight","GLTexture","isTexture","_texture","_mSource","createTexture","_isVideo","tagName","_premultiplyAlpha","_magFilter","magFilter","LINEAR","_minFilter","minFilter","NEAREST_MIPMAP_LINEAR","_wrapS","wrapS","MIRRORED_REPEAT","_wrapT","wrapT","CLAMP_TO_EDGE","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_FLIP_Y_WEBGL","exposure","texImage2D","RGBA","shape","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","max","getParameter","MAX_TEXTURE_MAX_ANISOTROPY_EXT","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","_canGenerateMipmap","generateMipmap","activeTexture","TEXTURE0","_bindIndex","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","NEAREST_MIPMAP_NEAREST","NEAREST","REPEAT","UNPACK_PREMULTIPLY_ALPHA_WEBGL","_whiteTexture","_greyTexture","_blackTexture","whiteTexture","document","createElement","fillStyle","fillRect","greyTexture","blackTexture","webglDepthTexture","hasCheckedMultiRenderSupport","extDrawBuffer","checkMultiRender","FrameBuffer","multipleTargets","checkExtension","_multipleTargets","useDepth","useStencil","texelType","_init","_textures","_initTextures","frameBuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","buffers","framebufferTexture2D","DRAW_FRAMEBUFFER","COLOR_ATTACHMENT0","drawBuffers","DEPTH_ATTACHMENT","glDepthTexture","drawBuffersWEBGL","COLOR_ATTACHMENT0_WEBGL","COLOR_ATTACHMENT1_WEBGL","COLOR_ATTACHMENT2_WEBGL","COLOR_ATTACHMENT3_WEBGL","FBOstatus","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","bindRenderbuffer","RENDERBUFFER","numTextures","glt","_createTexture","DEPTH_COMPONENT16","DEPTH_COMPONENT","mInternalformat","mTexelType","mFormat","forceNearest","mAutoSetViewport","mIndex","EaseNumber","mEasing","easing","_value","_targetValue","_efIndex","addEF","_update","MIN_DIFF","_checkLimit","abs","mAdd","mMin","mMax","limit","_min","_max","removeEF","Camera","_quat","_orientation","_projection","position","aEye","aCenter","aUp","_eye","clone","_center","lookAt","fromQuat","translate","positionOffset","mProj","mView","setView","setProjection","mInverseViewProj","cameraDir","CameraPerspective","mFov","mAspectRatio","mNear","mFar","_fov","_near","_far","perspective","mScreenPosition","mRay","proj","projectionMatrix","view","viewMatrix","transformMat4","sub","origin","direction","BinaryLoader","isArrayBuffer","_req","XMLHttpRequest","addEventListener","_onLoaded","_onProgress","responseType","url","callback","_callback","open","send","response","cacheAttribLoc","getAttribLocation","DDSD_MIPMAPCOUNT","OFF_MIPMAPCOUNT","headerLengthInt","GLCubeTexture","isCubeTexture","hasMipmaps","mipmapCount","TEXTURE_CUBE_MAP","targets","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","numLevels","uniform1i","parseDDS","mArrayBuffer","clamp","min","ddsInfos","flags","header","Int32Array","sources","images","map","img","faceData","offset","getMouse","mEvent","mTarget","touches","pageX","pageY","clientX","clientY","OrbitalControl","mListenerTarget","mRadius","_target","_listenerTarget","_mouse","_preMouse","center","_up","fromValues","radius","_rx","_ry","_preRX","_preRY","_isLockZoom","_isLockRotation","_isInvert","sensitivity","_wheelBind","_onWheel","_downBind","_onDown","_moveBind","_onMove","_upBind","_onUp","connect","_loop","disconnect","removeEventListener","_isMouseDown","targetValue","preventDefault","diffX","diffY","wheelDelta","detail","add","_updatePosition","_updateCamera","tr","CameraOrtho","eye","up","ortho","left","right","top","bottom","near","far","target","edge1","edge2","diff","Ray","mOrigin","mDirection","scale","mPoint","result","directionDistance","dot","sqrt","distanceSqToPoint","v1","squaredDistance","mCenter","distanceToPoint","tca","d2","radius2","thc","t0","t1","at","mPlaneCenter","mNormal","denominator","mPA","mPB","mPC","backfaceCulling","cross","DdN","sign","DdQxE2","DdE1xQ","Qdn","Object3D","_needUpdate","_x","_y","_z","_sx","_sy","_sz","_rz","_position","_scale","_rotation","_matrixRotation","_matrixScale","_matrixTranslation","_matrixQuaternion","rotateX","rotateY","rotateZ","mul","mQuat","ShaderLibs","simpleColorFrag","generalVert","copyFrag","basicVert","skyboxVert","skyboxFrag","PassMacro","_passes","pass","PassVBlur","mQuality","fsBlur5","fsBlur9","fsBlur13","PassBlurBase","fs","PassHBlur","GLM","VERSION","Alfrid","glm","CubeFrameBuffer","Scheduler","EventDispatcher","TweenNumber","CameraCube","QuatRotation","ObjLoader","ColladaParser","HDRLoader","BatchCopy","BatchAxis","BatchBall","BatchLine","BatchSkybox","BatchSky","BatchFXAA","BatchDotsPlane","Scene","View","View3D","EffectComposer","PassBlur","PassFxaa","MultisampleFrameBuffer","TransformFeedbackObject","s","al","getAndApplyExtension","suffix","suffixRE","RegExp","key","val","unsuffixedKey","replace","substring","exposeAttributes","LINES","TRIANGLES","SCISSOR_TEST","hasChecked","_float","checkFloat","extFloat","halfFloat","checkHalfFloat","HALF_FLOAT","extHalfFloat","HALF_FLOAT_OES","_size","glTexture","_frameBuffers","status","mTargetIndex","_numSample","numSample","frameBufferColor","renderBufferColor","createRenderbuffer","renderBufferDepth","renderbufferStorageMultisample","RGBA8","framebufferRenderbuffer","READ_FRAMEBUFFER","clearBufferfv","COLOR","blitFramebuffer","_vs","_fs","_meshCurrent","_meshTarget","_numPoints","createTransformFeedback","mVaryingName","isTransformFeedback","STREAM_COPY","generate","drawTransformFeedback","_swap","supportsCustomEvents","newTestCustomEvent","createEvent","_eventListeners","aEventType","aFunction","currentArray","currentArrayLength","splice","aEvent","eventType","currentTarget","theError","newEvent","dispatcher","dispatchEvent","currentEventListeners","_copyArray","currentFunction","call","aDetail","initCustomEvent","dispatchCustomEvent","objectName","hasOwnProperty","aArray","Array","Easing","Linear","None","k","Quadratic","In","Out","InOut","Cubic","Quartic","Quintic","Sinusoidal","Exponential","pow","Circular","Elastic","p","asin","Back","Bounce","in","out","inOut","getFunc","mSpeed","_startValue","_counter","speed","newCounter","f","m","_vZaxis","_zAxis","preMouse","mouse","quat","tempRotation","_rotateZMargin","_offset","_slerp","_isLocked","_diffX","_diffY","_updateRotation","_currDiffX","_currDiffY","_isRotateZ","_targetQuat","setTo","mTempRotation","angle","slerp","transformQuat","CAMERA_SETTINGS","setPerspective","parseObj","objStr","finalNormals","uvs","vertexPattern","normalPattern","uvPattern","facePattern1","facePattern2","facePattern3","facePattern4","parseVertexIndex","parseInt","parseNormalIndex","parseUVIndex","addVertex","addUV","addNormal","addFace","ua","ub","uc","ud","na","nb","nc","nd","id","line","trim","charAt","exec","parseFloat","_generateMeshes","maxNumVertices","hasNormals","hasUVs","meshes","lastIndex","oCopy","sliceNum","tmpIndex","parse","loader","radiancePattern","commentPattern","exposurePattern","formatPattern","widthHeightPattern","readPixelsRawRLE","fileOffset","scanlineWidth","numScanlines","rgbe","scanlineBuffer","ptr","ptrEnd","buf","bufferLength","readBuf","bytesRead","readBufOffset","readPixelsRaw","numpixels","numExpected","numRead","Error","parseHdr","ArrayBuffer","Uint8Array","NEW_LINE","readLine","String","fromCharCode","gamma","rle","match","Number","floatData","floatOffset","generateMesh","caches","triangles","glMesh","bufferFlattenData","load","mPath","mCallback","_params","_returnTexture","passes","addPass","fboTarget","hasFbo","fbo","_fboTarget","render","getTexture","_fboCurrent","_current","vBlur","hBlur","vs","colors","color","opacity","mPositionA","mPositionB","seg","_children","_matrixIdentity","_initViews","resize","setAspectRatio","aspectRatio","mChild","child","toRender","orbitalControl","cameraOrtho","setMatrices","update","_renderChildren","mStrVertex","mStrFrag","_matrixTemp"],"mappings":"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,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU,KAAK;AACf,UAAU,KAAK;AACf;AACA,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU,KAAK;AACf,UAAU,KAAK;AACf;AACA,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5vBA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA,mBAAmB,OAAO;AAC1B,oBAAoB,iBAAiB;AACrC;AACA,oBAAoB,iBAAiB;AACrC;;AAEA;AACA;AACA,CAAC;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvwBD;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA,mBAAmB,OAAO;AAC1B,oBAAoB,iBAAiB,iBAAiB;AACtD;AACA,oBAAoB,iBAAiB,iBAAiB;AACtD;;AAEA;AACA;AACA,CAAC;AAAA;AAAA;;;;;;;;;;;;;;kBC3lBc,UAAUlgB,EAAV,EAAckE,aAAd,EAA6B8G,IAA7B,EAAmC;AACjD,KAAG9G,cAAc8c,cAAd,KAAiCzf,SAApC,EAA+C;AAAE2C,gBAAc8c,cAAd,GAA+B,EAA/B;AAAoC;AACrF,KAAG9c,cAAc8c,cAAd,CAA6BhW,IAA7B,MAAuCzJ,SAA1C,EAAqD;AACpD2C,gBAAc8c,cAAd,CAA6BhW,IAA7B,IAAqChL,GAAGihB,iBAAH,CAAqB/c,aAArB,EAAoC8G,IAApC,CAArC;AACA;;AAED,QAAO9G,cAAc8c,cAAd,CAA6BhW,IAA7B,CAAP;AACA,C;;AAAA,C,CATD,kB;;;;;;;ACAA;;AAEA;;;;;;;;AAEA;;;;AACA;;;;;;;;AACA,IAAIhL,WAAJ;AACA,IAAMkhB,mBAAmB,OAAzB;AACA,IAAMC,kBAAkB,CAAxB;AACA,IAAMC,kBAAkB,EAAxB;;IAEMC,a;AACL,wBAAYpM,OAAZ,EAA8D;AAAA,MAAzC3T,WAAyC,uEAA3B,EAA2B;AAAA,MAAvBggB,aAAuB,uEAAP,KAAO;;AAAA;;AAC7DthB,OAAK,iBAAGA,EAAR;;AAEA,MAAGshB,aAAH,EAAkB;AACjB,QAAK9L,OAAL,GAAeP,OAAf;AACA;AACA;;AAED,MAAIsM,aAAatM,QAAQ1S,MAAR,GAAiB,CAAlC;AACA,MAAG0S,QAAQ,CAAR,EAAWuM,WAAd,EAA2B;AAC1BD,gBAAatM,QAAQ,CAAR,EAAWuM,WAAX,GAAyB,CAAtC;AACA;;AAED,OAAKhM,OAAL,GAAiBxV,GAAGkW,aAAH,EAAjB;AACA,OAAKK,SAAL,GAAiBjV,YAAYiV,SAAZ,IAAyBvW,GAAGwW,MAA7C;AACA,OAAKE,SAAL,GAAiBpV,YAAYoV,SAAZ,IAAyB1W,GAAG2Y,oBAA7C;AACA,OAAK9B,KAAL,GAAiBvV,YAAYuV,KAAZ,IAAqB7W,GAAGiX,aAAzC;AACA,OAAKD,KAAL,GAAiB1V,YAAY0V,KAAZ,IAAqBhX,GAAGiX,aAAzC;;AAEA,MAAG,CAACsK,UAAD,IAAe,KAAK7K,SAAL,IAAkB1W,GAAG2Y,oBAAvC,EAA6D;AAC5D,QAAKjC,SAAL,GAAiB1W,GAAGwW,MAApB;AACA;;AAEDxW,KAAGkX,WAAH,CAAelX,GAAGyhB,gBAAlB,EAAoC,KAAKjM,OAAzC;AACA,MAAMkM,UAAU,CACf1hB,GAAG2hB,2BADY,EACiB3hB,GAAG4hB,2BADpB,EAEf5hB,GAAG6hB,2BAFY,EAEiB7hB,GAAG8hB,2BAFpB,EAGf9hB,GAAG+hB,2BAHY,EAGiB/hB,GAAGgiB,2BAHpB,CAAhB;;AAOA,MAAIC,YAAY,CAAhB;AACA,MAAI/O,QAAQ,CAAZ;AACA+O,cAAYhN,QAAQ1S,MAAR,GAAiB,CAA7B;AACA,OAAK0f,SAAL,GAAiBA,SAAjB;;AAEA,MAAIV,UAAJ,EAAgB;AACf,QAAK,IAAItT,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B;AAC3B,SAAK,IAAI3L,IAAI,CAAb,EAAgBA,IAAI2f,SAApB,EAA+B3f,GAA/B,EAAoC;AACnCtC,QAAGoX,WAAH,CAAepX,GAAGqX,mBAAlB,EAAuC,KAAvC;;AAEAnE,aAAQjF,IAAIgU,SAAJ,GAAgB3f,CAAxB;AACA,SAAG2S,QAAQ/B,KAAR,EAAeuE,KAAlB,EAAyB;AACxBzX,SAAGuX,UAAH,CAAcmK,QAAQzT,CAAR,CAAd,EAA0B3L,CAA1B,EAA6BtC,GAAGwX,IAAhC,EAAsCvC,QAAQ/B,KAAR,EAAeuE,KAAf,CAAqB,CAArB,CAAtC,EAA+DxC,QAAQ/B,KAAR,EAAeuE,KAAf,CAAqB,CAArB,CAA/D,EAAwF,CAAxF,EAA2FzX,GAAGwX,IAA9F,EAAoGxX,GAAG2Q,KAAvG,EAA8GsE,QAAQ/B,KAAR,EAAepD,IAA7H;AACA,MAFD,MAEO;AACN9P,SAAGuX,UAAH,CAAcmK,QAAQzT,CAAR,CAAd,EAA0B3L,CAA1B,EAA6BtC,GAAGwX,IAAhC,EAAsCxX,GAAGwX,IAAzC,EAA+CxX,GAAG0X,aAAlD,EAAiEzC,QAAQ/B,KAAR,CAAjE;AACA;;AAEDlT,QAAG2X,aAAH,CAAiB3X,GAAGyhB,gBAApB,EAAsCzhB,GAAG8X,cAAzC,EAAyD,KAAKjB,KAA9D;AACA7W,QAAG2X,aAAH,CAAiB3X,GAAGyhB,gBAApB,EAAsCzhB,GAAG+X,cAAzC,EAAyD,KAAKf,KAA9D;AACAhX,QAAG2X,aAAH,CAAiB3X,GAAGyhB,gBAApB,EAAsCzhB,GAAG4X,kBAAzC,EAA6D,KAAKrB,SAAlE;AACAvW,QAAG2X,aAAH,CAAiB3X,GAAGyhB,gBAApB,EAAsCzhB,GAAG6X,kBAAzC,EAA6D,KAAKnB,SAAlE;AACA;AACD;AACD,GAlBD,MAkBO;AACN,OAAIxD,SAAQ,CAAZ;AACA,QAAK,IAAIjF,KAAI,CAAb,EAAgBA,KAAI,CAApB,EAAuBA,IAAvB,EAA4B;AAC3BiF,aAAQjF,KAAIgU,SAAZ;AACAjiB,OAAGoX,WAAH,CAAepX,GAAGqX,mBAAlB,EAAuC,KAAvC;AACA,QAAGpC,QAAQ/B,MAAR,EAAeuE,KAAlB,EAAyB;AACxBzX,QAAGuX,UAAH,CAAcmK,QAAQzT,EAAR,CAAd,EAA0B,CAA1B,EAA6BjO,GAAGwX,IAAhC,EAAsCvC,QAAQ/B,MAAR,EAAeuE,KAAf,CAAqB,CAArB,CAAtC,EAA+DxC,QAAQ/B,MAAR,EAAeuE,KAAf,CAAqB,CAArB,CAA/D,EAAwF,CAAxF,EAA2FzX,GAAGwX,IAA9F,EAAoGxX,GAAG2Q,KAAvG,EAA8GsE,QAAQ/B,MAAR,EAAepD,IAA7H;AACA,KAFD,MAEO;AACN9P,QAAGuX,UAAH,CAAcmK,QAAQzT,EAAR,CAAd,EAA0B,CAA1B,EAA6BjO,GAAGwX,IAAhC,EAAsCxX,GAAGwX,IAAzC,EAA+CxX,GAAG0X,aAAlD,EAAiEzC,QAAQ/B,MAAR,CAAjE;AACA;AACDlT,OAAG2X,aAAH,CAAiB3X,GAAGyhB,gBAApB,EAAsCzhB,GAAG8X,cAAzC,EAAyD,KAAKjB,KAA9D;AACA7W,OAAG2X,aAAH,CAAiB3X,GAAGyhB,gBAApB,EAAsCzhB,GAAG+X,cAAzC,EAAyD,KAAKf,KAA9D;AACAhX,OAAG2X,aAAH,CAAiB3X,GAAGyhB,gBAApB,EAAsCzhB,GAAG4X,kBAAzC,EAA6D,KAAKrB,SAAlE;AACAvW,OAAG2X,aAAH,CAAiB3X,GAAGyhB,gBAApB,EAAsCzhB,GAAG6X,kBAAzC,EAA6D,KAAKnB,SAAlE;AACA;;AAED1W,MAAGsY,cAAH,CAAkBtY,GAAGyhB,gBAArB;AACA;;AAEDzhB,KAAGkX,WAAH,CAAelX,GAAGyhB,gBAAlB,EAAoC,IAApC;AACA;;AAID;;;;yBAEgB;AAAA,OAAXvO,KAAW,uEAAH,CAAG;;AACf,OAAG,CAAC,iBAAGjP,MAAP,EAAe;AAAE;AAAS;;AAE1BjE,MAAGuY,aAAH,CAAiBvY,GAAGwY,QAAH,GAActF,KAA/B;AACAlT,MAAGkX,WAAH,CAAelX,GAAGyhB,gBAAlB,EAAoC,KAAKjM,OAAzC;AACAxV,MAAGkiB,SAAH,CAAa,iBAAGje,MAAH,CAAUgG,eAAV,CAA0BiJ,KAA1B,CAAb,EAA+CA,KAA/C;AACA,QAAKuF,UAAL,GAAkBvF,KAAlB;AACA;;;2BAEQ;AACRlT,MAAGkX,WAAH,CAAelX,GAAGyhB,gBAAlB,EAAoC,IAApC;AACA;;;;;;AAIFJ,cAAcc,QAAd,GAAyB,SAASA,QAAT,CAAkBC,YAAlB,EAAgC;;AAExD,UAASC,KAAT,CAAehX,KAAf,EAAsBiX,GAAtB,EAA2BtK,GAA3B,EAAgC;AAC/B,MAAIsK,MAAMtK,GAAV,EAAe;AACd,UAAOqK,MAAMhX,KAAN,EAAa2M,GAAb,EAAkBsK,GAAlB,CAAP;AACA;;AAED,MAAIjX,QAAQiX,GAAZ,EAAiB,OAAOA,GAAP,CAAjB,KACK,IAAIjX,QAAQ2M,GAAZ,EAAiB,OAAOA,GAAP,CAAjB,KACA,OAAO3M,KAAP;AACL;;AAED;AACA,KAAMkX,WAAW,wBAAMH,YAAN,CAAjB;AAbwD,KAchDI,KAdgD,GActCD,QAdsC,CAchDC,KAdgD;;AAexD,KAAMC,SAAS,IAAIC,UAAJ,CAAeN,YAAf,EAA6B,CAA7B,EAAgChB,eAAhC,CAAf;AACA,KAAII,cAAc,CAAlB;AACA,KAAIgB,QAAQtB,gBAAZ,EAA8B;AAC7BM,gBAAcxN,KAAKgE,GAAL,CAAS,CAAT,EAAYyK,OAAOtB,eAAP,CAAZ,CAAd;AACA;AACD,KAAMwB,UAAUJ,SAASK,MAAT,CAAgBC,GAAhB,CAAoB,UAACC,GAAD,EAAS;AAC5C,MAAMC,WAAW,IAAI9Z,YAAJ,CAAiBmZ,aAAapZ,KAAb,CAAmB8Z,IAAIE,MAAvB,EAA+BF,IAAIE,MAAJ,GAAaF,IAAIvgB,MAAhD,CAAjB,CAAjB;AACA,SAAO;AACNuN,SAAMiT,QADA;AAENtL,UAAOqL,IAAIrL,KAFL;AAGN+J;AAHM,GAAP;AAKA,EAPe,CAAhB;;AASA,QAAO,IAAIH,aAAJ,CAAkBsB,OAAlB,CAAP;AACA,CA9BD;;kBAiCetB,a;;;;;;;AC5If;AACA;;;;;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAEA,IAAM4B,WAAW,SAAXA,QAAW,CAAUC,MAAV,EAAkBC,OAAlB,EAA2B;;AAE3C,KAAMnV,IAAImV,WAAW,EAArB;AACA,KAAGD,OAAOE,OAAV,EAAmB;AAClBpV,IAAElL,CAAF,GAAMogB,OAAOE,OAAP,CAAe,CAAf,EAAkBC,KAAxB;AACArV,IAAEjL,CAAF,GAAMmgB,OAAOE,OAAP,CAAe,CAAf,EAAkBE,KAAxB;AACA,EAHD,MAGO;AACNtV,IAAElL,CAAF,GAAMogB,OAAOK,OAAb;AACAvV,IAAEjL,CAAF,GAAMmgB,OAAOM,OAAb;AACA;;AAED,QAAOxV,CAAP;AACA,CAZD;;IAcMyV,c;AAEL,yBAAYN,OAAZ,EAA8D;AAAA;;AAAA,MAAzCO,eAAyC,uEAAvB9hB,MAAuB;AAAA,MAAf+hB,OAAe,uEAAL,GAAK;;AAAA;;AAC7D,OAAKC,OAAL,GAAuBT,OAAvB;AACA,OAAKU,eAAL,GAAuBH,eAAvB;AACA,OAAKI,MAAL,GAAuB,EAAvB;AACA,OAAKC,SAAL,GAAuB,EAAvB;AACA,OAAKC,MAAL,GAAuB,eAAK1jB,MAAL,EAAvB;AACA,OAAK2jB,GAAL,GAAuB,eAAKC,UAAL,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAAvB;AACA,OAAKC,MAAL,GAAuB,yBAAeR,OAAf,CAAvB;AACA,OAAK7F,QAAL,GAAuB,eAAKoG,UAAL,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,KAAKC,MAAL,CAAY9Y,KAAlC,CAAvB;AACA,OAAKmT,cAAL,GAAuB,eAAKle,MAAL,EAAvB;AACA,OAAK8jB,GAAL,GAAuB,yBAAe,CAAf,CAAvB;AACA,OAAKA,GAAL,CAAS9G,KAAT,CAAe,CAACtJ,KAAKC,EAAN,GAAW,CAA1B,EAA6BD,KAAKC,EAAL,GAAU,CAAvC;AACA,OAAKoQ,GAAL,GAAuB,yBAAe,CAAf,CAAvB;AACA,OAAKC,MAAL,GAAuB,CAAvB;AACA,OAAKC,MAAL,GAAuB,CAAvB;;AAEA,OAAKC,WAAL,GAAuB,KAAvB;AACA,OAAKC,eAAL,GAAuB,KAAvB;AACA,OAAKC,SAAL,GAAuB,KAAvB;AACA,OAAKC,WAAL,GAAoB,GAApB;;AAGA,OAAKC,UAAL,GAAkB,UAAC1c,CAAD;AAAA,UAAO,MAAK2c,QAAL,CAAc3c,CAAd,CAAP;AAAA,GAAlB;AACA,OAAK4c,SAAL,GAAiB,UAAC5c,CAAD;AAAA,UAAO,MAAK6c,OAAL,CAAa7c,CAAb,CAAP;AAAA,GAAjB;AACA,OAAK8c,SAAL,GAAiB,UAAC9c,CAAD;AAAA,UAAO,MAAK+c,OAAL,CAAa/c,CAAb,CAAP;AAAA,GAAjB;AACA,OAAKgd,OAAL,GAAe;AAAA,UAAM,MAAKC,KAAL,EAAN;AAAA,GAAf;;AAEA,OAAKC,OAAL;AACA,uBAAUtI,KAAV,CAAgB;AAAA,UAAM,MAAKuI,KAAL,EAAN;AAAA,GAAhB;AACA;;;;4BAES;AACT,QAAKC,UAAL;;AAEA,QAAKzB,eAAL,CAAqBvD,gBAArB,CAAsC,YAAtC,EAAoD,KAAKsE,UAAzD;AACA,QAAKf,eAAL,CAAqBvD,gBAArB,CAAsC,gBAAtC,EAAwD,KAAKsE,UAA7D;;AAEA,QAAKf,eAAL,CAAqBvD,gBAArB,CAAsC,WAAtC,EAAmD,KAAKwE,SAAxD;AACA,QAAKjB,eAAL,CAAqBvD,gBAArB,CAAsC,YAAtC,EAAoD,KAAKwE,SAAzD;AACA,QAAKjB,eAAL,CAAqBvD,gBAArB,CAAsC,WAAtC,EAAmD,KAAK0E,SAAxD;AACA,QAAKnB,eAAL,CAAqBvD,gBAArB,CAAsC,WAAtC,EAAmD,KAAK0E,SAAxD;AACApjB,UAAO0e,gBAAP,CAAwB,UAAxB,EAAoC,KAAK4E,OAAzC;AACAtjB,UAAO0e,gBAAP,CAAwB,SAAxB,EAAmC,KAAK4E,OAAxC;AACA;;;+BAEY;AACZ,QAAKrB,eAAL,CAAqB0B,mBAArB,CAAyC,YAAzC,EAAuD,KAAKX,UAA5D;AACA,QAAKf,eAAL,CAAqB0B,mBAArB,CAAyC,gBAAzC,EAA2D,KAAKX,UAAhE;;AAEA,QAAKf,eAAL,CAAqB0B,mBAArB,CAAyC,WAAzC,EAAsD,KAAKT,SAA3D;AACA,QAAKjB,eAAL,CAAqB0B,mBAArB,CAAyC,YAAzC,EAAuD,KAAKT,SAA5D;AACA,QAAKjB,eAAL,CAAqB0B,mBAArB,CAAyC,WAAzC,EAAsD,KAAKP,SAA3D;AACA,QAAKnB,eAAL,CAAqB0B,mBAArB,CAAyC,WAAzC,EAAsD,KAAKP,SAA3D;AACApjB,UAAO2jB,mBAAP,CAA2B,UAA3B,EAAuC,KAAKL,OAA5C;AACAtjB,UAAO2jB,mBAAP,CAA2B,SAA3B,EAAsC,KAAKL,OAA3C;AACA;;AAGD;;;;yBAEoB;AAAA,OAAfxa,MAAe,uEAAN,IAAM;;AACnB,QAAK8Z,WAAL,GAAmB9Z,MAAnB;AACA,QAAK+Z,eAAL,GAAuB/Z,MAAvB;AACA,QAAK8a,YAAL,GAAoB,KAApB;AACA;;;6BAEuB;AAAA,OAAf9a,MAAe,uEAAN,IAAM;;AACvB,QAAK8Z,WAAL,GAAmB9Z,MAAnB;AACA;;;iCAG2B;AAAA,OAAfA,MAAe,uEAAN,IAAM;;AAC3B,QAAK+Z,eAAL,GAAuB/Z,MAAvB;AACA;;;mCAG+B;AAAA,OAAjBkJ,QAAiB,uEAAN,IAAM;;AAC/B,QAAK8Q,SAAL,GAAiB9Q,QAAjB;AACA;;AAGD;;;;0BACQsP,M,EAAQ;AACf,OAAG,KAAKuB,eAAR,EAAyB;AAAE;AAAS;AACpC,QAAKe,YAAL,GAAoB,IAApB;AACAvC,YAASC,MAAT,EAAiB,KAAKY,MAAtB;AACAb,YAASC,MAAT,EAAiB,KAAKa,SAAtB;AACA,QAAKO,MAAL,GAAc,KAAKF,GAAL,CAASqB,WAAvB;AACA,QAAKlB,MAAL,GAAc,KAAKF,GAAL,CAASoB,WAAvB;AACA;;;0BAGOvC,M,EAAQ;AACf,OAAG,KAAKuB,eAAR,EAAyB;AAAE;AAAS;AACpCxB,YAASC,MAAT,EAAiB,KAAKY,MAAtB;AACA,OAAGZ,OAAOE,OAAV,EAAmB;AAAEF,WAAOwC,cAAP;AAA0B;;AAE/C,OAAG,KAAKF,YAAR,EAAsB;AACrB,QAAIG,QAAQ,EAAE,KAAK7B,MAAL,CAAYhhB,CAAZ,GAAgB,KAAKihB,SAAL,CAAejhB,CAAjC,CAAZ;AACA,QAAG,KAAK4hB,SAAR,EAAmB;AAAEiB,cAAS,CAAC,CAAV;AAAc;AACnC,SAAKtB,GAAL,CAAShZ,KAAT,GAAiB,KAAKkZ,MAAL,GAAcoB,QAAQ,IAAR,GAAe,KAAKhB,WAAnD;;AAEA,QAAIiB,QAAQ,EAAE,KAAK9B,MAAL,CAAY/gB,CAAZ,GAAgB,KAAKghB,SAAL,CAAehhB,CAAjC,CAAZ;AACA,QAAG,KAAK2hB,SAAR,EAAmB;AAAEkB,cAAS,CAAC,CAAV;AAAc;AACnC,SAAKxB,GAAL,CAAS/Y,KAAT,GAAiB,KAAKiZ,MAAL,GAAcsB,QAAQ,IAAR,GAAe,KAAKjB,WAAnD;AACA;AACD;;;0BAGO;AACP,OAAG,KAAKF,eAAR,EAAyB;AAAE;AAAS;AACpC,QAAKe,YAAL,GAAoB,KAApB;AACA;;;2BAGQtC,M,EAAQ;AAChB,OAAG,KAAKsB,WAAR,EAAqB;AAAE;AAAS;AAChC,OAAMxhB,IAAIkgB,OAAO2C,UAAjB;AACA,OAAMlR,IAAIuO,OAAO4C,MAAjB;AACA,OAAIza,QAAQ,CAAZ;AACA,OAAIsJ,CAAJ,EAAO;AACN,QAAI3R,CAAJ,EAAO;AACNqI,aAAQrI,IAAI2R,CAAJ,GAAQ,EAAR,GAAaA,CAAb,GAAiB,CAAjB,GAAqB,CAArB,GAAyB,CAAC,CAAlC,CADM,CAC+B;AACrC,KAFD,MAEO;AACNtJ,aAAQ,CAACsJ,CAAD,GAAK,CAAb,CADM,CACuB;AAC7B;AACD,IAND,MAMO;AACNtJ,YAAQrI,IAAI,GAAZ;AACA;;AAED,QAAKmhB,MAAL,CAAY4B,GAAZ,CAAgB,CAAC1a,KAAD,GAAS,CAAzB;AACA;;AAGD;;;;0BAEQ;;AAEP,QAAK2a,eAAL;;AAEA,OAAG,KAAKpC,OAAR,EAAiB;AAChB,SAAKqC,aAAL;AACA;AACD;;;oCAGiB;AACjB,QAAKnI,QAAL,CAAc,CAAd,IAAmB9J,KAAKI,GAAL,CAAS,KAAKgQ,GAAL,CAAS/Y,KAAlB,IAA2B,KAAK8Y,MAAL,CAAY9Y,KAA1D;AACA,OAAM6a,KAAKlS,KAAKM,GAAL,CAAS,KAAK8P,GAAL,CAAS/Y,KAAlB,IAA2B,KAAK8Y,MAAL,CAAY9Y,KAAlD;AACA,QAAKyS,QAAL,CAAc,CAAd,IAAmB9J,KAAKM,GAAL,CAAS,KAAK+P,GAAL,CAAShZ,KAAT,GAAiB2I,KAAKC,EAAL,GAAU,GAApC,IAA2CiS,EAA9D;AACA,QAAKpI,QAAL,CAAc,CAAd,IAAmB9J,KAAKI,GAAL,CAAS,KAAKiQ,GAAL,CAAShZ,KAAT,GAAiB2I,KAAKC,EAAL,GAAU,GAApC,IAA2CiS,EAA9D;AACA,kBAAKH,GAAL,CAAS,KAAKjI,QAAd,EAAwB,KAAKA,QAA7B,EAAuC,KAAKU,cAA5C;AACA;;;kCAGe;AACf,QAAKoF,OAAL,CAAavF,MAAb,CAAoB,KAAKP,QAAzB,EAAmC,KAAKkG,MAAxC,EAAgD,KAAKC,GAArD;AACA;;AAGD;;;;;sBAGS;AACR,UAAO,KAAKG,GAAZ;AACA;;;sBAGQ;AACR,UAAO,KAAKC,GAAZ;AACA;;;;;;kBAIaZ,c;;;;;;;;;;;;;;;ACnMf;;;;AACA;;;;;;;;+eAHA;;IAKM0C,W;;;AACL,wBAAc;AAAA;;AAAA;;AAGb,MAAMC,MAAS,eAAKjI,KAAL,CAAW,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,CAAX,CAAf;AACA,MAAM6F,SAAS,eAAK1jB,MAAL,EAAf;AACA,MAAM+lB,KAAS,eAAKlI,KAAL,CAAW,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQ,CAAR,CAAX,CAAf;AACA,QAAKE,MAAL,CAAY+H,GAAZ,EAAiBpC,MAAjB,EAAyBqC,EAAzB;AACA,QAAKC,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,EAAkB,CAAlB,EAAqB,CAAC,CAAtB;AAPa;AAQb;;;;8BAGWC,I,EAAMC,K,EAAOC,G,EAAKC,M,EAA2B;AAAA,OAAnBC,IAAmB,uEAAd,GAAc;AAAA,OAATC,GAAS,uEAAL,GAAK;;AACxD,QAAKN,KAAL,CAAWC,IAAX,EAAiBC,KAAjB,EAAwBC,GAAxB,EAA6BC,MAA7B,EAAqCC,IAArC,EAA2CC,GAA3C;AACA;;;wBAGKL,I,EAAMC,K,EAAOC,G,EAAKC,M,EAA2B;AAAA,OAAnBC,IAAmB,uEAAd,GAAc;AAAA,OAATC,GAAS,uEAAL,GAAK;;AAClD,QAAKL,IAAL,GAAcA,IAAd;AACA,QAAKC,KAAL,GAAcA,KAAd;AACA,QAAKC,GAAL,GAAcA,GAAd;AACA,QAAKC,MAAL,GAAcA,MAAd;AACA/c,QAAK2c,KAAL,CAAW,KAAKzI,WAAhB,EAA6B0I,IAA7B,EAAmCC,KAAnC,EAA0CC,GAA1C,EAA+CC,MAA/C,EAAuDC,IAAvD,EAA6DC,GAA7D;AACA;;;;;;kBAKaT,W;;;;;;;;;;;;;qjBCjCf;;AAEA;;;;AAGA,IAAM3iB,IAAI,eAAKlD,MAAL,EAAV;AACA,IAAMiD,IAAI,eAAKjD,MAAL,EAAV;AACA,IAAM0R,IAAI,eAAK1R,MAAL,EAAV;AACA,IAAMumB,SAAS,eAAKvmB,MAAL,EAAf;AACA,IAAMwmB,QAAQ,eAAKxmB,MAAL,EAAd;AACA,IAAMymB,QAAQ,eAAKzmB,MAAL,EAAd;AACA,IAAMkR,SAAS,eAAKlR,MAAL,EAAf;AACA,IAAM0mB,OAAO,eAAK1mB,MAAL,EAAb;;IAEM2mB,G;AACL,cAAYC,OAAZ,EAAqBC,UAArB,EAAiC;AAAA;;AAChC,OAAKnH,MAAL,GAAc,eAAK7B,KAAL,CAAW+I,OAAX,CAAd;AACA,OAAKjH,SAAL,GAAiB,eAAK9B,KAAL,CAAWgJ,UAAX,CAAjB;AACA;;;;qBAEE9S,C,EAAG;AACL,kBAAKjQ,IAAL,CAAUyiB,MAAV,EAAkB,KAAK5G,SAAvB;AACA,kBAAKmH,KAAL,CAAWP,MAAX,EAAmBA,MAAnB,EAA2BxS,CAA3B;AACA,kBAAK0R,GAAL,CAASc,MAAT,EAAiBA,MAAjB,EAAyB,KAAK7G,MAA9B;;AAEA,UAAO6G,MAAP;AACA;;;yBAGM1D,O,EAAS;AACf,kBAAKpD,GAAL,CAAS,KAAKE,SAAd,EAAyBkD,OAAzB,EAAkC,KAAKnD,MAAvC;AACA,kBAAKpO,SAAL,CAAe,KAAKoO,MAApB,EAA4B,KAAKA,MAAjC;AACA;;;sCAEmBqH,M,EAAQ;AAC3B,OAAMC,SAAS,eAAKhnB,MAAL,EAAf;AACA,kBAAKyf,GAAL,CAASsH,MAAT,EAAiB,KAAKrH,MAAtB;AACA,OAAMuH,oBAAoB,eAAKC,GAAL,CAASF,MAAT,EAAiB,KAAKrH,SAAtB,CAA1B;;AAEA,OAAIsH,oBAAoB,CAAxB,EAA2B;AAC1B,WAAO,eAAKpJ,KAAL,CAAW,KAAK6B,MAAhB,CAAP;AACA;;AAED,kBAAK5b,IAAL,CAAUkjB,MAAV,EAAkB,KAAKrH,SAAvB;AACA,kBAAKmH,KAAL,CAAWE,MAAX,EAAmBA,MAAnB,EAA2BC,iBAA3B;AACA,kBAAKxB,GAAL,CAASuB,MAAT,EAAiBA,MAAjB,EAAyB,KAAKtH,MAA9B;;AAEA,UAAOsH,MAAP;AACA;;;kCAGeD,M,EAAQ;AACvB,UAAOrT,KAAKyT,IAAL,CAAU,KAAKC,iBAAL,CAAuBL,MAAvB,CAAV,CAAP;AACA;;;oCAGiBA,M,EAAQ;AACzB,OAAMM,KAAK,eAAKrnB,MAAL,EAAX;;AAEA,kBAAKyf,GAAL,CAAS4H,EAAT,EAAaN,MAAb,EAAqB,KAAKrH,MAA1B;AACA,OAAMuH,oBAAoB,eAAKC,GAAL,CAASG,EAAT,EAAa,KAAK1H,SAAlB,CAA1B;;AAEA,OAAIsH,oBAAoB,CAAxB,EAA2B;AAC1B,WAAO,eAAKK,eAAL,CAAqB,KAAK5H,MAA1B,EAAkCqH,MAAlC,CAAP;AACA;;AAED,kBAAKjjB,IAAL,CAAUujB,EAAV,EAAc,KAAK1H,SAAnB;AACA,kBAAKmH,KAAL,CAAWO,EAAX,EAAeA,EAAf,EAAmBJ,iBAAnB;AACA,kBAAKxB,GAAL,CAAS4B,EAAT,EAAaA,EAAb,EAAiB,KAAK3H,MAAtB;AACA,UAAO,eAAK4H,eAAL,CAAqBD,EAArB,EAAyBN,MAAzB,CAAP;AACA;;;mCAGgBQ,O,EAASlE,O,EAAS;AAClC,UAAO,KAAKmE,eAAL,CAAqBD,OAArB,KAAiClE,OAAxC;AACA;;;kCAGekE,O,EAASlE,O,EAAS;AACjC,OAAMgE,KAAK,eAAKrnB,MAAL,EAAX;AACA,kBAAKyf,GAAL,CAAS4H,EAAT,EAAaE,OAAb,EAAsB,KAAK7H,MAA3B;AACA,OAAM+H,MAAM,eAAKP,GAAL,CAASG,EAAT,EAAa,KAAK1H,SAAlB,CAAZ;AACA,OAAM+H,KAAK,eAAKR,GAAL,CAASG,EAAT,EAAaA,EAAb,IAAmBI,MAAMA,GAApC;AACA,OAAME,UAAUtE,UAAUA,OAA1B;;AAEA,OAAGqE,KAAKC,OAAR,EAAiB,OAAO,IAAP;;AAEjB,OAAMC,MAAMlU,KAAKyT,IAAL,CAAUQ,UAAUD,EAApB,CAAZ;;AAEA,OAAMG,KAAKJ,MAAMG,GAAjB;;AAEA,OAAME,KAAKL,MAAMG,GAAjB;;AAEA,OAAGC,KAAK,CAAL,IAAUC,KAAK,CAAlB,EAAqB,OAAO,IAAP;;AAErB,OAAGD,KAAK,CAAR,EAAW,OAAO,KAAKE,EAAL,CAAQD,EAAR,CAAP;;AAEX,UAAO,KAAKC,EAAL,CAAQF,EAAR,CAAP;AACA;;;kCAGeG,Y,EAAcC,O,EAAS;AACtC,OAAMC,cAAc,eAAKhB,GAAL,CAASe,OAAT,EAAkB,KAAKtI,SAAvB,CAApB;;AAEA,OAAGuI,gBAAgB,CAAnB,EAAsB,CACrB;AACD;;;oCAGiBC,G,EAAKC,G,EAAKC,G,EAA6B;AAAA,OAAxBC,eAAwB,uEAAN,IAAM;;AACxD,kBAAKxkB,IAAL,CAAUZ,CAAV,EAAailB,GAAb;AACA,kBAAKrkB,IAAL,CAAUb,CAAV,EAAamlB,GAAb;AACA,kBAAKtkB,IAAL,CAAU4N,CAAV,EAAa2W,GAAb;;AAEA;AACA;AACA;AACA;;AAEA,kBAAK5I,GAAL,CAAS+G,KAAT,EAAgBvjB,CAAhB,EAAmBC,CAAnB;AACA,kBAAKuc,GAAL,CAASgH,KAAT,EAAgB/U,CAAhB,EAAmBxO,CAAnB;AACA,kBAAKqlB,KAAL,CAAWrX,MAAX,EAAmBsV,KAAnB,EAA0BC,KAA1B;;AAEA,OAAI+B,MAAM,eAAKtB,GAAL,CAAS,KAAKvH,SAAd,EAAyBzO,MAAzB,CAAV;AACA,OAAIuX,aAAJ;;AAEA,OAAID,MAAM,CAAV,EAAa;AACZ,QAAIF,eAAJ,EAAqB;AAAE,YAAO,IAAP;AAAc;AACrCG,WAAO,CAAP;AACA,IAHD,MAGO,IAAID,MAAM,CAAV,EAAa;AACnBC,WAAO,CAAC,CAAR;AACAD,UAAM,CAAEA,GAAR;AACA,IAHM,MAGA;AACN,WAAO,IAAP;AACA;;AAED,kBAAK/I,GAAL,CAASiH,IAAT,EAAe,KAAKhH,MAApB,EAA4Bxc,CAA5B;;AAEA,kBAAKqlB,KAAL,CAAW9B,KAAX,EAAkBC,IAAlB,EAAwBD,KAAxB;AACA,OAAMiC,SAASD,OAAO,eAAKvB,GAAL,CAAS,KAAKvH,SAAd,EAAyB8G,KAAzB,CAAtB;AACA,OAAIiC,SAAS,CAAb,EAAgB;AAAG,WAAO,IAAP;AAAe;;AAElC,kBAAKH,KAAL,CAAW/B,KAAX,EAAkBA,KAAlB,EAAyBE,IAAzB;AACA,OAAMiC,SAASF,OAAO,eAAKvB,GAAL,CAAS,KAAKvH,SAAd,EAAyB6G,KAAzB,CAAtB;AACA,OAAImC,SAAS,CAAb,EAAgB;AAAE,WAAO,IAAP;AAAc;;AAEhC,OAAGD,SAASC,MAAT,GAAkBH,GAArB,EAA0B;AAAE,WAAO,IAAP;AAAc;;AAE1C,OAAMI,MAAM,CAAEH,IAAF,GAAS,eAAKvB,GAAL,CAASR,IAAT,EAAexV,MAAf,CAArB;AACA,OAAG0X,MAAM,CAAT,EAAY;AAAE,WAAO,IAAP;AAAc;;AAE5B,UAAO,KAAKb,EAAL,CAAQa,MAAMJ,GAAd,CAAP;AACA;;;;;;kBAIa7B,G;;;;;;;;;;;;;qjBC5Jf;;AAEA;;;;IAEMkC,Q;AAEL,qBAAc;AAAA;;AACb,OAAKC,WAAL,GAAmB,IAAnB;;AAEA,OAAKC,EAAL,GAAU,CAAV;AACA,OAAKC,EAAL,GAAU,CAAV;AACA,OAAKC,EAAL,GAAU,CAAV;;AAEA,OAAKC,GAAL,GAAW,CAAX;AACA,OAAKC,GAAL,GAAW,CAAX;AACA,OAAKC,GAAL,GAAW,CAAX;;AAEA,OAAKtF,GAAL,GAAW,CAAX;AACA,OAAKC,GAAL,GAAW,CAAX;AACA,OAAKsF,GAAL,GAAW,CAAX;;AAEA,OAAKC,SAAL,GAAiB,eAAKtpB,MAAL,EAAjB;AACA,OAAKupB,MAAL,GAAc,eAAK3F,UAAL,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAAd;AACA,OAAK4F,SAAL,GAAiB,eAAKxpB,MAAL,EAAjB;;AAEA,OAAKI,OAAL,GAAe,eAAKJ,MAAL,EAAf;AACA,OAAKypB,eAAL,GAAuB,eAAKzpB,MAAL,EAAvB;AACA,OAAK0pB,YAAL,GAAoB,eAAK1pB,MAAL,EAApB;AACA,OAAK2pB,kBAAL,GAA0B,eAAK3pB,MAAL,EAA1B;AACA,OAAK4pB,iBAAL,GAAyB,eAAK5pB,MAAL,EAAzB;AACA,OAAKqd,KAAL,GAAa,eAAKrd,MAAL,EAAb;AACA;;;;4BAES;AACT,kBAAKqR,GAAL,CAAS,KAAKkY,MAAd,EAAsB,KAAKL,GAA3B,EAAgC,KAAKC,GAArC,EAA0C,KAAKC,GAA/C;AACA,kBAAK/X,GAAL,CAAS,KAAKmY,SAAd,EAAyB,KAAK1F,GAA9B,EAAmC,KAAKC,GAAxC,EAA6C,KAAKsF,GAAlD;AACA,kBAAKhY,GAAL,CAAS,KAAKiY,SAAd,EAAyB,KAAKP,EAA9B,EAAkC,KAAKC,EAAvC,EAA2C,KAAKC,EAAhD;;AAEA,kBAAKvoB,QAAL,CAAc,KAAKipB,kBAAnB,EAAuC,KAAKA,kBAA5C;AACA,kBAAKjpB,QAAL,CAAc,KAAKgpB,YAAnB,EAAiC,KAAKA,YAAtC;AACA,kBAAKhpB,QAAL,CAAc,KAAK+oB,eAAnB,EAAoC,KAAKA,eAAzC;;AAEA,kBAAKI,OAAL,CAAa,KAAKJ,eAAlB,EAAmC,KAAKA,eAAxC,EAAyD,KAAK3F,GAA9D;AACA,kBAAKgG,OAAL,CAAa,KAAKL,eAAlB,EAAmC,KAAKA,eAAxC,EAAyD,KAAK1F,GAA9D;AACA,kBAAKgG,OAAL,CAAa,KAAKN,eAAlB,EAAmC,KAAKA,eAAxC,EAAyD,KAAKJ,GAA9D;;AAGA,kBAAKrL,QAAL,CAAc,KAAK4L,iBAAnB,EAAsC,KAAKvM,KAA3C;AACA,kBAAK2M,GAAL,CAAS,KAAKP,eAAd,EAA+B,KAAKG,iBAApC,EAAuD,KAAKH,eAA5D;;AAEA,kBAAK3C,KAAL,CAAW,KAAK4C,YAAhB,EAA8B,KAAKA,YAAnC,EAAiD,KAAKH,MAAtD;AACA,kBAAKtL,SAAL,CAAe,KAAK0L,kBAApB,EAAwC,KAAKA,kBAA7C,EAAiE,KAAKL,SAAtE;;AAEA,kBAAKU,GAAL,CAAS,KAAK5pB,OAAd,EAAuB,KAAKupB,kBAA5B,EAAgD,KAAKF,eAArD;AACA,kBAAKO,GAAL,CAAS,KAAK5pB,OAAd,EAAuB,KAAKA,OAA5B,EAAqC,KAAKspB,YAA1C;;AAEA,QAAKZ,WAAL,GAAmB,KAAnB;AACA;;;4CAGyBmB,K,EAAO;AAChC,kBAAKnmB,IAAL,CAAU,KAAKuZ,KAAf,EAAsB4M,KAAtB;AACA,QAAKnB,WAAL,GAAmB,IAAnB;AACA;;;sBAGY;AACZ,OAAG,KAAKA,WAAR,EAAqB;AAAE,SAAKrM,OAAL;AAAiB;AACxC,UAAO,KAAKrc,OAAZ;AACA;;;sBAEO;AAAE,UAAO,KAAK2oB,EAAZ;AAAiB,G;oBACrB3e,M,EAAQ;AACb,QAAK0e,WAAL,GAAmB,IAAnB;AACA,QAAKC,EAAL,GAAU3e,MAAV;AACA;;;sBAEO;AAAE,UAAO,KAAK4e,EAAZ;AAAiB,G;oBACrB5e,M,EAAQ;AACb,QAAK0e,WAAL,GAAmB,IAAnB;AACA,QAAKE,EAAL,GAAU5e,MAAV;AACA;;;sBAEO;AAAE,UAAO,KAAK6e,EAAZ;AAAiB,G;oBACrB7e,M,EAAQ;AACb,QAAK0e,WAAL,GAAmB,IAAnB;AACA,QAAKG,EAAL,GAAU7e,MAAV;AACA;;;sBAGY;AAAE,UAAO,KAAK8e,GAAZ;AAAkB,G;oBACtB9e,M,EAAQ;AAClB,QAAK0e,WAAL,GAAmB,IAAnB;AACA,QAAKI,GAAL,GAAW9e,MAAX;AACA;;;sBAEY;AAAE,UAAO,KAAK+e,GAAZ;AAAkB,G;oBACtB/e,M,EAAQ;AAClB,QAAK0e,WAAL,GAAmB,IAAnB;AACA,QAAKK,GAAL,GAAW/e,MAAX;AACA;;;sBAEY;AAAE,UAAO,KAAKgf,GAAZ;AAAkB,G;oBACtBhf,M,EAAQ;AAClB,QAAK0e,WAAL,GAAmB,IAAnB;AACA,QAAKM,GAAL,GAAWhf,MAAX;AACA;;;sBAGe;AAAE,UAAO,KAAK0Z,GAAZ;AAAkB,G;oBACtB1Z,M,EAAQ;AACrB,QAAK0e,WAAL,GAAmB,IAAnB;AACA,QAAKhF,GAAL,GAAW1Z,MAAX;AACA;;;sBAEe;AAAE,UAAO,KAAK2Z,GAAZ;AAAkB,G;oBACtB3Z,M,EAAQ;AACrB,QAAK0e,WAAL,GAAmB,IAAnB;AACA,QAAK/E,GAAL,GAAW3Z,MAAX;AACA;;;sBAEe;AAAE,UAAO,KAAKif,GAAZ;AAAkB,G;oBACtBjf,M,EAAQ;AACrB,QAAK0e,WAAL,GAAmB,IAAnB;AACA,QAAKO,GAAL,GAAWjf,MAAX;AACA;;;;;;kBAKaye,Q;;;;;;;AClIf;;AAEA;;;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMqB,aAAa;AAClBC,uCADkB;AAElBtV,uCAFkB;AAGlBuV,+BAHkB;AAIlBC,yBAJkB;AAKlBC,2BALkB;AAMlBC,6BANkB;AAOlBC;AAPkB,CAAnB;;kBAWeN,U;;;;;;ACvBf,2GAA2G,oDAAoD,+BAA+B,yBAAyB,8BAA8B,2BAA2B,iCAAiC,6BAA6B,0BAA0B,qBAAqB,+BAA+B,uBAAuB,qBAAqB,4CAA4C,8BAA8B,oFAAoF,sCAAsC,uDAAuD,GAAG,C;;;;;;ACAtsB,8FAA8F,oDAAoD,+BAA+B,yBAAyB,8BAA8B,2BAA2B,iCAAiC,+BAA+B,uBAAuB,uBAAuB,qBAAqB,+BAA+B,wBAAwB,wBAAwB,wBAAwB,8FAA8F,kCAAkC,kCAAkC,sBAAsB,GAAG,C;;;;;;ACAxqB,kGAAkG,iDAAiD,6BAA6B,uBAAuB,qBAAqB,mDAAmD,GAAG,C;;;;;;;;;;;;;;;;;ACAlR;;IAEMO,S;AACL,sBAAc;AAAA;;AACb,OAAKC,OAAL,GAAe,EAAf;AACA;;;;0BAEOC,I,EAAM;AACb,QAAKD,OAAL,CAAa7f,IAAb,CAAkB8f,IAAlB;AACA;;;sBAEY;AACZ,UAAO,KAAKD,OAAZ;AACA;;;;;;kBAGaD,S;;;;;;;;;;;;;ACdf;;;;;;;;;;+eAFA;;IAIMG,S;;;AACL,sBAAoD;AAAA,MAAxCC,QAAwC,uEAA7B,CAA6B;AAAA,MAA1BlkB,MAA0B;AAAA,MAAlBC,OAAkB;AAAA,MAATgO,OAAS;;AAAA;;AAAA,+GAC7CiW,QAD6C,EACnC,CAAC,CAAD,EAAI,CAAJ,CADmC,EAC3BlkB,MAD2B,EACnBC,OADmB,EACVgO,OADU;AAEnD;;;;;kBAGagW,S;;;;;;;;;;;;;ACRf;;;;AACA;;;;;;;;;;+eAHA;;AAKA,IAAME,UAAU,mBAAA/iB,CAAQ,EAAR,CAAhB;AACA,IAAMgjB,UAAU,mBAAAhjB,CAAQ,EAAR,CAAhB;AACA,IAAMijB,WAAW,mBAAAjjB,CAAQ,EAAR,CAAjB;;IAEMkjB,Y;;;AACL,yBAAqE;AAAA,MAAzDJ,QAAyD,uEAA9C,CAA8C;AAAA,MAA3ChE,UAA2C;AAAA,MAA/BlgB,MAA+B;AAAA,MAAvBC,OAAuB;AAAA,MAAdgO,OAAc,uEAAJ,EAAI;;AAAA;;AACpE,MAAIsW,WAAJ;AACA,UAAOL,QAAP;AACA,QAAK,CAAL;AACA;AACCK,SAAKJ,OAAL;AACA;AACD,QAAK,CAAL;AACCI,SAAKH,OAAL;AACA;AACD,QAAK,EAAL;AACCG,SAAKF,QAAL;AACA;;AAVD;;AAFoE,0HAe9DE,EAf8D,EAe1DvkB,MAf0D,EAelDC,OAfkD,EAezCgO,OAfyC;;AAgBpE,QAAKpQ,OAAL,CAAa,YAAb,EAA2BqiB,UAA3B;AACA,QAAKriB,OAAL,CAAa,aAAb,EAA4B,CAAC,iBAAGuC,KAAJ,EAAW,iBAAGC,MAAd,CAA5B;AAjBoE;AAkBpE;;;;;kBAGaikB,Y;;;;;;;;;;;;;AC7Bf;;;;;;;;;;+eAFA;;IAIME,S;;;AACL,sBAAoD;AAAA,MAAxCN,QAAwC,uEAA7B,CAA6B;AAAA,MAA1BlkB,MAA0B;AAAA,MAAlBC,OAAkB;AAAA,MAATgO,OAAS;;AAAA;;AAAA,+GAC7CiW,QAD6C,EACnC,CAAC,CAAD,EAAI,CAAJ,CADmC,EAC3BlkB,MAD2B,EACnBC,OADmB,EACVgO,OADU;AAEnD;;;;;kBAGauW,S;;;;;;ACVf,oFAAoF,gDAAgD,4BAA4B,2BAA2B,wCAAwC,mJAAmJ,iBAAiB,uCAAuC,oFAAoF,mFAAmF,mFAAmF,kFAAkF,gEAAgE,4CAA4C,sCAAsC,sCAAsC,sCAAsC,sCAAsC,sCAAsC,gFAAgF,gFAAgF,iBAAiB,uDAAuD,uDAAuD,0IAA0I,0EAA0E,4JAA4J,6LAA6L,8KAA8K,sCAAsC,mFAAmF,4CAA4C,mBAAmB,GAAG,qBAAqB,qCAAqC,2BAA2B,GAAG,C;;;;;;;;;;;;;qjBCAjzE;;AAaA;;;AAIA;;;AAQA;;;AAMA;;;AAGA;;;AAGA;;;AAMA;;;AAUA;;;AAnDA;;IAAYC,G;;AACZ;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;AACA;;;;AAGA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;AAGA;;;;AAGA;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAIA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;AAGA,IAAMC,UAAU,QAAhB;;IAEMC,M;AACL,mBAAc;AAAA;;AACb,OAAKC,GAAL,GAAyBH,GAAzB;AACA,OAAKvjB,EAAL;AACA,OAAKlI,MAAL;AACA,OAAK2J,QAAL;AACA,OAAKkM,SAAL;AACA,OAAKuL,aAAL;AACA,OAAKnT,IAAL;AACA,OAAKoE,IAAL;AACA,OAAKjF,KAAL;AACA,OAAKyM,WAAL;AACA,OAAKgS,eAAL;AACA,OAAKC,SAAL;AACA,OAAKC,eAAL;AACA,OAAKxP,UAAL;AACA,OAAKyP,WAAL;AACA,OAAKvO,MAAL;AACA,OAAKyI,WAAL;AACA,OAAKpH,iBAAL;AACA,OAAKkI,GAAL;AACA,OAAKiF,UAAL;AACA,OAAKzI,cAAL;AACA,OAAK0I,YAAL;AACA,OAAKjM,YAAL;AACA,OAAKkM,SAAL;AACA,OAAKC,aAAL;AACA,OAAKC,SAAL;AACA,OAAKC,SAAL;AACA,OAAKC,SAAL;AACA,OAAKC,SAAL;AACA,OAAKA,SAAL;AACA,OAAKC,SAAL;AACA,OAAKC,WAAL;AACA,OAAKC,QAAL;AACA,OAAKC,SAAL;AACA,OAAKC,cAAL;AACA,OAAKC,KAAL;AACA,OAAKC,IAAL;AACA,OAAKC,MAAL;AACA,OAAK9D,QAAL;AACA,OAAKqB,UAAL;;AAEA,OAAK0C,cAAL;AACA,OAAKlY,IAAL;AACA,OAAK+V,SAAL;AACA,OAAKoC,QAAL;AACA,OAAKjC,SAAL;AACA,OAAKO,SAAL;AACA,OAAK2B,QAAL;;AAEA,OAAKC,sBAAL;AACA,OAAKC,uBAAL;;AAGA;;AAEA,OAAI,IAAMC,CAAV,IAAe7B,GAAf,EAAoB;AACnB,OAAGA,IAAI6B,CAAJ,CAAH,EAAW;AACV3rB,WAAO2rB,CAAP,IAAY7B,IAAI6B,CAAJ,CAAZ;AACA;AACD;AACD;;;;wBAEK;AACL,OAAGpsB,UAAUC,SAAV,CAAoBmK,OAApB,CAA4B,QAA5B,IAAwC,CAAC,CAA5C,EAA+C;AAC9C/J,YAAQU,GAAR,6BAAsCypB,OAAtC,EAAiD,qCAAjD;AACA,IAFD,MAEO;AACNnqB,YAAQU,GAAR,CAAY,uBAAZ,EAAqCypB,OAArC;AACA;AACDnqB,WAAQU,GAAR,CAAY,cAAZ,EAA4B,gBAA5B;;AAEA,QAAI,IAAMqrB,CAAV,IAAe,IAAf,EAAqB;AACpB,QAAG,KAAKA,CAAL,CAAH,EAAY;AACX/rB,aAAQU,GAAR,WAAoBqrB,CAApB,EAAyB,gBAAzB;AACA;AACD;AACD;;;;;;AAGF,IAAMC,KAAK,IAAI5B,MAAJ,EAAX;;kBAEe4B,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxJf;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChbA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjdA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,WAAW,WAAW;AAClC;AACA;AACA;AACA;;AAEA,YAAY,WAAW,YAAY;AACnC;AACA;AACA;AACA;;AAEA,aAAa,YAAY,YAAY;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,eAAe,YAAY,YAAY;AACvC,eAAe,YAAY,YAAY;AACvC,eAAe,YAAY,aAAa;;AAExC,iBAAiB,cAAc,cAAc;AAC7C,iBAAiB,cAAc,cAAc;AAC7C,iBAAiB,cAAc,eAAe;;AAE9C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yEAAyC,aAAa;;AAEtD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,YAAY,YAAY;AACrC,aAAa,YAAY,YAAY;AACrC,aAAa,YAAY,aAAa;;AAEtC;AACA,sBAAsB,yBAAyB;AAC/C,0BAA0B,qBAAqB;AAC/C,0BAA0B,yBAAyB;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA,yEAAyC,aAAa;;AAEtD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AChpDA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;AACpC;AACA,sBAAsB;AACtB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA;AAAA;;AAED;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AAAA;AAAA;;AAED;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjnBD;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;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;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;;;;;;;ACTA,8FAA8F,gDAAgD,qBAAqB,+BAA+B,qBAAqB,mEAAmE,GAAG,C;;;;;;ACA7R;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,mBAAmB,iBAAiB;AACpC;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnLA;;AAEA;;;;;;;;AAEA;;;;AACA;;;;;;;;AAEA,IAAItuB,WAAJ;;IAGM8rB,e;AAEL,0BAAYnY,IAAZ,EAAoC;AAAA,MAAlBrS,WAAkB,uEAAJ,EAAI;;AAAA;;AACnCtB,OAAK,iBAAGA,EAAR;AACA,OAAK+uB,KAAL,GAAapb,IAAb;AACA,OAAK4C,SAA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;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,yC;;;;;;;8CCvHA;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA,6CAA6C;;AAE7C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,qBAAqB;;AAE/B;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA,6BAA6B;AAC7B,GAAG;AACH,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA,kCAAkC,gCAAgC,EAAE;AACpE;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,qBAAqB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA,SAAS;AACT;;AAEA,sBAAsB,qBAAqB;AAC3C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB,+BAA+B;AAC/B;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;AACb,gBAAgB;AAChB,UAAU,eAAe;AACzB,qBAAqB;AACrB;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,qBAAqB;AACtC;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,sCAAsC;;AAEtC,iBAAiB,+BAA+B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;;AAEA,iBAAiB,gCAAgC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA,yDAAyD;AACzD;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,+BAA+B;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,+BAA+B;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA,4CAA4C;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6BAA6B;AACrD;AACA;AACA,yBAAyB,qCAAqC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,yBAAyB;;AAE1C;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,gCAAgC;AACjD;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mGAAmG;AACnG;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA,8FAA8F;AAC9F,EAAE;;AAEF;AACA;;AAEA;;AAEA;AACA,kEAAkE;AAClE;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,0BAA0B,2BAA2B;AACrD;AACA;AACA,GAAG;AACH,iBAAiB,iBAAiB;AAClC;AACA,kBAAkB,4BAA4B;AAC9C;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,2BAA2B;AAC7C;AACA;AACA;;AAEA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,2BAA2B;AAC7C;AACA;AACA,IAAI;AACJ,iBAAiB,qBAAqB;AACtC;AACA;AACA;;AAEA;AACA,kBAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iBAAiB,+BAA+B;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iBAAiB,+BAA+B;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4CAA4C;AAC5C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,4BAA4B;AAChD;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,wCAAwC;;AAExC;AACA,kBAAkB,kBAAkB;AACpC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,oCAAoC,OAAO;AAC3C,wEAAwE;;AAExE;AACA;AACA,yCAAyC;AACzC;AACA,qBAAqB,oBAAoB;AACzC;AACA,6BAA6B;AAC7B,8BAA8B;;AAE9B;AACA;AACA;AACA;;AAEA;AACA,kEAAkE;AAClE;;AAEA;AACA,0BAA0B;AAC1B,+CAA+C;AAC/C,4BAA4B;AAC5B;AACA,sBAAsB,eAAe;AACrC,gEAAgE;AAChE;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,UAAU,iBAAiB;AAC3B;AACA;;AAEA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,oCAAoC,OAAO;AAC3C;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,kBAAkB;AACpC;;AAEA;AACA;AACA,wCAAwC;AACxC,oBAAoB,oBAAoB;AACxC;AACA,0CAA0C;AAC1C,4BAA4B;AAC5B,6BAA6B;AAC7B;AACA,yBAAyB;AACzB,qBAAqB,eAAe;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ,GAAG;;AAEH;AACA;AACA,WAAW;AACX;AACA;;AAEA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;;AAEA;AACA;AACA,uCAAuC;AACvC;;AAEA;AACA,wFAAwF;AACxF;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe;;AAEf;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uCAAuC;;AAEvC;AACA,iBAAiB,kBAAkB;AACnC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mCAAmC,OAAO;AAC1C,iEAAiE;;AAEjE;AACA;AACA,wCAAwC;AACxC,oBAAoB,oBAAoB;AACxC;AACA;AACA,4BAA4B;AAC5B,6BAA6B;AAC7B;AACA,yBAAyB;AACzB,qBAAqB,eAAe;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;;AAEA;AACA,iBAAiB,6BAA6B;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,sBAAsB;AACtB;;AAEA,iBAAiB,gCAAgC;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iCAAiC;AACtD;AACA;AACA;AACA,MAAM;AACN;AACA,KAAK;AACL;AACA;;AAEA,kCAAkC;;AAElC;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,iBAAiB,4BAA4B;AAC7C;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iBAAiB,sBAAsB;AACvC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAuB;;AAEvB;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA,6CAA6C;AAC7C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB,cAAc;AACnC;AACA,sBAAsB,cAAc;AACpC;AACA;AACA;;AAEA;AACA;AACA,kDAAkD;;AAElD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;;AAEA,iBAAiB,yCAAyC;AAC1D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,4CAA4C;;AAE/C;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,8BAA8B;AAC9B;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,+CAA+C;AAC/C,0DAA0D;AAC1D,2DAA2D;;AAE3D;AACA;AACA,oBAAoB;;AAEpB,qCAAqC,OAAO;AAC5C,8BAA8B;;AAE9B;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0DAA0D;AAC1D,6DAA6D;AAC7D;;AAEA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB,+BAA+B;AACnD;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA,kDAAkD;AAClD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+BAA+B;AAC/C;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA,iBAAiB,0BAA0B;AAC3C;AACA;AACA,kBAAkB,kCAAkC;AACpD;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,iBAAiB,uBAAuB;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA,mCAAmC;AACnC,qBAAqB;AACrB;AACA,gCAAgC;AAChC;AACA,iBAAiB,oBAAoB;AACrC;AACA,GAAG;AACH,EAAE;;AAEF;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,qBAAqB;AACrB,gCAAgC;AAChC;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA,GAAG;AACH,EAAE;;AAEF;AACA;AACA;AACA,mCAAmC;AACnC;AACA,qBAAqB;AACrB,8BAA8B;AAC9B,iBAAiB,kBAAkB;AACnC;AACA,GAAG;AACH;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,sDAAsD;AACtD;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mC;;;;;;;AC7iEA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;;;;;;qjBCpBA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;IAEMa,c;AACL,yBAAYjmB,MAAZ,EAAoBC,OAApB,EAA2C;AAAA,MAAdqO,OAAc,uEAAJ,EAAI;;AAAA;;AAC1C,OAAKpO,MAAL,GAAcF,UAAU,iBAAGI,K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","file":"./alfrid.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"alfrid\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"alfrid\"] = factory();\n\telse\n\t\troot[\"alfrid\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 37);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3e1ac832edc4b89a2958","// GLTool.js\n\nimport { mat4, mat3 } from 'gl-matrix';\n\nimport getAndApplyExtension from './utils/getAndApplyExtension';\nimport exposeAttributes from './utils/exposeAttributes';\nimport getFloat from './utils/getFloat';\nimport getHalfFloat from './utils/getHalfFloat';\nimport getAttribLoc from './utils/getAttribLoc';\nimport ExtensionsList from './utils/ExtensionsList';\n\nlet gl;\n\nclass GLTool {\n\n\tconstructor() {\n\t\tthis.canvas;\n\t\tthis._viewport               = [0, 0, 0, 0];\n\t\tthis._enabledVertexAttribute = [];\n\t\tthis.identityMatrix          = mat4.create();\n\t\tthis._normalMatrix           = mat3.create();\n\t\tthis._inverseModelViewMatrix = mat3.create();\n\t\tthis._modelMatrix            = mat4.create();\n\t\tthis._matrix                 = mat4.create();\n\t\tthis._lastMesh\t\t\t\t = null;\n\t\tthis._useWebGL2 \t\t\t = false;\n\t\tthis._hasArrayInstance;\n\t\tthis._extArrayInstance;\n\t\tthis._hasCheckedExt = false;\n\t\tmat4.identity(this.identityMatrix, this.identityMatrix);\n\n\t\tthis.isMobile = false;\n\t\tif(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n\t\t\tthis.isMobile = true;\n\t\t}\n\t}\n\n\t//\tINITIALIZE\n\n\tinit(mCanvas, mParameters = {}) {\n\n\t\tif(mCanvas === null || mCanvas === undefined) {\n\t\t\tconsole.error('Canvas not exist');\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(this.canvas !== undefined && this.canvas !== null) {\n\t\t\tthis.destroy();\n\t\t}\n\t\t\n\t\tthis.canvas = mCanvas;\n\t\tthis.setSize(window.innerWidth, window.innerHeight);\n\n\t\tlet ctx;\n\t\tif(mParameters.ignoreWebgl2) {\n\t\t\tctx = this.canvas.getContext('webgl', mParameters) || this.canvas.getContext('experimental-webgl', mParameters);\n\t\t} else {\n\t\t\tctx = this.canvas.getContext('experimental-webgl2', mParameters) || this.canvas.getContext('webgl2', mParameters);\n\t\t\tif(ctx) {\n\t\t\t\tthis._useWebGL2 = true;\n\t\t\t} else {\n\t\t\t\tctx = this.canvas.getContext('webgl', mParameters) || this.canvas.getContext('experimental-webgl', mParameters);\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\tconsole.log('Using WebGL 2 ?', this.webgl2);\n\n\t\t//\textensions\n\t\tthis.initWithGL(ctx);\n\t}\n\n\tinitWithGL(ctx) {\n\t\tif(!this.canvas) {\tthis.canvas = ctx.canvas;\t}\n\t\tgl = this.gl = ctx;\n\n\t\tthis.extensions = {};\n\t\tfor(let i = 0; i < ExtensionsList.length; i++) {\n\t\t\tthis.extensions[ExtensionsList[i]] = gl.getExtension(ExtensionsList[i]);\n\t\t}\n\t\t\n\t\t//\tCopy gl Attributes\n\t\texposeAttributes();\n\t\tgetAndApplyExtension(gl, 'OES_vertex_array_object');\n\t\tgetAndApplyExtension(gl, 'ANGLE_instanced_arrays');\n\t\tgetAndApplyExtension(gl, 'WEBGL_draw_buffers');\n\t\t\n\t\tthis.enable(this.DEPTH_TEST);\n\t\tthis.enable(this.CULL_FACE);\n\t\tthis.enable(this.BLEND);\n\t\tthis.enableAlphaBlending();\n\t} \n\n\n\n\t//\tPUBLIC METHODS\n\n\tsetViewport(x, y, w, h) {\n\t\tlet hasChanged = false;\n\t\tif(x !== this._viewport[0]) { hasChanged = true; }\n\t\tif(y !== this._viewport[1]) { hasChanged = true; }\n\t\tif(w !== this._viewport[2]) { hasChanged = true; }\n\t\tif(h !== this._viewport[3]) { hasChanged = true; }\n\n\t\tif(hasChanged) {\n\t\t\tgl.viewport(x, y, w, h);\n\t\t\tthis._viewport = [x, y, w, h];\n\t\t}\n\t}\n\n\tscissor(x, y, w, h) {\n\t\tgl.scissor(x, y, w, h);\n\t}\n\n\n\tclear(r, g, b, a) {\n\t\tgl.clearColor(r, g, b, a);\n\t\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\t}\n\n\n\tsetMatrices(mCamera) {\n\t\tthis.camera = mCamera;\n\t\tthis.rotate(this.identityMatrix);\n\t}\n\n\n\tuseShader(mShader) {\n\t\tthis.shader = mShader;\n\t\tthis.shaderProgram = this.shader.shaderProgram;\n\t}\n\n\n\trotate(mRotation) {\n\t\tmat4.copy(this._modelMatrix, mRotation);\n\t\tmat4.multiply(this._matrix, this.camera.matrix, this._modelMatrix);\n\t\tmat3.fromMat4(this._normalMatrix, this._matrix);\n\t\tmat3.invert(this._normalMatrix, this._normalMatrix);\n\t\tmat3.transpose(this._normalMatrix, this._normalMatrix);\n\t\t\n\n\t\tmat3.fromMat4(this._inverseModelViewMatrix, this._matrix);\n\t\tmat3.invert(this._inverseModelViewMatrix, this._inverseModelViewMatrix);\n\t}\n\n\n\tdraw(mMesh, mDrawingType) {\n\t\tif(mMesh.length) {\n\t\t\tfor(let i = 0; i < mMesh.length; i++) {\n\t\t\t\tthis.draw(mMesh[i]);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tmMesh.bind(this.shaderProgram);\n\n\t\t//\tDEFAULT UNIFORMS\n\t\tif(this.camera !== undefined) {\n\t\t\tthis.shader.uniform('uProjectionMatrix', 'mat4', this.camera.projection);\t\n\t\t\tthis.shader.uniform('uViewMatrix', 'mat4', this.camera.matrix);\n\t\t}\n\t\t\n\t\tthis.shader.uniform('uModelMatrix', 'mat4', this._modelMatrix);\n\t\tthis.shader.uniform('uNormalMatrix', 'mat3', this._normalMatrix);\n\t\tthis.shader.uniform('uModelViewMatrixInverse', 'mat3', this._inverseModelViewMatrix);\n\n\t\tlet drawType = mMesh.drawType;\n\t\tif(mDrawingType !== undefined) {\n\t\t\tdrawType = mDrawingType;\n\t\t}\n\n\t\tif(mMesh.isInstanced) {\n\t\t\t//\tDRAWING\n\t\t\tgl.drawElementsInstanced(mMesh.drawType, mMesh.iBuffer.numItems, gl.UNSIGNED_SHORT, 0, mMesh.numInstance);\n\t\t} else {\n\t\t\tif(drawType === gl.POINTS) {\n\t\t\t\tgl.drawArrays(drawType, 0, mMesh.vertexSize);\t\n\t\t\t} else {\n\t\t\t\tgl.drawElements(drawType, mMesh.iBuffer.numItems, gl.UNSIGNED_SHORT, 0);\t\n\t\t\t}\t\n\t\t}\n\n\t\tmMesh.unbind();\n\t}\n\n\n\tdrawTransformFeedback(mTransformObject) {\n\n\t\tconst { meshSource, meshDestination, numPoints, transformFeedback } = mTransformObject;\n\t\t\n\t\t//\tBIND SOURCE BUFFERS -> setupVertexAttr(sourceVAO)\n\t\tmeshSource.bind(this.shaderProgram);\n\t\tmeshDestination.generateBuffers(this.shaderProgram);\n\n\t\t//\tBIND DESTINATION BUFFERS\n\t\tgl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, transformFeedback);\n\n\t\tmeshDestination.attributes.forEach((attr, i)=> {\n\t\t\tgl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER, i, attr.buffer);\n\t\t});\n\n\t\tgl.enable(gl.RASTERIZER_DISCARD);\n\n\t\tgl.beginTransformFeedback(gl.POINTS);\n\t\tgl.drawArrays(gl.POINTS, 0, numPoints);\n\t\tgl.endTransformFeedback();\t\n\t\t\n\n\t\t//\treset state\n\t\tgl.disable(gl.RASTERIZER_DISCARD);\n\t\tgl.useProgram(null);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\t\tmeshDestination.attributes.forEach((attr, i)=> {\n\t\t\tgl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER, i, null);\n\t\t});\n\t\tgl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, null);\n\n\t\tmeshSource.unbind();\n\t}\n\n\n\tsetSize(mWidth, mHeight) {\n\t\tthis._width        = mWidth;\n\t\tthis._height       = mHeight;\n\t\tthis.canvas.width  = this._width;\n\t\tthis.canvas.height = this._height;\n\t\tthis._aspectRatio  = this._width / this._height;\n\n\t\tif(gl) {\n\t\t\tthis.viewport(0, 0, this._width, this._height);\t\n\t\t}\n\t}\n\n\n\tshowExtensions() {\n\t\tconsole.log('Extensions : ', this.extensions);\n\t\tfor(const ext in this.extensions) {\n\t\t\tif(this.extensions[ext]) {\n\t\t\t\tconsole.log(ext, ':', this.extensions[ext]);\t\n\t\t\t}\n\t\t}\t\n\t}\n\n\tcheckExtension(mExtension) {\n\t\treturn !!this.extensions[mExtension];\n\t}\n\n\n\tgetExtension(mExtension) {\n\t\treturn this.extensions[mExtension];\n\t}\n\n\t//\tBLEND MODES\n\n\tenableAlphaBlending() {\n\t\tgl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\t\n\t}\n\n\tenableAdditiveBlending() {\n\t\tgl.blendFunc(gl.ONE, gl.ONE);\n\t}\n\n\n\t//\tGL NATIVE FUNCTIONS\n\n\tenable(mParameter) {\tgl.enable(mParameter);\t\t}\n\n\tdisable(mParameter) {\tgl.disable(mParameter);\t}\n\n\tviewport(x, y, w, h) {\tthis.setViewport(x, y, w, h);\t}\n\n\n\t//\tGETTER AND SETTERS\n\n\tget FLOAT() { return getFloat(); }\n\t\n\tget HALF_FLOAT() { return getHalfFloat(); }\n\n\tget width() {\treturn this._width;\t\t}\n\n\tget height() {\treturn this._height;\t}\n\n\tget aspectRatio() {\treturn this._aspectRatio;\t}\n\n\tget webgl2() {\treturn this._useWebGL2;\t}\n\n\t//\tDESTROY\n\n\tdestroy() {\n\t\t\n\t\tif(this.canvas.parentNode) {\n\t\t\ttry {\n\t\t\t\tthis.canvas.parentNode.removeChild(this.canvas);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log('Error : ', e);\n\t\t\t}\n\t\t}\n\n\t\tthis.canvas = null;\n\t}\n}\n\nconst GL = new GLTool();\n\nexport default GL;\n\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/GLTool.js","/**\n * @fileoverview gl-matrix - High performance matrix and vector operations\n * @author Brandon Jones\n * @author Colin MacKenzie IV\n * @version 2.4.0\n */\n\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n// END HEADER\n\nimport * as glMatrix from \"./gl-matrix/common\";\nimport * as mat2 from \"./gl-matrix/mat2\";\nimport * as mat2d from \"./gl-matrix/mat2d\";\nimport * as mat3 from \"./gl-matrix/mat3\";\nimport * as mat4 from \"./gl-matrix/mat4\";\nimport * as quat from \"./gl-matrix/quat\";\nimport * as vec2 from \"./gl-matrix/vec2\";\nimport * as vec3 from \"./gl-matrix/vec3\";\nimport * as vec4 from \"./gl-matrix/vec4\";\n\nexport {\n  glMatrix,\n  mat2, mat2d, mat3, mat4,\n  quat,\n  vec2, vec3, vec4,\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-matrix/src/gl-matrix.js\n// module id = 1\n// module chunks = 0","// GLShader.js\n\n'use strict';\n\nimport GL from './GLTool';\nconst glslify = require('glslify');\nconst isSame = (array1, array2) => {\n\tif(array1.length !== array2.length) {\n\t\treturn false;\n\t}\n\n\tfor(let i = 0; i < array1.length; i++) {\n\t\tif(array1[i] !== array2[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n};\n\nconst addLineNumbers = (string) => {\n\tconst lines = string.split('\\n');\n\tfor (let i = 0; i < lines.length; i ++) {\n\t\tlines[i] = `${(i + 1)}: ${lines[i]}`;\n\t}\n\treturn lines.join('\\n');\n};\n\n\nconst cloneArray = (mArray) => {\n\tif(mArray.slice) {\n\t\treturn mArray.slice(0); \n\t} else {\n\t\treturn new Float32Array(mArray);\n\t}\n};\n\nlet gl;\nconst defaultVertexShader = require('./shaders/basic.vert');\nconst defaultFragmentShader = require('./shaders/basic.frag');\n\nconst uniformMapping = {\n\tfloat: 'uniform1f',\n\tvec2: 'uniform2fv',\n\tvec3: 'uniform3fv',\n\tvec4: 'uniform4fv',\n\tint: 'uniform1i',\n\tmat3: 'uniformMatrix3fv',\n\tmat4: 'uniformMatrix4fv'\n};\n\nclass GLShader {\n\tconstructor(strVertexShader = defaultVertexShader, strFragmentShader = defaultFragmentShader, mVaryings) {\n\n\t\tgl                   = GL.gl;\n\t\tthis.parameters      = [];\n\t\tthis.uniformTextures = [];\n\t\tthis._varyings \t\t = mVaryings;\n\n\t\tif(!strVertexShader) { strVertexShader = defaultVertexShader; }\n\t\tif(!strFragmentShader) { strFragmentShader = defaultVertexShader; }\n\n\t\tconst vsShader = this._createShaderProgram(strVertexShader, true);\n\t\tconst fsShader = this._createShaderProgram(strFragmentShader, false);\n\t\tthis._attachShaderProgram(vsShader, fsShader);\n\n\t}\n\n\n\tbind() {\n\n\t\tif(GL.shader === this) {\n\t\t\treturn;\n\t\t}\n\t\tgl.useProgram(this.shaderProgram);\n\t\tGL.useShader(this);\n\t\tthis.uniformTextures = [];\n\n\t}\n\n\n\tuniform(mName, mType, mValue) {\n\t\tif(typeof mName === 'object') {\n\t\t\tthis.uniformObject(mName);\n\t\t\treturn;\n\t\t}\n/*\n\t\tif(!!mValue === undefined || mValue === null) {\n\t\t\tconsole.warn('mValue Error:', mName);\n\t\t\treturn;\n\t\t}\n*/\n\t\tconst uniformType = uniformMapping[mType] || mType;\n\t\t\n\t\tlet hasUniform = false;\n\t\tlet oUniform;\n\t\tlet parameterIndex = -1;\n\n\n\t\tfor(let i = 0; i < this.parameters.length; i++) {\n\t\t\toUniform = this.parameters[i];\n\t\t\tif(oUniform.name === mName) {\n\t\t\t\thasUniform = true;\n\t\t\t\tparameterIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet isNumber = false;\n\n\t\tif(!hasUniform) {\n\t\t\tisNumber = uniformType === 'uniform1i' || uniformType === 'uniform1f';\n\t\t\tthis.shaderProgram[mName] = gl.getUniformLocation(this.shaderProgram, mName);\n\t\t\tif(isNumber) {\n\t\t\t\tthis.parameters.push({ name : mName, type: uniformType, value: mValue, uniformLoc: this.shaderProgram[mName], isNumber });\t\n\t\t\t} else {\n\t\t\t\tthis.parameters.push({ name : mName, type: uniformType, value: cloneArray(mValue), uniformLoc: this.shaderProgram[mName], isNumber });\n\t\t\t}\n\t\t\t\n\t\t\tparameterIndex = this.parameters.length - 1;\n\t\t} else {\n\t\t\tthis.shaderProgram[mName] = oUniform.uniformLoc;\n\t\t\tisNumber = oUniform.isNumber;\n\t\t}\n\n\n\t\tif(!this.parameters[parameterIndex].uniformLoc) {\n\t\t\treturn;\n\t\t}\n\n\n\t\tif(uniformType.indexOf('Matrix') === -1) {\n\t\t\tif(!isNumber) {\n\t\t\t\tif(!isSame(this.parameters[parameterIndex].value, mValue) || !hasUniform) {\n\t\t\t\t\tgl[uniformType](this.shaderProgram[mName], mValue);\t\n\t\t\t\t\tthis.parameters[parameterIndex].value = cloneArray(mValue);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst needUpdate = (this.parameters[parameterIndex].value !== mValue || !hasUniform);\n\t\t\t\tif(needUpdate) {\n\t\t\t\t\tgl[uniformType](this.shaderProgram[mName], mValue);\t\n\t\t\t\t\tthis.parameters[parameterIndex].value = mValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\t\t\tif(!isSame(this.parameters[parameterIndex].value, mValue) || !hasUniform) {\n\t\t\t\tgl[uniformType](this.shaderProgram[mName], false, mValue);\t\n\t\t\t\tthis.parameters[parameterIndex].value = cloneArray(mValue);\n\n\t\t\t}\n\t\t}\n\n\t}\n\n\tuniformObject(mUniformObj) {\n\t\tfor(const uniformName in mUniformObj) {\n\t\t\tlet uniformValue = mUniformObj[uniformName];\n\t\t\tconst uniformType = GLShader.getUniformType(uniformValue);\n\n\t\t\tif(uniformValue.concat && uniformValue[0].concat) {\n\t\t\t\tlet tmp = [];\n\t\t\t\tfor(let i=0; i<uniformValue.length; i++) {\n\t\t\t\t\ttmp = tmp.concat(uniformValue[i]);\n\t\t\t\t}\n\t\t\t\tuniformValue = tmp;\n\t\t\t}\n\t\t\t\n\t\t\tthis.uniform(uniformName, uniformType, uniformValue);\n\t\t}\n\n\t}\n\n\n\t_createShaderProgram(mShaderStr, isVertexShader) {\n\t\t\n\t\tconst shaderType = isVertexShader ? GL.VERTEX_SHADER : GL.FRAGMENT_SHADER;\n\t\tconst shader = gl.createShader(shaderType);\n\n\t\tgl.shaderSource(shader, mShaderStr);\n\t\tgl.compileShader(shader);\n\n\t\tif(!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n\t\t\tconsole.warn('Error in Shader : ', gl.getShaderInfoLog(shader));\n\t\t\tconsole.log(addLineNumbers(mShaderStr));\n\t\t\treturn null;\n\t\t}\n\n\t\treturn shader;\n\t}\n\n\t_attachShaderProgram(mVertexShader, mFragmentShader) {\n\n\t\tthis.shaderProgram = gl.createProgram();\n\t\tgl.attachShader(this.shaderProgram, mVertexShader);\n\t\tgl.attachShader(this.shaderProgram, mFragmentShader);\n\n\t\tgl.deleteShader(mVertexShader);\n\t\tgl.deleteShader(mFragmentShader);\n\n\t\tif(this._varyings) {\n\t\t\tconsole.log('Transform feedback setup : ', this._varyings);\n\t\t\tgl.transformFeedbackVaryings(this.shaderProgram, this._varyings, gl.SEPARATE_ATTRIBS);\n\t\t}\n\n\t\tgl.linkProgram(this.shaderProgram);\n\n\t}\n\n}\n\nGLShader.getUniformType = function (mValue) {\n\tconst isArray = !!mValue.concat;\n\n\tconst getArrayUniformType = function (mValue) {\n\t\tif(mValue.length === 9) {\n\t\t\treturn 'uniformMatrix3fv';\n\t\t} else if(mValue.length === 16) {\n\t\t\treturn 'uniformMatrix4fv';\n\t\t} else {\n\t\t\treturn `vec${mValue.length}`;\t\n\t\t}\n\t};\n\n\tif(!isArray) {\n\t\treturn 'float';\n\t} else {\n\t\tif (!mValue[0].concat) {\n\t\t\treturn getArrayUniformType(mValue);\t\n\t\t} else {\n\t\t\treturn getArrayUniformType(mValue[0]);\n\t\t}\n\t}\n};\n\n\nexport default GLShader;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/GLShader.js","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\n/**\n * Common utilities\n * @module glMatrix\n */\n\n// Configuration Constants\nexport const EPSILON = 0.000001;\nexport let ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;\nexport const RANDOM = Math.random;\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Type} type Array type, such as Float32Array or Array\n */\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\n\nconst degree = Math.PI / 180;\n\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\nexport function toRadian(a) {\n  return a * degree;\n}\n\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON*Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-matrix/src/gl-matrix/common.js\n// module id = 3\n// module chunks = 0","// Batch.js\n\nimport GL from './GLTool';\n\nclass Batch {\n\n\tconstructor(mMesh, mShader) {\n\t\tthis._mesh = mMesh;\n\t\tthis._shader = mShader;\n\t}\n\n\n\t//\tPUBLIC METHODS\n\n\tdraw() {\n\t\tthis._shader.bind();\n\t\tGL.draw(this.mesh);\n\t}\n\n\n\t//\tGETTER AND SETTER\n\n\tget mesh() {\treturn this._mesh;\t}\n\n\tget shader() {\treturn this._shader;\t}\n}\n\nexport default Batch;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/Batch.js","'use strict';\n\nimport GL from './GLTool';\nimport { vec3 } from 'gl-matrix';\nimport getAttribLoc from './utils/getAttribLoc';\n\nlet gl;\nconst STATIC_DRAW = 35044;\n\nconst getBuffer = function (attr) {\n\tlet buffer;\n\t\n\tif(attr.buffer !== undefined) {\n\t\tbuffer = attr.buffer;\t\n\t} else {\n\t\tbuffer = gl.createBuffer();\n\t\tattr.buffer = buffer;\n\t}\n\n\treturn buffer;\n};\n\n\nconst formBuffer = function (mData, mNum) {\n\tconst ary = [];\n\n\tfor(let i=0; i<mData.length; i+= mNum) {\n\t\tconst o = [];\n\t\tfor(let j=0; j<mNum; j++) {\n\t\t\to.push(mData[i+j]);\n\t\t}\n\n\t\tary.push(o);\n\t}\n\n\treturn ary;\n};\n\nclass Mesh {\n\tconstructor(mDrawingType = 4, mUseVao = true) {\n\t\tgl                           = GL.gl;\n\t\tthis.drawType                = mDrawingType;\n\t\tthis._attributes             = [];\n\t\tthis._numInstance \t\t\t = -1;\n\t\tthis._enabledVertexAttribute = [];\n\t\t\n\t\tthis._indices                = [];\n\t\tthis._faces                  = [];\n\t\tthis._bufferChanged          = [];\n\t\tthis._hasIndexBufferChanged  = false;\n\t\tthis._hasVAO                 = false;\n\t\tthis._isInstanced \t\t\t = false;\n\t\t\n\t\tthis._extVAO                 = !!GL.gl.createVertexArray;\n\t\tthis._useVAO             \t = !!this._extVAO && mUseVao;\n\t\t// this._useVAO = false;\n\t}\n\n\n\tbufferVertex(mArrayVertices, mDrawType = STATIC_DRAW) {\n\n\t\tthis.bufferData(mArrayVertices, 'aVertexPosition', 3, mDrawType);\n\n\t\tif (this.normals.length < this.vertices.length) {\n\t\t\tthis.bufferNormal(mArrayVertices, mDrawType);\t\n\t\t}\n\n\t\treturn this;\n\t}\n\n\n\tbufferTexCoord(mArrayTexCoords, mDrawType = STATIC_DRAW) {\n\n\t\tthis.bufferData(mArrayTexCoords, 'aTextureCoord', 2, mDrawType);\n\t\treturn this;\n\n\t}\n\n\n\tbufferNormal(mNormals, mDrawType = STATIC_DRAW) {\n\n\t\tthis.bufferData(mNormals, 'aNormal', 3, mDrawType);\n\t\treturn this;\n\n\t}\n\n\n\tbufferIndex(mArrayIndices, isDynamic = false) {\n\n\t\tthis._drawType        = isDynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n\t\tthis._indices         = new Uint16Array(mArrayIndices);\n\t\tthis._numItems \t\t  = this._indices.length;\n\t\treturn this;\n\n\t}\n\n\tbufferFlattenData(mData, mName, mItemSize, mDrawType = STATIC_DRAW, isInstanced = false) {\n\t\t\n\t\tconst data = formBuffer(mData, mItemSize);\n\t\tthis.bufferData(data, mName, mItemSize, mDrawType = STATIC_DRAW, isInstanced = false);\n\t\treturn this;\n\n\t}\n\n\tbufferData(mData, mName, mItemSize, mDrawType = STATIC_DRAW, isInstanced = false) {\n\t\tlet i = 0;\n\t\tconst drawType   = mDrawType;\n\t\tif(!drawType) debugger;\n\n\t\tconst bufferData = [];\n\t\tif (!mItemSize) {\tmItemSize = mData[0].length; }\n\t\tthis._isInstanced = isInstanced || this._isInstanced;\n\n\t\t//\tflatten buffer data\t\t\n\t\tfor(i = 0; i < mData.length; i++) {\n\t\t\tfor(let j = 0; j < mData[i].length; j++) {\n\t\t\t\tbufferData.push(mData[i][j]);\n\t\t\t}\n\t\t}\n\t\tconst dataArray = new Float32Array(bufferData);\n\t\tconst attribute = this.getAttribute(mName);\n\n\t\t\n\t\tif(attribute) {\t\n\t\t\t//\tattribute existed, replace with new data\n\t\t\tattribute.itemSize = mItemSize;\n\t\t\tattribute.dataArray = dataArray;\n\t\t\tattribute.source = mData;\n\t\t} else {\n\t\t\t//\tattribute not exist yet, create new attribute object\n\t\t\tthis._attributes.push({ name:mName, source:mData, itemSize: mItemSize, drawType, dataArray, isInstanced });\n\t\t}\n\n\t\tthis._bufferChanged.push(mName);\n\t\treturn this;\n\t}\n\n\tbufferInstance(mData, mName) {\n\t\tif (!GL.gl.vertexAttribDivisor) {\n\t\t\tconsole.error('Extension : ANGLE_instanced_arrays is not supported with this device !');\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemSize = mData[0].length;\n\t\tthis._numInstance = mData.length;\n\t\tthis.bufferData(mData, mName, itemSize, STATIC_DRAW, true);\n\t}\n\n\n\tbind(mShaderProgram) {\n\t\tthis.generateBuffers(mShaderProgram);\n\n\t\tif(this.hasVAO) {\n\t\t\tgl.bindVertexArray(this.vao); \n\t\t} else {\n\t\t\tthis.attributes.forEach((attribute)=> {\n\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, attribute.buffer);\n\t\t\t\tconst attrPosition = attribute.attrPosition;\n\t\t\t\tgl.vertexAttribPointer(attrPosition, attribute.itemSize, gl.FLOAT, false, 0, 0);\n\n\t\t\t\tif(attribute.isInstanced) {\n\t\t\t\t\tgl.vertexAttribDivisor(attrPosition, 1);\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\t//\tBIND INDEX BUFFER\n\t\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.iBuffer);\t\n\t\t}\n\t}\n\n\tgenerateBuffers(mShaderProgram) {\n\t\tif(this._bufferChanged.length == 0) { return; }\n\n\t\tif(this._useVAO) { //\tIF SUPPORTED, CREATE VAO\n\n\t\t\t//\tCREATE & BIND VAO\n\t\t\tif(!this._vao) {\n\t\t\t\tthis._vao = gl.createVertexArray();\t\n\t\t\t}\n\t\t\t\n\t\t\tgl.bindVertexArray(this._vao);\n\n\t\t\t//\tUPDATE BUFFERS\n\t\t\tthis._attributes.forEach((attrObj) => {\n\n\t\t\t\tif(this._bufferChanged.indexOf(attrObj.name) !== -1) {\n\t\t\t\t\tconst buffer = getBuffer(attrObj);\n\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\t\t\t\tgl.bufferData(gl.ARRAY_BUFFER, attrObj.dataArray, attrObj.drawType);\n\n\t\t\t\t\tconst attrPosition = getAttribLoc(gl, mShaderProgram, attrObj.name);\n\t\t\t\t\tgl.enableVertexAttribArray(attrPosition); \n\t\t\t\t\tgl.vertexAttribPointer(attrPosition, attrObj.itemSize, gl.FLOAT, false, 0, 0);\n\t\t\t\t\tattrObj.attrPosition = attrPosition;\n\n\t\t\t\t\tif(attrObj.isInstanced) {\n\t\t\t\t\t\tgl.vertexAttribDivisor(attrPosition, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t});\n\t\t\t\t\n\t\t\t//\tcheck index buffer\n\t\t\tthis._updateIndexBuffer();\n\n\t\t\t//\tUNBIND VAO\n\t\t\tgl.bindVertexArray(null);\t\n\t\t\t\n\t\t\tthis._hasVAO = true;\n\n\t\t} else { //\tELSE, USE TRADITIONAL METHOD\n\n\t\t\tthis._attributes.forEach((attrObj) => {\n\t\t\t\t//\tSKIP IF BUFFER HASN'T CHANGED\n\t\t\t\tif(this._bufferChanged.indexOf(attrObj.name) !== -1) {\n\t\t\t\t\tconst buffer = getBuffer(attrObj);\n\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\t\t\t\tgl.bufferData(gl.ARRAY_BUFFER, attrObj.dataArray, attrObj.drawType);\n\n\t\t\t\t\tconst attrPosition = getAttribLoc(gl, mShaderProgram, attrObj.name);\n\t\t\t\t\tgl.enableVertexAttribArray(attrPosition);\n\t\t\t\t\tgl.vertexAttribPointer(attrPosition, attrObj.itemSize, gl.FLOAT, false, 0, 0);\n\t\t\t\t\tattrObj.attrPosition = attrPosition;\n\n\t\t\t\t\tif(attrObj.isInstanced) {\n\t\t\t\t\t\tgl.vertexAttribDivisor(attrPosition, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._updateIndexBuffer();\n\t\t}\n\n\t\tthis._hasIndexBufferChanged = false;\n\t\tthis._bufferChanged = [];\n\t}\n\n\n\tunbind() {\n\t\tif(this._useVAO) {\n\t\t\tgl.bindVertexArray(null);\t\n\t\t}\n\t\t\n\t\tthis._attributes.forEach((attribute)=> {\n\t\t\tif(attribute.isInstanced) {\n\t\t\t\tgl.vertexAttribDivisor(attribute.attrPosition, 0);\n\t\t\t}\n\t\t});\n\t}\n\n\n\t_updateIndexBuffer() {\n\t\tif(!this._hasIndexBufferChanged) {\n\t\t\tif (!this.iBuffer) { this.iBuffer = gl.createBuffer();\t }\n\t\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.iBuffer);\n\t\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this._indices, this._drawType);\n\t\t\tthis.iBuffer.itemSize = 1;\n\t\t\tthis.iBuffer.numItems = this._numItems;\n\t\t}\n\t}\n\n\n\tcomputeNormals(usingFaceNormals = false) {\n\n\t\tthis.generateFaces();\n\n\t\tif(usingFaceNormals) {\n\t\t\tthis._computeFaceNormals();\n\t\t} else {\n\t\t\tthis._computeVertexNormals();\n\t\t}\n\t}\n\n\t//\tPRIVATE METHODS\n\n\t_computeFaceNormals() {\n\n\t\tlet faceIndex;\n\t\tlet face;\n\t\tconst normals = [];\n\n\t\tfor(let i = 0; i < this._indices.length; i += 3) {\n\t\t\tfaceIndex = i / 3;\n\t\t\tface = this._faces[faceIndex];\n\t\t\tconst N = face.normal;\n\n\t\t\tnormals[face.indices[0]] = N;\n\t\t\tnormals[face.indices[1]] = N;\n\t\t\tnormals[face.indices[2]] = N;\n\t\t}\n\n\t\tthis.bufferNormal(normals);\n\t}\n\n\n\t_computeVertexNormals() {\n\t\t//\tloop through all vertices\n\t\tlet face;\n\t\tconst sumNormal = vec3.create();\n\t\tconst normals = [];\n\t\tconst { vertices } = this;\n\n\t\tfor(let i = 0; i < vertices.length; i++) {\n\n\t\t\tvec3.set(sumNormal, 0, 0, 0);\n\n\t\t\tfor(let j = 0; j < this._faces.length; j++) {\n\t\t\t\tface = this._faces[j];\n\n\t\t\t\t//\tif vertex exist in the face, add the normal to sum normal\n\t\t\t\tif(face.indices.indexOf(i) >= 0) {\n\n\t\t\t\t\tsumNormal[0] += face.normal[0];\n\t\t\t\t\tsumNormal[1] += face.normal[1];\n\t\t\t\t\tsumNormal[2] += face.normal[2];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvec3.normalize(sumNormal, sumNormal);\n\t\t\tnormals.push([sumNormal[0], sumNormal[1], sumNormal[2]]);\n\t\t}\n\n\t\tthis.bufferNormal(normals);\n\n\t}\n\n\n\tgenerateFaces() {\n\t\tlet ia, ib, ic;\n\t\tlet a, b, c;\n\t\tconst vba = vec3.create(), vca = vec3.create(), vNormal = vec3.create();\n\t\tconst { vertices } = this;\n\n\t\tfor(let i = 0; i < this._indices.length; i += 3) {\n\n\t\t\tia = this._indices[i];\n\t\t\tib = this._indices[i + 1];\n\t\t\tic = this._indices[i + 2];\n\n\t\t\ta = vertices[ia];\n\t\t\tb = vertices[ib];\n\t\t\tc = vertices[ic];\n\n\t\t\tconst face = {\n\t\t\t\tindices:[ia, ib, ic],\n\t\t\t\tvertices:[a, b, c],\n\t\t\t};\n\n\t\t\tthis._faces.push(face);\n\t\t}\n\n\t}\n\n\n\tgetAttribute(mName) {\treturn this._attributes.find((a) => a.name === mName);\t}\n\tgetSource(mName) {\n\t\tconst attr = this.getAttribute(mName);\n\t\treturn attr ? attr.source : [];\n\t}\n\n\n\t//\tGETTER AND SETTERS\n\n\tget vertices() {\treturn this.getSource('aVertexPosition');\t}\n\n\tget normals() {\t\treturn this.getSource('aNormal');\t}\n\n\tget coords() {\t\treturn this.getSource('aTextureCoord');\t}\n\n\tget indices() {\t\treturn this._indices;\t}\n\n\tget vertexSize() {\treturn this.vertices.length;\t}\n\n\tget faces() {\treturn this._faces;\t}\n\n\tget attributes() {\treturn this._attributes;\t}\n\n\tget hasVAO() {\treturn this._hasVAO;\t}\n\n\tget vao() {\treturn this._vao;\t}\n\n\tget numInstance() {\treturn this._numInstance;\t}\n\n\tget isInstanced() { return this._isInstanced;\t}\n\n}\n\n\nexport default Mesh;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/Mesh.js","// Geom.js\n\n'use strict';\n\nimport Mesh from './Mesh';\n\nconst Geom = {};\nlet meshTri;\n\nGeom.plane = function plane(width, height, numSegments, axis = 'xy', drawType = 4) {\n\tconst positions = [];\n\tconst coords    = [];\n\tconst indices   = [];\n\tconst normals   = [];\n\n\tconst gapX  = width / numSegments;\n\tconst gapY  = height / numSegments;\n\tconst gapUV = 1 / numSegments;\n\tconst sx    = -width * 0.5;\n\tconst sy    = -height * 0.5;\n\tlet index = 0;\n\n\tfor(let i = 0; i < numSegments; i++) {\n\t\tfor (let j = 0; j < numSegments; j++) {\n\t\t\tconst tx = gapX * i + sx;\n\t\t\tconst ty = gapY * j + sy;\n\n\t\t\tconst u = i / numSegments;\n\t\t\tconst v = j / numSegments;\n\n\t\t\tif(axis === 'xz') {\n\t\t\t\tpositions.push([tx, \t\t0, \t ty + gapY]);\n\t\t\t\tpositions.push([tx + gapX, \t0, \t ty + gapY]);\n\t\t\t\tpositions.push([tx + gapX, \t0, \t ty]);\n\t\t\t\tpositions.push([tx, \t\t0, \t ty]);\t\n\n\t\t\t\tcoords.push([u, 1.0 - (v + gapUV)]);\n\t\t\t\tcoords.push([u + gapUV, 1.0 - (v + gapUV)]);\n\t\t\t\tcoords.push([u + gapUV, 1.0 - v]);\n\t\t\t\tcoords.push([u, 1.0 - v]);\n\n\t\t\t\tnormals.push([0, 1, 0]);\n\t\t\t\tnormals.push([0, 1, 0]);\n\t\t\t\tnormals.push([0, 1, 0]);\n\t\t\t\tnormals.push([0, 1, 0]);\n\t\t\t} else if(axis === 'yz') {\n\t\t\t\tpositions.push([0, ty, tx]);\n\t\t\t\tpositions.push([0, ty, tx + gapX]);\n\t\t\t\tpositions.push([0, ty + gapY, tx + gapX]);\n\t\t\t\tpositions.push([0, ty + gapY, tx]);\t\n\n\t\t\t\tcoords.push([u, v]);\n\t\t\t\tcoords.push([u + gapUV, v]);\n\t\t\t\tcoords.push([u + gapUV, v + gapUV]);\n\t\t\t\tcoords.push([u, v + gapUV]);\n\n\t\t\t\tnormals.push([1, 0, 0]);\n\t\t\t\tnormals.push([1, 0, 0]);\n\t\t\t\tnormals.push([1, 0, 0]);\n\t\t\t\tnormals.push([1, 0, 0]);\n\t\t\t} else {\n\t\t\t\tpositions.push([tx, \t\tty, \t0]);\n\t\t\t\tpositions.push([tx + gapX, \tty, \t0]);\n\t\t\t\tpositions.push([tx + gapX, \tty + gapY, \t0]);\n\t\t\t\tpositions.push([tx, \t\tty + gapY, \t0]);\t\n\n\t\t\t\tcoords.push([u, v]);\n\t\t\t\tcoords.push([u + gapUV, v]);\n\t\t\t\tcoords.push([u + gapUV, v + gapUV]);\n\t\t\t\tcoords.push([u, v + gapUV]);\n\n\t\t\t\tnormals.push([0, 0, 1]);\n\t\t\t\tnormals.push([0, 0, 1]);\n\t\t\t\tnormals.push([0, 0, 1]);\n\t\t\t\tnormals.push([0, 0, 1]);\n\t\t\t} \n\n\n\t\t\tindices.push(index * 4 + 0);\n\t\t\tindices.push(index * 4 + 1);\n\t\t\tindices.push(index * 4 + 2);\n\t\t\tindices.push(index * 4 + 0);\n\t\t\tindices.push(index * 4 + 2);\n\t\t\tindices.push(index * 4 + 3);\n\n\t\t\tindex++;\n\t\t}\n\t}\n\n\tconst mesh = new Mesh(drawType);\n\tmesh.bufferVertex(positions);\n\tmesh.bufferTexCoord(coords);\n\tmesh.bufferIndex(indices);\n\tmesh.bufferNormal(normals);\n\n\treturn mesh;\n};\n\nGeom.sphere = function sphere(size, numSegments, isInvert = false, drawType = 4) {\n\tconst positions = [];\n\tconst coords    = [];\n\tconst indices   = [];\n\tconst normals   = [];\n\tconst gapUV     = 1 / numSegments;\n\tlet index     \t= 0;\n\t\n\n\tfunction getPosition(i, j, isNormal = false) {\t//\trx : -90 ~ 90 , ry : 0 ~ 360\n\t\tconst rx        = i / numSegments * Math.PI - Math.PI * 0.5;\n\t\tconst ry        = j / numSegments * Math.PI * 2;\n\t\tconst r         = isNormal ? 1 : size;\n\t\tconst pos       = [];\n\t\tpos[1]        \t= Math.sin(rx) * r;\n\t\tconst t         = Math.cos(rx) * r;\n\t\tpos[0]        \t= Math.cos(ry) * t;\n\t\tpos[2]        \t= Math.sin(ry) * t;\n\t\t\n\t\tconst precision = 10000;\n\t\tpos[0]        = Math.floor(pos[0] * precision) / precision;\n\t\tpos[1]        = Math.floor(pos[1] * precision) / precision;\n\t\tpos[2]        = Math.floor(pos[2] * precision) / precision;\n\n\t\treturn pos;\n\t};\n\n\t\n\tfor(let i = 0; i < numSegments; i++) {\n\t\tfor(let j = 0; j < numSegments; j++) {\n\t\t\tpositions.push(getPosition(i, j));\n\t\t\tpositions.push(getPosition(i + 1, j));\n\t\t\tpositions.push(getPosition(i + 1, j + 1));\n\t\t\tpositions.push(getPosition(i, j + 1));\n\n\t\t\tnormals.push(getPosition(i, j, true));\n\t\t\tnormals.push(getPosition(i + 1, j, true));\n\t\t\tnormals.push(getPosition(i + 1, j + 1, true));\n\t\t\tnormals.push(getPosition(i, j + 1, true));\n\t\t\t\n\n\t\t\tconst u = j / numSegments;\n\t\t\tconst v = i / numSegments;\n\t\t\t\n\t\t\t\n\t\t\tcoords.push([1.0 - u, v]);\n\t\t\tcoords.push([1.0 - u, v + gapUV]);\n\t\t\tcoords.push([1.0 - u - gapUV, v + gapUV]);\n\t\t\tcoords.push([1.0 - u - gapUV, v]);\n\n\t\t\tindices.push(index * 4 + 0);\n\t\t\tindices.push(index * 4 + 1);\n\t\t\tindices.push(index * 4 + 2);\n\t\t\tindices.push(index * 4 + 0);\n\t\t\tindices.push(index * 4 + 2);\n\t\t\tindices.push(index * 4 + 3);\n\n\t\t\tindex++;\n\t\t}\n\t}\n\n\n\tif(isInvert) {\n\t\tindices.reverse();\n\t}\n\n\tconst mesh = new Mesh(drawType);\n\tmesh.bufferVertex(positions);\n\tmesh.bufferTexCoord(coords);\n\tmesh.bufferIndex(indices);\n\tmesh.bufferNormal(normals);\n\n\treturn mesh;\n};\n\nGeom.cube = function cube(w, h, d, drawType = 4) {\n\th = h || w;\n\td = d || w;\n\n\tconst x = w / 2;\n\tconst y = h / 2;\n\tconst z = d / 2;\n\n\tconst positions = [];\n\tconst coords    = [];\n\tconst indices   = []; \n\tconst normals   = []; \n\tlet count     = 0;\n\n\n\t// BACK\n\tpositions.push([-x,  y, -z]);\n\tpositions.push([x,  y, -z]);\n\tpositions.push([x, -y, -z]);\n\tpositions.push([-x, -y, -z]);\n\n\tnormals.push([0, 0, -1]);\n\tnormals.push([0, 0, -1]);\n\tnormals.push([0, 0, -1]);\n\tnormals.push([0, 0, -1]);\n\n\tcoords.push([0, 0]);\n\tcoords.push([1, 0]);\n\tcoords.push([1, 1]);\n\tcoords.push([0, 1]);\n\n\tindices.push(count * 4 + 0);\n\tindices.push(count * 4 + 1);\n\tindices.push(count * 4 + 2);\n\tindices.push(count * 4 + 0);\n\tindices.push(count * 4 + 2);\n\tindices.push(count * 4 + 3);\n\n\tcount ++;\n\n\t// RIGHT\n\tpositions.push([x,  y, -z]);\n\tpositions.push([x,  y,  z]);\n\tpositions.push([x, -y,  z]);\n\tpositions.push([x, -y, -z]);\n\n\tnormals.push([1, 0, 0]);\n\tnormals.push([1, 0, 0]);\n\tnormals.push([1, 0, 0]);\n\tnormals.push([1, 0, 0]);\n\n\tcoords.push([0, 0]);\n\tcoords.push([1, 0]);\n\tcoords.push([1, 1]);\n\tcoords.push([0, 1]);\n\n\tindices.push(count * 4 + 0);\n\tindices.push(count * 4 + 1);\n\tindices.push(count * 4 + 2);\n\tindices.push(count * 4 + 0);\n\tindices.push(count * 4 + 2);\n\tindices.push(count * 4 + 3);\n\n\tcount ++;\n\n\t// FRONT\n\tpositions.push([x,  y,  z]);\n\tpositions.push([-x,  y,  z]);\n\tpositions.push([-x, -y,  z]);\n\tpositions.push([x, -y,  z]);\n\n\tnormals.push([0, 0, 1]);\n\tnormals.push([0, 0, 1]);\n\tnormals.push([0, 0, 1]);\n\tnormals.push([0, 0, 1]);\n\n\tcoords.push([0, 0]);\n\tcoords.push([1, 0]);\n\tcoords.push([1, 1]);\n\tcoords.push([0, 1]);\n\n\tindices.push(count * 4 + 0);\n\tindices.push(count * 4 + 1);\n\tindices.push(count * 4 + 2);\n\tindices.push(count * 4 + 0);\n\tindices.push(count * 4 + 2);\n\tindices.push(count * 4 + 3);\n\n\tcount ++;\n\n\n\t// LEFT\n\tpositions.push([-x,  y,  z]);\n\tpositions.push([-x,  y, -z]);\n\tpositions.push([-x, -y, -z]);\n\tpositions.push([-x, -y,  z]);\n\n\tnormals.push([-1, 0, 0]);\n\tnormals.push([-1, 0, 0]);\n\tnormals.push([-1, 0, 0]);\n\tnormals.push([-1, 0, 0]);\n\n\tcoords.push([0, 0]);\n\tcoords.push([1, 0]);\n\tcoords.push([1, 1]);\n\tcoords.push([0, 1]);\n\n\tindices.push(count * 4 + 0);\n\tindices.push(count * 4 + 1);\n\tindices.push(count * 4 + 2);\n\tindices.push(count * 4 + 0);\n\tindices.push(count * 4 + 2);\n\tindices.push(count * 4 + 3);\n\n\tcount ++;\n\n\t// TOP\n\tpositions.push([x,  y, -z]);\n\tpositions.push([-x,  y, -z]);\n\tpositions.push([-x,  y,  z]);\n\tpositions.push([x,  y,  z]);\n\n\tnormals.push([0, 1, 0]);\n\tnormals.push([0, 1, 0]);\n\tnormals.push([0, 1, 0]);\n\tnormals.push([0, 1, 0]);\n\n\tcoords.push([0, 0]);\n\tcoords.push([1, 0]);\n\tcoords.push([1, 1]);\n\tcoords.push([0, 1]);\n\n\tindices.push(count * 4 + 0);\n\tindices.push(count * 4 + 1);\n\tindices.push(count * 4 + 2);\n\tindices.push(count * 4 + 0);\n\tindices.push(count * 4 + 2);\n\tindices.push(count * 4 + 3);\n\n\tcount ++;\n\n\t// BOTTOM\n\tpositions.push([x, -y,  z]);\n\tpositions.push([-x, -y,  z]);\n\tpositions.push([-x, -y, -z]);\n\tpositions.push([x, -y, -z]);\n\n\tnormals.push([0, -1, 0]);\n\tnormals.push([0, -1, 0]);\n\tnormals.push([0, -1, 0]);\n\tnormals.push([0, -1, 0]);\n\n\tcoords.push([0, 0]);\n\tcoords.push([1, 0]);\n\tcoords.push([1, 1]);\n\tcoords.push([0, 1]);\n\n\tindices.push(count * 4 + 0);\n\tindices.push(count * 4 + 1);\n\tindices.push(count * 4 + 2);\n\tindices.push(count * 4 + 0);\n\tindices.push(count * 4 + 2);\n\tindices.push(count * 4 + 3);\n\n\tcount ++;\n\n\n\tconst mesh = new Mesh(drawType);\n\tmesh.bufferVertex(positions);\n\tmesh.bufferTexCoord(coords);\n\tmesh.bufferIndex(indices);\n\tmesh.bufferNormal(normals);\n\n\treturn mesh;\n};\n\nGeom.skybox = function skybox(size, drawType = 4) {\n\tconst positions = [];\n\tconst coords    = [];\n\tconst indices   = []; \n\tconst normals   = []; \n\tlet count     = 0;\n\n\t// BACK\n\tpositions.push([size,  size, -size]);\n\tpositions.push([-size,  size, -size]);\n\tpositions.push([-size, -size, -size]);\n\tpositions.push([size, -size, -size]);\n\n\tnormals.push([0, 0, -1]);\n\tnormals.push([0, 0, -1]);\n\tnormals.push([0, 0, -1]);\n\tnormals.push([0, 0, -1]);\n\n\tcoords.push([0, 0]);\n\tcoords.push([1, 0]);\n\tcoords.push([1, 1]);\n\tcoords.push([0, 1]);\n\n\tindices.push(count * 4 + 0);\n\tindices.push(count * 4 + 1);\n\tindices.push(count * 4 + 2);\n\tindices.push(count * 4 + 0);\n\tindices.push(count * 4 + 2);\n\tindices.push(count * 4 + 3);\n\n\tcount ++;\n\n\t// RIGHT\n\tpositions.push([size, -size, -size]);\n\tpositions.push([size, -size,  size]);\n\tpositions.push([size,  size,  size]);\n\tpositions.push([size,  size, -size]);\n\n\tnormals.push([1, 0, 0]);\n\tnormals.push([1, 0, 0]);\n\tnormals.push([1, 0, 0]);\n\tnormals.push([1, 0, 0]);\n\n\tcoords.push([0, 0]);\n\tcoords.push([1, 0]);\n\tcoords.push([1, 1]);\n\tcoords.push([0, 1]);\n\n\tindices.push(count * 4 + 0);\n\tindices.push(count * 4 + 1);\n\tindices.push(count * 4 + 2);\n\tindices.push(count * 4 + 0);\n\tindices.push(count * 4 + 2);\n\tindices.push(count * 4 + 3);\n\n\tcount ++;\n\n\t// FRONT\n\tpositions.push([-size,  size,  size]);\n\tpositions.push([size,  size,  size]);\n\tpositions.push([size, -size,  size]);\n\tpositions.push([-size, -size,  size]);\n\n\tnormals.push([0, 0, 1]);\n\tnormals.push([0, 0, 1]);\n\tnormals.push([0, 0, 1]);\n\tnormals.push([0, 0, 1]);\n\n\tcoords.push([0, 0]);\n\tcoords.push([1, 0]);\n\tcoords.push([1, 1]);\n\tcoords.push([0, 1]);\n\n\tindices.push(count * 4 + 0);\n\tindices.push(count * 4 + 1);\n\tindices.push(count * 4 + 2);\n\tindices.push(count * 4 + 0);\n\tindices.push(count * 4 + 2);\n\tindices.push(count * 4 + 3);\n\n\tcount ++;\n\n\t// LEFT\n\tpositions.push([-size, -size,  size]);\n\tpositions.push([-size, -size, -size]);\n\tpositions.push([-size,  size, -size]);\n\tpositions.push([-size,  size,  size]);\n\n\tnormals.push([-1, 0, 0]);\n\tnormals.push([-1, 0, 0]);\n\tnormals.push([-1, 0, 0]);\n\tnormals.push([-1, 0, 0]);\n\n\tcoords.push([0, 0]);\n\tcoords.push([1, 0]);\n\tcoords.push([1, 1]);\n\tcoords.push([0, 1]);\n\n\tindices.push(count * 4 + 0);\n\tindices.push(count * 4 + 1);\n\tindices.push(count * 4 + 2);\n\tindices.push(count * 4 + 0);\n\tindices.push(count * 4 + 2);\n\tindices.push(count * 4 + 3);\n\n\tcount ++;\n\n\t// TOP\n\tpositions.push([size,  size,  size]);\n\tpositions.push([-size,  size,  size]);\n\tpositions.push([-size,  size, -size]);\n\tpositions.push([size,  size, -size]);\n\n\tnormals.push([0, 1, 0]);\n\tnormals.push([0, 1, 0]);\n\tnormals.push([0, 1, 0]);\n\tnormals.push([0, 1, 0]);\n\n\tcoords.push([0, 0]);\n\tcoords.push([1, 0]);\n\tcoords.push([1, 1]);\n\tcoords.push([0, 1]);\n\n\tindices.push(count * 4 + 0);\n\tindices.push(count * 4 + 1);\n\tindices.push(count * 4 + 2);\n\tindices.push(count * 4 + 0);\n\tindices.push(count * 4 + 2);\n\tindices.push(count * 4 + 3);\n\n\tcount ++;\n\n\t// BOTTOM\n\tpositions.push([size, -size, -size]);\n\tpositions.push([-size, -size, -size]);\n\tpositions.push([-size, -size,  size]);\n\tpositions.push([size, -size,  size]);\n\n\tnormals.push([0, -1, 0]);\n\tnormals.push([0, -1, 0]);\n\tnormals.push([0, -1, 0]);\n\tnormals.push([0, -1, 0]);\n\n\tcoords.push([0, 0]);\n\tcoords.push([1, 0]);\n\tcoords.push([1, 1]);\n\tcoords.push([0, 1]);\n\n\tindices.push(count * 4 + 0);\n\tindices.push(count * 4 + 1);\n\tindices.push(count * 4 + 2);\n\tindices.push(count * 4 + 0);\n\tindices.push(count * 4 + 2);\n\tindices.push(count * 4 + 3);\n\n\tconst mesh = new Mesh(drawType);\n\tmesh.bufferVertex(positions);\n\tmesh.bufferTexCoord(coords);\n\tmesh.bufferIndex(indices);\n\tmesh.bufferNormal(normals);\n\n\treturn mesh;\n};\n\nGeom.bigTriangle = function bigTriangle() {\n\n\tif(!meshTri) {\n\t\tconst indices = [2, 1, 0];\n\t\tconst positions = [\n\t\t\t[-1, -1], \n\t\t\t[-1, 4], \n\t\t\t[4, -1]\n\t\t];\n\t\t\n\t\tmeshTri = new Mesh();\n\t\tmeshTri.bufferData(positions, 'aPosition', 2);\n\t\tmeshTri.bufferIndex(indices);\t\n\t}\n\t\n\n\treturn meshTri;\n};\n\nexport default Geom;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/Geom.js","// Scheduler.js\nconst FRAMERATE = 60;\n\nclass Scheduler {\n\n\tconstructor() {\n\t\tthis._delayTasks = [];\n\t\tthis._nextTasks = [];\n\t\tthis._deferTasks = [];\n\t\tthis._highTasks = [];\n\t\tthis._usurpTask = [];\n\t\tthis._enterframeTasks = [];\n\t\tthis._idTable = 0;\n\n\t\tthis._startTime = new Date().getTime();\n\n\t\tthis._deltaTime = 0;\n\n\t\tthis._loop();\n\t}\n\n\n\t//  PUBLIC METHODS\n\n\taddEF(func, params) {\n\t\tparams = params || [];\n\t\tconst id = this._idTable;\n\t\tthis._enterframeTasks[id] = { func, params };\n\t\tthis._idTable ++;\n\t\treturn id;\n\t}\n\n\tremoveEF(id) {\n\t\tif (this._enterframeTasks[id] !== undefined) {\n\t\t\tthis._enterframeTasks[id] = null;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tdelay(func, params, delay) {\n\t\tconst time = new Date().getTime();\n\t\tconst t = { func, params, delay, time };\n\t\tthis._delayTasks.push(t);\n\t}\n\n\tdefer(func, params) {\n\t\tconst t = { func, params };\n\t\tthis._deferTasks.push(t);\n\t}\n\n\tnext(func, params) {\n\t\tconst t = { func, params };\n\t\tthis._nextTasks.push(t);\n\t}\n\n\tusurp(func, params) {\n\t\tconst t = { func, params };\n\t\tthis._usurpTask.push(t);\n\t}\n\n\n\t//  PRIVATE METHODS\n\n\t_process() {\n\t\tlet i = 0;\n\t\tlet task;\n\t\tlet interval;\n\t\tlet current;\n\t\tfor (i = 0; i < this._enterframeTasks.length; i++) {\n\t\t\ttask = this._enterframeTasks[i];\n\t\t\tif (task !== null && task !== undefined) {\n\t\t\t\ttask.func(task.params);\n\t\t\t}\n\t\t}\n\n\t\twhile (this._highTasks.length > 0) {\n\t\t\ttask = this._highTasks.pop();\n\t\t\ttask.func(task.params);\n\t\t}\n\n\n\t\tlet startTime = new Date().getTime();\n\t\tthis._deltaTime = (startTime - this._startTime)/1000;\n\n\t\tfor (i = 0; i < this._delayTasks.length; i++) {\n\t\t\ttask = this._delayTasks[i];\n\t\t\tif (startTime - task.time > task.delay) {\n\t\t\t\ttask.func(task.params);\n\t\t\t\tthis._delayTasks.splice(i, 1);\n\t\t\t}\n\t\t}\n\n\t\tstartTime = new Date().getTime();\n\t\tthis._deltaTime = (startTime - this._startTime)/1000;\n\t\tinterval = 1000 / FRAMERATE;\n\t\twhile (this._deferTasks.length > 0) {\n\t\t\ttask = this._deferTasks.shift();\n\t\t\tcurrent = new Date().getTime();\n\t\t\tif (current - startTime < interval) {\n\t\t\t\ttask.func(task.params);\n\t\t\t} else {\n\t\t\t\tthis._deferTasks.unshift(task);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\n\t\tstartTime = new Date().getTime();\n\t\tthis._deltaTime = (startTime - this._startTime)/1000;\n\t\tinterval = 1000 / FRAMERATE;\n\t\twhile (this._usurpTask.length > 0) {\n\t\t\ttask = this._usurpTask.shift();\n\t\t\tcurrent = new Date().getTime();\n\t\t\tif (current - startTime < interval) {\n\t\t\t\ttask.func(task.params);\n\t\t\t}\n\t\t}\n\n\t\tthis._highTasks = this._highTasks.concat(this._nextTasks);\n\t\tthis._nextTasks = [];\n\t\tthis._usurpTask = [];\n\t}\n\n\n\t_loop() {\n\t\tthis._process();\n\t\twindow.requestAnimationFrame(() => this._loop());\n\t}\n\n\tget deltaTime() {\n\t\treturn this._deltaTime;\n\t}\n}\n\nconst scheduler = new Scheduler();\n\nexport default scheduler;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/scheduling/src/scheduler.js\n// module id = 7\n// module chunks = 0","// Pass.js\n\nimport GLShader from '../GLShader';\nimport FrameBuffer from '../FrameBuffer';\nimport ShaderLibs from '../utils/ShaderLibs';\n\nclass Pass {\n\tconstructor(mSource, mWidth = 0, mHeight = 0, mParams = {}) {\n\t\tthis.shader = new GLShader(ShaderLibs.bigTriangleVert, mSource);\n\n\t\tthis._width = mWidth;\n\t\tthis._height = mHeight;\n\t\tthis._uniforms = {};\n\t\tthis._hasOwnFbo = this._width > 0 && this._width > 0;\n\t\tthis._uniforms = {};\n\n\t\tif (this._hasOwnFbo) {\n\t\t\tthis._fbo = new FrameBuffer(this._width, this.height, mParmas);\n\t\t}\n\t}\n\n\n\tuniform(mName, mValue) {\n\t\tthis._uniforms[mName] = mValue;\n\t}\n\n\n\trender(texture) {\n\t\tthis.shader.bind();\n\t\tthis.shader.uniform('texture', 'uniform1i', 0);\n\t\ttexture.bind(0);\n\n\t\tthis.shader.uniform(this._uniforms);\n\t}\n\n\tget width() {\treturn this._width;\t}\n\tget height() {\treturn this._height;\t}\n\tget fbo() {\treturn this._fbo;\t}\n\tget hasFbo() {\treturn this._hasOwnFbo; }\n}\n\nexport default Pass;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/post/Pass.js","module.exports = \"// simpleColor.frag\\n\\n#define SHADER_NAME SIMPLE_COLOR\\n\\nprecision mediump float;\\n#define GLSLIFY 1\\n\\nuniform vec3 color;\\nuniform float opacity;\\n\\nvoid main(void) {\\n    gl_FragColor = vec4(color, opacity);\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/alfrid/shaders/simpleColor.frag\n// module id = 9\n// module chunks = 0","module.exports = \"// basic.vert\\n\\n#define SHADER_NAME BASIC_VERTEX\\n\\nprecision highp float;\\n#define GLSLIFY 1\\nattribute vec3 aVertexPosition;\\nattribute vec2 aTextureCoord;\\nattribute vec3 aNormal;\\n\\nuniform mat4 uModelMatrix;\\nuniform mat4 uViewMatrix;\\nuniform mat4 uProjectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\nvarying vec3 vNormal;\\n\\nvoid main(void) {\\n    gl_Position = uProjectionMatrix * uViewMatrix * uModelMatrix * vec4(aVertexPosition, 1.0);\\n    vTextureCoord = aTextureCoord;\\n    vNormal = aNormal;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/alfrid/shaders/basic.vert\n// module id = 10\n// module chunks = 0","// GLTexture.js\n\n'use strict';\n\nimport GL from './GLTool';\n\nfunction isPowerOfTwo(x) {\t\n\treturn (x !== 0) && (!(x & (x - 1)));\n};\n\nfunction isSourcePowerOfTwo(obj) {\t\n\tconst w = obj.width || obj.videoWidth;\n\tconst h = obj.height || obj.videoHeight;\n\n\tif(!w || !h) { return false; }\n\n\treturn isPowerOfTwo(w) && isPowerOfTwo(h);\n};\n\nlet gl;\n\nclass GLTexture {\n\n\tconstructor(mSource, isTexture = false, mParameters = {}) {\n\t\tgl = GL.gl;\n\n\t\tif(isTexture) {\n\t\t\tthis._texture = mSource;\n\t\t} else {\n\t\t\tthis._mSource  = mSource;\n\t\t\tthis._texture  = gl.createTexture();\n\t\t\tthis._isVideo  = (mSource.tagName === 'VIDEO');\n\t\t\tthis._premultiplyAlpha = true;\n\t\t\tthis._magFilter = mParameters.magFilter || gl.LINEAR;\n\t\t\tthis._minFilter = mParameters.minFilter || gl.NEAREST_MIPMAP_LINEAR;\n\t\t\t\n\t\t\tthis._wrapS     = mParameters.wrapS || gl.MIRRORED_REPEAT;\n\t\t\tthis._wrapT     = mParameters.wrapT || gl.MIRRORED_REPEAT;\n\t\t\tconst width    = mSource.width || mSource.videoWidth;\n\n\t\t\tif(width) {\n\t\t\t\tif(!isSourcePowerOfTwo(mSource)) {\n\t\t\t\t\tthis._wrapS = this._wrapT = gl.CLAMP_TO_EDGE;\n\t\t\t\t\tif(this._minFilter === gl.NEAREST_MIPMAP_LINEAR) {\n\t\t\t\t\t\tthis._minFilter = gl.LINEAR;\n\t\t\t\t\t}\n\t\t\t\t} \t\n\t\t\t} else {\n\t\t\t\tthis._wrapS = this._wrapT = gl.CLAMP_TO_EDGE;\n\t\t\t\tif(this._minFilter === gl.NEAREST_MIPMAP_LINEAR) {\n\t\t\t\t\tthis._minFilter = gl.LINEAR;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, this._texture);\n\t\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\n\t\t\tif(mSource.exposure) {\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, mSource.shape[0], mSource.shape[1], 0, gl.RGBA, gl.FLOAT, mSource.data);\n\t\t\t} else {\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, mSource);\t\n\t\t\t}\n\t\t\t\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, this._magFilter);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, this._minFilter);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, this._wrapS);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, this._wrapT);\n\n\t\t\tconst ext = GL.getExtension('EXT_texture_filter_anisotropic');\n\t\t\tif(ext) {\n\t\t\t\tconst max = gl.getParameter(ext.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n\t\t\t\tgl.texParameterf(gl.TEXTURE_2D, ext.TEXTURE_MAX_ANISOTROPY_EXT, max);\n\t\t\t}\n\t\t\t\n\t\t\tif(this._canGenerateMipmap()) {\n\t\t\t\tgl.generateMipmap(gl.TEXTURE_2D);\n\t\t\t}\n\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\t}\n\t}\n\n\tgenerateMipmap() {\n\t\tif (!this._canGenerateMipmap()) { return; }\n\t\tgl.bindTexture(gl.TEXTURE_2D, this._texture);\n\t\tgl.generateMipmap(gl.TEXTURE_2D);\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t}\n\n\n\t//\tMIPMAP FILTER\n\n\tset minFilter(mValue) {\n\t\tif(mValue !== gl.LINEAR\n\t\t\t&& mValue !== gl.NEAREST \n\t\t\t&& mValue !== gl.NEAREST_MIPMAP_LINEAR\n\t\t\t&& mValue !== gl.NEAREST_MIPMAP_LINEAR\n\t\t\t&& mValue !== gl.LINEAR_MIPMAP_LINEAR\n\t\t\t&& mValue !== gl.NEAREST_MIPMAP_NEAREST\n\t\t) { return this; }\n\t\tthis._minFilter = mValue;\n\t\tgl.bindTexture(gl.TEXTURE_2D, this._texture);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, this._minFilter);\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t}\n\n\tget minFilter() {\n\t\treturn this._minFilter;\n\t}\n\n\tset magFilter(mValue) {\n\t\tif(mValue !== gl.LINEAR && mValue !== gl.NEAREST) { return this; }\n\t\tthis._magFilter = mValue;\n\t\tgl.bindTexture(gl.TEXTURE_2D, this._texture);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, this._magFilter);\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t}\n\n\tget magFilter() {\n\t\treturn this._magFilter;\n\t}\n\n\n\t//\tWRAP\n\n\tset wrapS(mValue) {\n\t\tif(mValue !== gl.CLAMP_TO_EDGE && mValue !== gl.REPEAT && mValue !== gl.MIRRORED_REPEAT) { return this; }\n\t\tthis._wrapS = mValue;\n\t\tgl.bindTexture(gl.TEXTURE_2D, this._texture);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, this._wrapS);\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t}\n\n\tget wrapS() {\n\t\treturn this._wrapS;\n\t}\n\n\tset wrapT(mValue) {\n\t\tif(mValue !== gl.CLAMP_TO_EDGE && mValue !== gl.REPEAT && mValue !== gl.MIRRORED_REPEAT) { return this; }\n\t\tthis._wrapT = mValue;\n\t\tgl.bindTexture(gl.TEXTURE_2D, this._texture);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, this._wrapT);\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t}\n\n\tget wrapT() {\n\t\treturn this._wrapT;\n\t}\n\n\n\t//\tPREMULTIPLY ALPHA\n\n\tset premultiplyAlpha(mValue) {\n\t\tthis._premultiplyAlpha = mValue;\n\t\tgl.bindTexture(gl.TEXTURE_2D, this._texture);\n\t\tconsole.log('premultiplyAlpha:', mValue);\n\t\tgl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this._premultiplyAlpha);\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\n\t}\n\n\tget premultiplyAlpha() {\n\t\treturn this._premultiplyAlpha;\n\t}\n\n\t//\tUPDATE TEXTURE\n\n\tupdateTexture(mSource) {\n\t\tif(mSource) { this._mSource = mSource; }\n\t\tgl.bindTexture(gl.TEXTURE_2D, this._texture);\n\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._mSource);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, this._magFilter);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, this._minFilter);\n\t\tif(this._canGenerateMipmap()) {\n\t\t\tgl.generateMipmap(gl.TEXTURE_2D);\n\t\t}\n\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t}\n\n\n\tbind(index) {\n\t\tif(index === undefined) { index = 0; }\n\t\tif(!GL.shader) { return; }\n\n\t\tgl.activeTexture(gl.TEXTURE0 + index);\n\t\tgl.bindTexture(gl.TEXTURE_2D, this._texture);\n\t\tthis._bindIndex = index;\n\t}\n\n\t_canGenerateMipmap() {\n\t\treturn this._minFilter === gl.LINEAR_MIPMAP_NEAREST \n\t\t\t\t|| this._minFilter === gl.NEAREST_MIPMAP_LINEAR \n\t\t\t\t|| this._minFilter === gl.LINEAR_MIPMAP_LINEAR \n\t\t\t\t|| this._minFilter === gl.NEAREST_MIPMAP_NEAREST;\n\t}\n\n\t//\tGETTER\n\n\tget texture() {\treturn this._texture;\t}\n}\n\n\nlet _whiteTexture, _greyTexture, _blackTexture;\n\nGLTexture.whiteTexture = function whiteTexture() {\n\tif(_whiteTexture === undefined) {\n\t\tconst canvas = document.createElement('canvas');\n\t\tcanvas.width = canvas.height = 4;\n\t\tconst ctx = canvas.getContext('2d');\n\t\tctx.fillStyle = '#fff';\n\t\tctx.fillRect(0, 0, 4, 4);\n\t\t_whiteTexture = new GLTexture(canvas);\n\t}\n\t\n\treturn _whiteTexture;\n};\n\nGLTexture.greyTexture = function greyTexture() {\n\tif(_greyTexture === undefined) {\n\t\tconst canvas = document.createElement('canvas');\n\t\tcanvas.width = canvas.height = 4;\n\t\tconst ctx = canvas.getContext('2d');\n\t\tctx.fillStyle = 'rgb(127, 127, 127)';\n\t\tctx.fillRect(0, 0, 4, 4);\n\t\t_greyTexture = new GLTexture(canvas);\n\t}\n\treturn _greyTexture;\n};\n\nGLTexture.blackTexture = function blackTexture() {\n\tif(_blackTexture === undefined) {\n\t\tconst canvas = document.createElement('canvas');\n\t\tcanvas.width = canvas.height = 4;\n\t\tconst ctx = canvas.getContext('2d');\n\t\tctx.fillStyle = 'rgb(127, 127, 127)';\n\t\tctx.fillRect(0, 0, 4, 4);\n\t\t_blackTexture = new GLTexture(canvas);\n\t}\n\treturn _blackTexture;\n};\n\nexport default GLTexture;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/GLTexture.js","// FrameBuffer.js\n\n'use strict';\n\nimport GL from './GLTool';\nimport GLTexture from './GLTexture';\n\nfunction isPowerOfTwo(x) {\t\n\treturn (x !== 0) && (!(x & (x - 1)));\n};\n\nlet gl;\nlet webglDepthTexture;\nlet hasCheckedMultiRenderSupport = false;\nlet extDrawBuffer;\n\n\nconst checkMultiRender = function () {\n\tif(GL.webgl2) {\n\t\treturn true;\n\t} else {\n\t\textDrawBuffer = GL.getExtension('WEBGL_draw_buffers');\n\t\treturn !!extDrawBuffer;\n\t}\n\t\n\thasCheckedMultiRenderSupport = true;\n};\n\nclass FrameBuffer {\n\n\tconstructor(mWidth, mHeight, mParameters = {}, multipleTargets = false) {\n\t\tgl = GL.gl;\n\t\twebglDepthTexture = GL.checkExtension('WEBGL_depth_texture');\n\n\t\tthis.width            = mWidth;\n\t\tthis.height           = mHeight;\n\t\tthis._multipleTargets = multipleTargets;\n\n\t\tthis.magFilter  = mParameters.magFilter \t|| gl.LINEAR;\n\t\tthis.minFilter  = mParameters.minFilter \t|| gl.LINEAR_MIPMAP_NEAREST;\n\t\tthis.wrapS      = mParameters.wrapS \t\t|| gl.CLAMP_TO_EDGE;\n\t\tthis.wrapT      = mParameters.wrapT \t\t|| gl.CLAMP_TO_EDGE;\n\t\tthis.useDepth   = mParameters.useDepth \t\t|| true;\n\t\tthis.useStencil = mParameters.useStencil \t|| false;\n\t\tthis.texelType \t= mParameters.type;\n\n\t\tif(!isPowerOfTwo(this.width) || !isPowerOfTwo(this.height)) {\n\t\t\tthis.wrapS = this.wrapT = gl.CLAMP_TO_EDGE;\n\n\t\t\tif(this.minFilter === gl.LINEAR_MIPMAP_NEAREST) {\n\t\t\t\tthis.minFilter = gl.LINEAR;\n\t\t\t}\n\t\t} \n\n\t\tif(!hasCheckedMultiRenderSupport) {\n\t\t\t// console.log('Has multi render support  :', checkMultiRender());\n\t\t\tcheckMultiRender();\n\t\t}\n\t\tthis._init();\n\t}\n\n\n\t_init() {\n\t\tlet texelType = gl.UNSIGNED_BYTE;\n\t\tif (this.texelType) {\n\t\t\ttexelType = this.texelType;\n\t\t}\n\n\t\tthis.texelType = texelType;\n\n\t\tthis._textures = [];\n\t\tthis._initTextures();\n\t\t\n\t\tthis.frameBuffer        = gl.createFramebuffer();\t\t\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n\n\t\tif(GL.webgl2) {\n\t\t\t// this.renderBufferDepth = gl.createRenderbuffer();\n\t\t\t// gl.bindRenderbuffer(gl.RENDERBUFFER, this.renderBufferDepth);\n\t\t\t// gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, this.width, this.height);\n\t\t\t// gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this.renderBufferDepth);\n\n\t\t\tconst buffers = [];\n\t\t\tfor (let i = 0; i < this._textures.length; i++) {\n\t\t\t\tgl.framebufferTexture2D(gl.DRAW_FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i, gl.TEXTURE_2D, this._textures[i].texture, 0);\n\t\t\t\tbuffers.push(gl[`COLOR_ATTACHMENT${i}`]);\n\t\t\t}\n\n\t\t\tgl.drawBuffers(buffers);\n\n\t\t\tgl.framebufferTexture2D(gl.DRAW_FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, this.glDepthTexture.texture, 0);\n\n\t\t} else {\n\t\t\tfor (let i = 0; i < this._textures.length; i++) {\n\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i, gl.TEXTURE_2D, this._textures[i].texture, 0);\t\n\t\t\t}\n\n\t\t\tif(this._multipleTargets) {\n\t\t\t\textDrawBuffer.drawBuffersWEBGL([\n\t\t\t\t\textDrawBuffer.COLOR_ATTACHMENT0_WEBGL, // gl_FragData[0]\n\t\t\t\t\textDrawBuffer.COLOR_ATTACHMENT1_WEBGL, // gl_FragData[1]\n\t\t\t\t\textDrawBuffer.COLOR_ATTACHMENT2_WEBGL, // gl_FragData[2]\n\t\t\t\t\textDrawBuffer.COLOR_ATTACHMENT3_WEBGL  // gl_FragData[3]\n\t\t\t\t]);\t\n\t\t\t}\n\n\t\t\tif(webglDepthTexture) {\n\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, this.glDepthTexture.texture, 0);\t\n\t\t\t}\n\t\t}\n\t\t\n\n\t\tif(this.minFilter === gl.LINEAR_MIPMAP_NEAREST)\t{\n\t\t\tfor (let i = 0; i < this._textures.length; i++) {\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, this._textures[i].texture);\n\t\t\t\tgl.generateMipmap(gl.TEXTURE_2D);\n\t\t\t}\n\t\t}\n\n\n\t\t//\tCHECKING FBO\n\t\tconst FBOstatus = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\t\tif(FBOstatus != gl.FRAMEBUFFER_COMPLETE) {\n\t\t\tconsole.log('GL_FRAMEBUFFER_COMPLETE failed, CANNOT use Framebuffer');\n\t\t}\n\n\t\t//\tUNBIND\n\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n\t\t\n\t\t//\tCLEAR FRAMEBUFFER \n\n\t\tthis.clear();\n\t}\n\n\n\t_initTextures() {\n\t\tconst numTextures = this._multipleTargets ? 4 : 1;\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tconst glt = this._createTexture();\n\t\t\tthis._textures.push(glt);\n\t\t}\n\n\t\t\n\t\tif(GL.webgl2) { \n\t\t\tthis.glDepthTexture = this._createTexture(gl.DEPTH_COMPONENT16, gl.UNSIGNED_SHORT, gl.DEPTH_COMPONENT, true);\n\t\t} else {\n\t\t\tthis.glDepthTexture = this._createTexture(gl.DEPTH_COMPONENT, gl.UNSIGNED_SHORT);\n\t\t}\n\t}\n\n\n\t_createTexture(mInternalformat, mTexelType, mFormat, forceNearest = false) {\n\t\tif(mInternalformat === undefined) {\tmInternalformat = gl.RGBA;\t}\n\t\tif(mTexelType === undefined) {\tmTexelType = this.texelType;\t}\n\t\tif(!mFormat) {\tmFormat = mInternalformat; }\n\n\t\tconst t = gl.createTexture();\n\t\tconst glt = new GLTexture(t, true);\n\t\tconst magFilter = forceNearest ? GL.NEAREST : this.magFilter;\n\t\tconst minFilter = forceNearest ? GL.NEAREST : this.minFilter;\n\n\t\tgl.bindTexture(gl.TEXTURE_2D, t);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, this.wrapS);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, this.wrapT);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, mInternalformat, this.width, this.height, 0, mFormat, mTexelType, null);\t\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\n\t\treturn glt;\n\t}\n\n\t//\tPUBLIC METHODS\n\n\tbind(mAutoSetViewport=true) {\n\t\tif(mAutoSetViewport) {\n\t\t\tGL.viewport(0, 0, this.width, this.height);\t\n\t\t}\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n\t}\n\n\n\tunbind(mAutoSetViewport=true) {\n\t\tif(mAutoSetViewport) {\n\t\t\tGL.viewport(0, 0, GL.width, GL.height);\t\n\t\t}\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t}\n\n\n\tclear(r = 0, g = 0, b = 0, a = 0) {\n\t\tthis.bind();\n\t\tGL.clear(r, g, b, a);\n\t\tthis.unbind();\n\t}\t\n\n\n\t//\tTEXTURES\n\n\tgetTexture(mIndex = 0) {\n\t\treturn this._textures[mIndex];\n\t}\n\n\tgetDepthTexture() {\n\t\treturn this.glDepthTexture;\n\t}\n\n\n\t//\tMIPMAP FILTER\n\n\tminFilter(mValue) {\n\t\tif(mValue !== gl.LINEAR && mValue !== gl.NEAREST && mValue !== gl.LINEAR_MIPMAP_NEAREST) { return this; }\n\t\tthis.minFilter = mValue;\n\t\treturn this;\n\t}\n\n\tmagFilter(mValue) {\n\t\tif(mValue !== gl.LINEAR && mValue !== gl.NEAREST && mValue !== gl.LINEAR_MIPMAP_NEAREST) { return this; }\n\t\tthis.magFilter = mValue;\n\t\treturn this;\n\t}\n\n\n\t//\tWRAP\n\n\twrapS(mValue) {\n\t\tif(mValue !== gl.CLAMP_TO_EDGE && mValue !== gl.REPEAT && mValue !== gl.MIRRORED_REPEAT) { return this; }\n\t\tthis.wrapS = mValue;\n\t\treturn this;\n\t}\n\n\twrapT(mValue) {\n\t\tif(mValue !== gl.CLAMP_TO_EDGE && mValue !== gl.REPEAT && mValue !== gl.MIRRORED_REPEAT) { return this; }\n\t\tthis.wrapT = mValue;\n\t\treturn this;\n\t}\n\n\n}\n\n\nexport default FrameBuffer;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/FrameBuffer.js","// EaseNumber.js\n\nimport Scheduler from 'scheduling';\n\nclass EaseNumber {\n\tconstructor(mValue, mEasing = 0.1) {\n\t\tthis.easing       = mEasing;\n\t\tthis._value       = mValue;\n\t\tthis._targetValue = mValue;\n\t\tthis._efIndex     = Scheduler.addEF(()=> this._update());\n\t}\n\n\n\t_update() {\n\t\tconst MIN_DIFF = 0.0001;\n\t\tthis._checkLimit();\n\t\tthis._value += (this._targetValue - this._value) * this.easing;\t\n\t\tif(Math.abs(this._targetValue - this._value) < MIN_DIFF) {\n\t\t\tthis._value = this._targetValue;\n\t\t}\n\t}\n\n\tsetTo(mValue) {\n\t\tthis._targetValue = this._value = mValue;\n\t}\n\n\n\tadd(mAdd) {\n\t\tthis._targetValue += mAdd;\n\t}\n\n\tlimit(mMin, mMax) {\n\t\tif(mMin > mMax) {\n\t\t\tthis.limit(mMax, mMin);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._min = mMin;\n\t\tthis._max = mMax;\n\n\t\tthis._checkLimit();\n\t}\n\n\n\t_checkLimit() {\n\t\tif(this._min !== undefined && this._targetValue < this._min) {\n\t\t\tthis._targetValue = this._min;\n\t\t} \n\n\t\tif(this._max !== undefined && this._targetValue > this._max) {\n\t\t\tthis._targetValue = this._max;\n\t\t} \n\t}\n\n\n\tdestroy() {\n\t\tScheduler.removeEF(this._efIndex);\n\t}\n\n\n\t//\tGETTERS / SETTERS\n\n\tset value(mValue) {\n\t\tthis._targetValue = mValue;\n\t}\n\n\tget value() {\n\t\treturn this._value;\n\t}\n\n\tget targetValue() {\n\t\treturn this._targetValue;\n\t}\n\n}\n\n\nexport default EaseNumber;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/utils/EaseNumber.js","// Camera.js\n\nimport { mat4, mat3, quat } from 'gl-matrix';\n\nclass Camera {\n\tconstructor() {\n\t\t//\tVIEW MATRIX\n\t\tthis._matrix = mat4.create();\n\n\t\t//\tFOR TRANSFORM FROM ORIENTATION\n\t\tthis._quat = quat.create();\n\t\tthis._orientation = mat4.create();\n\n\t\t//\tPROJECTION MATRIX\n\t\tthis._projection = mat4.create();\n\n\t\t//\tPOSITION OF CAMERA\n\t\tthis.position = vec3.create();\n\t}\n\n\n\tlookAt(aEye, aCenter, aUp = [0, 1, 0]) {\n\t\tthis._eye = vec3.clone(aEye);\n\t\tthis._center = vec3.clone(aCenter);\n\n\t\tvec3.copy(this.position, aEye);\n\t\tmat4.identity(this._matrix);\n\t\tmat4.lookAt(this._matrix, aEye, aCenter, aUp);\n\t}\n\n\n\tsetFromOrientation(x, y, z, w) {\n\t\tquat.set(this._quat, x, y, z, w);\n\t\tmat4.fromQuat(this._orientation, this._quat);\n\t\tmat4.translate(this._matrix, this._orientation, this.positionOffset);\n\t}\n\n\n\tsetProjection(mProj) {\n\t\tthis._projection = mat4.clone(mProj);\n\t}\n\n\n\tsetView(mView) {\n\t\tthis._matrix = mat4.clone(mView);\n\t}\n\t\n\n\tsetFromViewProj(mView, mProj) {\n\t\tthis.setView(mView);\n\t\tthis.setProjection(mProj);\n\t}\n\n\n\t//\tGETTERS \n\n\tget matrix() {\n\t\treturn this._matrix;\n\t}\n\n\tget viewMatrix() {\n\t\treturn this._matrix;\n\t}\n\n\n\tget projection() {\n\t\treturn this._projection;\n\t} \n\n\tget projectionMatrix() {\n\t\treturn this._projection;\n\t} \n\n\n\tget eye() {\treturn this._eye;\t}\n\n\tget center() {\treturn this._center;\t}\n}\n\n\nexport default Camera;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/cameras/Camera.js","// CameraPerspective.js\n\nimport Camera from './Camera';\nimport Ray from '../math/Ray';\nimport { mat4, vec3 } from 'gl-matrix';\n\nconst mInverseViewProj = mat4.create();\nconst cameraDir = vec3.create();\n\n\nclass CameraPerspective extends Camera {\n\n\tsetPerspective(mFov, mAspectRatio, mNear, mFar) {\n\t\t\n\t\tthis._fov         = mFov;\n\t\tthis._near        = mNear;\n\t\tthis._far         = mFar;\n\t\tthis._aspectRatio = mAspectRatio;\n\t\tmat4.perspective(this._projection, mFov, mAspectRatio, mNear, mFar);\n\n\t\t// this._frustumTop = this._near * Math.tan(this._fov * 0.5);\n\t\t// this._frustumButtom = -this._frustumTop;\n\t\t// this._frustumRight = this._frustumTop * this._aspectRatio;\n\t\t// this._frustumLeft = -this._frustumRight;\n\t}\n\n\n\tsetAspectRatio(mAspectRatio) {\n\t\tthis._aspectRatio = mAspectRatio;\n\t\tmat4.perspective(this.projection, this._fov, mAspectRatio, this._near, this._far);\n\t}\n\n\n\tgenerateRay(mScreenPosition, mRay) {\n\t\tconst proj = this.projectionMatrix;\n\t\tconst view = this.viewMatrix;\n\n\t\tmat4.multiply(mInverseViewProj, proj, view);\n\t\tmat4.invert(mInverseViewProj, mInverseViewProj);\n\n\t\tvec3.transformMat4(cameraDir, mScreenPosition, mInverseViewProj);\n\t\tvec3.sub(cameraDir, cameraDir, this.position);\n\t\tvec3.normalize(cameraDir, cameraDir);\n\n\t\tif (!mRay) {\n\t\t\tmRay = new Ray(this.position, cameraDir);\n\t\t} else {\n\t\t\tmRay.origin = this.position;\n\t\t\tmRay.direction = cameraDir;\n\t\t}\n\n\n\t\treturn mRay;\n\t}\n}\n\n\nexport default CameraPerspective;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/cameras/CameraPerspective.js","// BinaryLoader.js\n\nclass BinaryLoader {\n\n\tconstructor(isArrayBuffer = false) {\n\t\tthis._req = new XMLHttpRequest();\n\t\tthis._req.addEventListener('load', (e)=>this._onLoaded(e));\n\t\tthis._req.addEventListener('progress', (e)=>this._onProgress(e));\n\t\tif(isArrayBuffer) {\n\t\t\tthis._req.responseType = 'arraybuffer';\n\t\t}\n\t}\t\n\n\n\tload(url, callback) {\n\t\tconsole.log('Loading : ', url);\n\t\tthis._callback = callback;\n\n\t\tthis._req.open('GET', url);\n\t\tthis._req.send();\n\t}\n\n\n\t_onLoaded() {\n\t\tthis._callback(this._req.response);\n\t}\n\n\t_onProgress(/* e*/) {\n\t\t// console.log('on Progress:', (e.loaded/e.total*100).toFixed(2));\n\t}\n}\n\nexport default BinaryLoader;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/loaders/BinaryLoader.js","module.exports = \"// bigTriangle.vert\\n\\n#define SHADER_NAME BIG_TRIANGLE_VERTEX\\n\\nprecision mediump float;\\n#define GLSLIFY 1\\nattribute vec2 aPosition;\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void) {\\n    gl_Position = vec4(aPosition, 0.0, 1.0);\\n    vTextureCoord = aPosition * .5 + .5;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/alfrid/shaders/bigTriangle.vert\n// module id = 17\n// module chunks = 0","module.exports = \"// copy.frag\\n\\n#define SHADER_NAME COPY_FRAGMENT\\n\\nprecision mediump float;\\n#define GLSLIFY 1\\n\\nvarying vec2 vTextureCoord;\\nuniform sampler2D texture;\\n\\nvoid main(void) {\\n    gl_FragColor = texture2D(texture, vTextureCoord);\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/alfrid/shaders/copy.frag\n// module id = 18\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nimport * as glMatrix from \"./common\";\n\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {mat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    let a01 = a[1], a02 = a[2], a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function invert(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  let b01 = a22 * a11 - a12 * a21;\n  let b11 = -a22 * a10 + a12 * a20;\n  let b21 = a21 * a10 - a11 * a20;\n\n  // Calculate the determinant\n  let det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function adjoint(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  out[0] = (a11 * a22 - a12 * a21);\n  out[1] = (a02 * a21 - a01 * a22);\n  out[2] = (a01 * a12 - a02 * a11);\n  out[3] = (a12 * a20 - a10 * a22);\n  out[4] = (a00 * a22 - a02 * a20);\n  out[5] = (a02 * a10 - a00 * a12);\n  out[6] = (a10 * a21 - a11 * a20);\n  out[7] = (a01 * a20 - a00 * a21);\n  out[8] = (a00 * a11 - a01 * a10);\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  let b00 = b[0], b01 = b[1], b02 = b[2];\n  let b10 = b[3], b11 = b[4], b12 = b[5];\n  let b20 = b[6], b21 = b[7], b22 = b[8];\n\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n  let a00 = a[0], a01 = a[1], a02 = a[2],\n    a10 = a[3], a11 = a[4], a12 = a[5],\n    a20 = a[6], a21 = a[7], a22 = a[8],\n    x = v[0], y = v[1];\n\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n  let a00 = a[0], a01 = a[1], a02 = a[2],\n    a10 = a[3], a11 = a[4], a12 = a[5],\n    a20 = a[6], a21 = a[7], a22 = a[8],\n\n    s = Math.sin(rad),\n    c = Math.cos(rad);\n\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n};\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n  let x = v[0], y = v[1];\n\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat3} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function fromRotation(out, rad) {\n  let s = Math.sin(rad), c = Math.cos(rad);\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat3} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat2d} a the matrix to copy\n * @returns {mat3} out\n **/\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n\n/**\n* Calculates a 3x3 matrix from the given quaternion\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {quat} q Quaternion to create matrix from\n*\n* @returns {mat3} out\n*/\nexport function fromQuat(out, q) {\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let yx = y * x2;\n  let yy = y * y2;\n  let zx = z * x2;\n  let zy = z * y2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n\n  return out;\n}\n\n/**\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {mat4} a Mat4 to derive the normal matrix from\n*\n* @returns {mat3} out\n*/\nexport function normalFromMat4(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n  return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Returns a string representation of a mat3\n *\n * @param {mat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' +\n          a[3] + ', ' + a[4] + ', ' + a[5] + ', ' +\n          a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {mat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2)))\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n\n\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  out[4] = a[4] + (b[4] * scale);\n  out[5] = a[5] + (b[5] * scale);\n  out[6] = a[6] + (b[6] * scale);\n  out[7] = a[7] + (b[7] * scale);\n  out[8] = a[8] + (b[8] * scale);\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] &&\n         a[3] === b[3] && a[4] === b[4] && a[5] === b[5] &&\n         a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5], a6 = a[6], a7 = a[7], a8 = a[8];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7], b8 = b[8];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n          Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n          Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n          Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)));\n}\n\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\nexport const sub = subtract;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-matrix/src/gl-matrix/mat3.js\n// module id = 19\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nimport * as glMatrix from \"./common\";\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {vec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  return Math.sqrt(x*x + y*y + z*z);\n}\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nexport function fromValues(x, y, z) {\n  let out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to ceil\n * @returns {vec3} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to floor\n * @returns {vec3} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to round\n * @returns {vec3} out\n */\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  return Math.sqrt(x*x + y*y + z*z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  return x*x + y*y + z*z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  return x*x + y*y + z*z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let len = x*x + y*y + z*z;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  let ax = a[0], ay = a[1], az = a[2];\n  let bx = b[0], by = b[1], bz = b[2];\n\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n  let ax = a[0];\n  let ay = a[1];\n  let az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nexport function hermite(out, a, b, c, d, t) {\n  let factorTimes2 = t * t;\n  let factor1 = factorTimes2 * (2 * t - 3) + 1;\n  let factor2 = factorTimes2 * (t - 2) + t;\n  let factor3 = factorTimes2 * (t - 1);\n  let factor4 = factorTimes2 * (3 - 2 * t);\n\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n  return out;\n}\n\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nexport function bezier(out, a, b, c, d, t) {\n  let inverseFactor = 1 - t;\n  let inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  let factorTimes2 = t * t;\n  let factor1 = inverseFactorTimesTwo * inverseFactor;\n  let factor2 = 3 * t * inverseFactorTimesTwo;\n  let factor3 = 3 * factorTimes2 * inverseFactor;\n  let factor4 = factorTimes2 * t;\n\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\nexport function random(out, scale) {\n  scale = scale || 1.0;\n\n  let r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  let z = (glMatrix.RANDOM() * 2.0) - 1.0;\n  let zScale = Math.sqrt(1.0-z*z) * scale;\n\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0], y = a[1], z = a[2];\n  let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n  let x = a[0], y = a[1], z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n  // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\n\n  let x = a[0], y = a[1], z = a[2];\n  let qx = q[0], qy = q[1], qz = q[2], qw = q[3];\n\n  // calculate quat * vec\n  let ix = qw * x + qy * z - qz * y;\n  let iy = qw * y + qz * x - qx * z;\n  let iz = qw * z + qx * y - qy * x;\n  let iw = -qx * x - qy * y - qz * z;\n\n  // calculate result * inverse quat\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateX(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0];\n  r[1] = p[1]*Math.cos(c) - p[2]*Math.sin(c);\n  r[2] = p[1]*Math.sin(c) + p[2]*Math.cos(c);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateY(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[2]*Math.sin(c) + p[0]*Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2]*Math.cos(c) - p[0]*Math.sin(c);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateZ(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0]*Math.cos(c) - p[1]*Math.sin(c);\n  r[1] = p[0]*Math.sin(c) + p[1]*Math.cos(c);\n  r[2] = p[2];\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport function angle(a, b) {\n  let tempA = fromValues(a[0], a[1], a[2]);\n  let tempB = fromValues(b[0], b[1], b[2]);\n\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n\n  let cosine = dot(tempA, tempB);\n\n  if(cosine > 1.0) {\n    return 0;\n  }\n  else if(cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2];\n  let b0 = b[0], b1 = b[1], b2 = b[2];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)));\n}\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 3;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2];\n    }\n\n    return a;\n  };\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-matrix/src/gl-matrix/vec3.js\n// module id = 20\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nimport * as glMatrix from \"./common\";\n\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {vec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nexport function fromValues(x, y, z, w) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to ceil\n * @returns {vec4} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to floor\n * @returns {vec4} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to round\n * @returns {vec4} out\n */\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  let w = b[3] - a[3];\n  return Math.sqrt(x*x + y*y + z*z + w*w);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  let w = b[3] - a[3];\n  return x*x + y*y + z*z + w*w;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  return Math.sqrt(x*x + y*y + z*z + w*w);\n}\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {vec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  return x*x + y*y + z*z + w*w;\n}\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to negate\n * @returns {vec4} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to invert\n * @returns {vec4} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  let len = x*x + y*y + z*z + w*w;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n  let ax = a[0];\n  let ay = a[1];\n  let az = a[2];\n  let aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\nexport function random(out, vectorScale) {\n  vectorScale = vectorScale || 1.0;\n\n  //TODO: This is a pretty awful way of doing this. Find something better.\n  out[0] = glMatrix.RANDOM();\n  out[1] = glMatrix.RANDOM();\n  out[2] = glMatrix.RANDOM();\n  out[3] = glMatrix.RANDOM();\n  normalize(out, out);\n  scale(out, out, vectorScale);\n  return out;\n}\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec4} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0], y = a[1], z = a[2], w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec4} out\n */\nexport function transformQuat(out, a, q) {\n  let x = a[0], y = a[1], z = a[2];\n  let qx = q[0], qy = q[1], qz = q[2], qw = q[3];\n\n  // calculate quat * vec\n  let ix = qw * x + qy * z - qz * y;\n  let iy = qw * y + qz * x - qx * z;\n  let iz = qw * z + qx * y - qy * x;\n  let iw = -qx * x - qy * y - qz * z;\n\n  // calculate result * inverse quat\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n}\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 4;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2]; vec[3] = a[i+3];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2]; a[i+3] = vec[3];\n    }\n\n    return a;\n  };\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-matrix/src/gl-matrix/vec4.js\n// module id = 21\n// module chunks = 0","// getAttribLoc.js\n\nexport default function (gl, shaderProgram, name) {\n\tif(shaderProgram.cacheAttribLoc === undefined) {\tshaderProgram.cacheAttribLoc = {};\t}\n\tif(shaderProgram.cacheAttribLoc[name] === undefined) {\n\t\tshaderProgram.cacheAttribLoc[name] = gl.getAttribLocation(shaderProgram, name);\n\t}\n\n\treturn shaderProgram.cacheAttribLoc[name];\n};\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/utils/getAttribLoc.js","// GLCubeTexture.js\n\n'use strict';\n\nimport GL from './GLTool';\nimport parse from 'parse-dds';\nlet gl;\nconst DDSD_MIPMAPCOUNT = 0x20000;\nconst OFF_MIPMAPCOUNT = 7;\nconst headerLengthInt = 31;\n\nclass GLCubeTexture {\n\tconstructor(mSource, mParameters = {}, isCubeTexture = false) {\n\t\tgl = GL.gl;\n\n\t\tif(isCubeTexture) {\n\t\t\tthis.texture = mSource;\n\t\t\treturn;\n\t\t}\n\n\t\tlet hasMipmaps = mSource.length > 6;\n\t\tif(mSource[0].mipmapCount) {\n\t\t\thasMipmaps = mSource[0].mipmapCount > 1;\n\t\t}\n\n\t\tthis.texture   = gl.createTexture();\n\t\tthis.magFilter = mParameters.magFilter || gl.LINEAR;\n\t\tthis.minFilter = mParameters.minFilter || gl.LINEAR_MIPMAP_LINEAR;\n\t\tthis.wrapS     = mParameters.wrapS || gl.CLAMP_TO_EDGE;\n\t\tthis.wrapT     = mParameters.wrapT || gl.CLAMP_TO_EDGE;\n\n\t\tif(!hasMipmaps && this.minFilter == gl.LINEAR_MIPMAP_LINEAR) {\n\t\t\tthis.minFilter = gl.LINEAR;\n\t\t}\n\n\t\tgl.bindTexture(gl.TEXTURE_CUBE_MAP, this.texture);\n\t\tconst targets = [\n\t\t\tgl.TEXTURE_CUBE_MAP_POSITIVE_X, gl.TEXTURE_CUBE_MAP_NEGATIVE_X, \n\t\t\tgl.TEXTURE_CUBE_MAP_POSITIVE_Y, gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, \n\t\t\tgl.TEXTURE_CUBE_MAP_POSITIVE_Z, gl.TEXTURE_CUBE_MAP_NEGATIVE_Z \n\t\t];\n\n\t\t\n\t\tlet numLevels = 1;\n\t\tlet index = 0;\n\t\tnumLevels = mSource.length / 6;\n\t\tthis.numLevels = numLevels;\n\n\t\tif (hasMipmaps) {\n\t\t\tfor (let j = 0; j < 6; j++) {\n\t\t\t\tfor (let i = 0; i < numLevels; i++) {\n\t\t\t\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\t\t\t\t\n\t\t\t\t\tindex = j * numLevels + i;\n\t\t\t\t\tif(mSource[index].shape) {\n\t\t\t\t\t\tgl.texImage2D(targets[j], i, gl.RGBA, mSource[index].shape[0], mSource[index].shape[1], 0, gl.RGBA, gl.FLOAT, mSource[index].data);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgl.texImage2D(targets[j], i, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, mSource[index]);\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, this.wrapS);\n\t\t\t\t\tgl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, this.wrapT);\n\t\t\t\t\tgl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, this.magFilter);\n\t\t\t\t\tgl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, this.minFilter);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tlet index = 0;\n\t\t\tfor (let j = 0; j < 6; j++) {\n\t\t\t\tindex = j * numLevels;\n\t\t\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\t\t\t\tif(mSource[index].shape) {\n\t\t\t\t\tgl.texImage2D(targets[j], 0, gl.RGBA, mSource[index].shape[0], mSource[index].shape[1], 0, gl.RGBA, gl.FLOAT, mSource[index].data);\n\t\t\t\t} else {\n\t\t\t\t\tgl.texImage2D(targets[j], 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, mSource[index]);\n\t\t\t\t}\n\t\t\t\tgl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, this.wrapS);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, this.wrapT);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, this.magFilter);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, this.minFilter);\n\t\t\t}\n\n\t\t\tgl.generateMipmap(gl.TEXTURE_CUBE_MAP);\n\t\t}\n\n\t\tgl.bindTexture(gl.TEXTURE_CUBE_MAP, null);\n\t}\n\n\t\n\n\t//\tPUBLIC METHOD\n\n\tbind(index = 0) {\n\t\tif(!GL.shader) { return; }\n\n\t\tgl.activeTexture(gl.TEXTURE0 + index);\n\t\tgl.bindTexture(gl.TEXTURE_CUBE_MAP, this.texture);\n\t\tgl.uniform1i(GL.shader.uniformTextures[index], index);\n\t\tthis._bindIndex = index;\n\t}\n\n\tunbind() {\n\t\tgl.bindTexture(gl.TEXTURE_CUBE_MAP, null);\t\n\t}\n}\n\n\nGLCubeTexture.parseDDS = function parseDDS(mArrayBuffer) {\n\n\tfunction clamp(value, min, max) {\n\t\tif (min > max) {\n\t\t\treturn clamp(value, max, min);\n\t\t}\n\n\t\tif (value < min) return min;\n\t\telse if (value > max) return max;\n\t\telse return value;\n\t}\n\n\t//\tCHECKING MIP MAP LEVELS\n\tconst ddsInfos = parse(mArrayBuffer);\n\tconst { flags } = ddsInfos;\n\tconst header = new Int32Array(mArrayBuffer, 0, headerLengthInt);\n\tlet mipmapCount = 1;\n\tif (flags & DDSD_MIPMAPCOUNT) {\n\t\tmipmapCount = Math.max(1, header[OFF_MIPMAPCOUNT]);\n\t}\n\tconst sources = ddsInfos.images.map((img) => {\n\t\tconst faceData = new Float32Array(mArrayBuffer.slice(img.offset, img.offset + img.length));\n\t\treturn {\n\t\t\tdata: faceData,\n\t\t\tshape: img.shape,\n\t\t\tmipmapCount,\n\t\t};\n\t});\n\n\treturn new GLCubeTexture(sources);\n};\n\n\nexport default GLCubeTexture;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/GLCubeTexture.js","// OrbitalControl.js\n'use strict';\n\nimport EaseNumber from './EaseNumber';\nimport Scheduler from  'scheduling';\nimport { vec3 } from 'gl-matrix';\n\nconst getMouse = function (mEvent, mTarget) {\n\n\tconst o = mTarget || {};\n\tif(mEvent.touches) {\n\t\to.x = mEvent.touches[0].pageX;\n\t\to.y = mEvent.touches[0].pageY;\n\t} else {\n\t\to.x = mEvent.clientX;\n\t\to.y = mEvent.clientY;\n\t}\n\n\treturn o;\n};\n\nclass OrbitalControl {\n\n\tconstructor(mTarget, mListenerTarget = window, mRadius = 500) {\n\t\tthis._target         = mTarget;\n\t\tthis._listenerTarget = mListenerTarget;\n\t\tthis._mouse          = {};\n\t\tthis._preMouse       = {};\n\t\tthis.center          = vec3.create();\n\t\tthis._up             = vec3.fromValues(0, 1, 0);\n\t\tthis.radius          = new EaseNumber(mRadius);\n\t\tthis.position        = vec3.fromValues(0, 0, this.radius.value);\n\t\tthis.positionOffset  = vec3.create();\n\t\tthis._rx             = new EaseNumber(0);\n\t\tthis._rx.limit(-Math.PI / 2, Math.PI / 2);\n\t\tthis._ry             = new EaseNumber(0);\n\t\tthis._preRX          = 0;\n\t\tthis._preRY          = 0;\n\t\t\n\t\tthis._isLockZoom     = false;\n\t\tthis._isLockRotation = false;\n\t\tthis._isInvert       = false;\n\t\tthis.sensitivity\t = 1.0;\n\n\n\t\tthis._wheelBind = (e) => this._onWheel(e);\n\t\tthis._downBind = (e) => this._onDown(e);\n\t\tthis._moveBind = (e) => this._onMove(e);\n\t\tthis._upBind = () => this._onUp();\n\t\n\t\tthis.connect();\t\t\n\t\tScheduler.addEF(() => this._loop());\n\t}\n\n\tconnect() {\n\t\tthis.disconnect();\n\n\t\tthis._listenerTarget.addEventListener('mousewheel', this._wheelBind);\n\t\tthis._listenerTarget.addEventListener('DOMMouseScroll', this._wheelBind);\n\n\t\tthis._listenerTarget.addEventListener('mousedown', this._downBind);\n\t\tthis._listenerTarget.addEventListener('touchstart', this._downBind);\n\t\tthis._listenerTarget.addEventListener('mousemove', this._moveBind);\n\t\tthis._listenerTarget.addEventListener('touchmove', this._moveBind);\n\t\twindow.addEventListener('touchend', this._upBind);\n\t\twindow.addEventListener('mouseup', this._upBind);\n\t}\n\n\tdisconnect() {\n\t\tthis._listenerTarget.removeEventListener('mousewheel', this._wheelBind);\n\t\tthis._listenerTarget.removeEventListener('DOMMouseScroll', this._wheelBind);\n\n\t\tthis._listenerTarget.removeEventListener('mousedown', this._downBind);\n\t\tthis._listenerTarget.removeEventListener('touchstart', this._downBind);\n\t\tthis._listenerTarget.removeEventListener('mousemove', this._moveBind);\n\t\tthis._listenerTarget.removeEventListener('touchmove', this._moveBind);\n\t\twindow.removeEventListener('touchend', this._upBind);\n\t\twindow.removeEventListener('mouseup', this._upBind);\n\t}\n\n\n\t//\tPUBLIC METHODS\n\n\tlock(mValue = true) {\n\t\tthis._isLockZoom = mValue;\n\t\tthis._isLockRotation = mValue;\n\t\tthis._isMouseDown = false;\n\t}\n\n\tlockZoom(mValue = true) {\n\t\tthis._isLockZoom = mValue;\n\t}\n\n\n\tlockRotation(mValue = true) {\n\t\tthis._isLockRotation = mValue;\n\t}\n\n\n\tinverseControl(isInvert = true) {\n\t\tthis._isInvert = isInvert;\n\t}\n\n\n\t//\tEVENT HANDLERES\n\t_onDown(mEvent) {\n\t\tif(this._isLockRotation) { return; }\n\t\tthis._isMouseDown = true;\n\t\tgetMouse(mEvent, this._mouse);\n\t\tgetMouse(mEvent, this._preMouse);\n\t\tthis._preRX = this._rx.targetValue;\n\t\tthis._preRY = this._ry.targetValue;\n\t}\n\n\n\t_onMove(mEvent) {\n\t\tif(this._isLockRotation) { return; }\n\t\tgetMouse(mEvent, this._mouse);\n\t\tif(mEvent.touches) { mEvent.preventDefault(); }\n\n\t\tif(this._isMouseDown) {\n\t\t\tlet diffX = -(this._mouse.x - this._preMouse.x);\n\t\t\tif(this._isInvert) { diffX *= -1; }\n\t\t\tthis._ry.value = this._preRY - diffX * 0.01 * this.sensitivity;\n\n\t\t\tlet diffY = -(this._mouse.y - this._preMouse.y);\n\t\t\tif(this._isInvert) { diffY *= -1; }\n\t\t\tthis._rx.value = this._preRX - diffY * 0.01 * this.sensitivity;\n\t\t}\n\t}\n\n\n\t_onUp() {\n\t\tif(this._isLockRotation) { return; }\n\t\tthis._isMouseDown = false;\n\t}\n\n\n\t_onWheel(mEvent) {\n\t\tif(this._isLockZoom) {\treturn;\t}\n\t\tconst w = mEvent.wheelDelta;\n\t\tconst d = mEvent.detail;\n\t\tlet value = 0;\n\t\tif (d) {\n\t\t\tif (w) {\n\t\t\t\tvalue = w / d / 40 * d > 0 ? 1 : -1; // Opera\n\t\t\t} else {\n\t\t\t\tvalue = -d / 3;              // Firefox;         TODO: do not /3 for OS X\n\t\t\t}\n\t\t} else {\n\t\t\tvalue = w / 120; \n\t\t}\n\n\t\tthis.radius.add(-value * 2);\n\t}\n\n\n\t//\tPRIVATE METHODS\n\n\t_loop() {\n\n\t\tthis._updatePosition();\n\n\t\tif(this._target) {\n\t\t\tthis._updateCamera();\n\t\t}\n\t}\n\n\n\t_updatePosition() {\n\t\tthis.position[1] = Math.sin(this._rx.value) * this.radius.value;\n\t\tconst tr = Math.cos(this._rx.value) * this.radius.value;\n\t\tthis.position[0] = Math.cos(this._ry.value + Math.PI * 0.5) * tr;\n\t\tthis.position[2] = Math.sin(this._ry.value + Math.PI * 0.5) * tr;\n\t\tvec3.add(this.position, this.position, this.positionOffset);\n\t}\n\n\n\t_updateCamera() {\n\t\tthis._target.lookAt(this.position, this.center, this._up);\n\t}\n\n\n\t//\tGETTER / SETTER\n\n\n\tget rx() {\n\t\treturn this._rx;\n\t}\n\n\n\tget ry() {\n\t\treturn this._ry;\n\t}\n}\n\n\nexport default OrbitalControl;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/utils/OrbitalControl.js","// CameraOrtho.js\n\nimport Camera from './Camera';\nimport { vec3 } from 'gl-matrix';\n\nclass CameraOrtho extends Camera {\n\tconstructor() {\n\t\tsuper();\n\n\t\tconst eye    = vec3.clone([0, 0, 15]);\n\t\tconst center = vec3.create();\n\t\tconst up     = vec3.clone([0, -1, 0]);\n\t\tthis.lookAt(eye, center, up);\n\t\tthis.ortho(1, -1, 1, -1);\n\t}\n\n\n\tsetBoundary(left, right, top, bottom, near=0.1, far=100) {\n\t\tthis.ortho(left, right, top, bottom, near, far);\n\t}\n\n\n\tortho(left, right, top, bottom, near=0.1, far=100) {\n\t\tthis.left   = left;\n\t\tthis.right  = right;\n\t\tthis.top    = top;\n\t\tthis.bottom = bottom;\n\t\tmat4.ortho(this._projection, left, right, top, bottom, near, far);\n\t}\n\n}\n\n\nexport default CameraOrtho;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/cameras/CameraOrtho.js","// Ray.js\n\nimport { mat4, vec3 } from 'gl-matrix';\n\n\nconst a = vec3.create();\nconst b = vec3.create();\nconst c = vec3.create();\nconst target = vec3.create();\nconst edge1 = vec3.create();\nconst edge2 = vec3.create();\nconst normal = vec3.create();\nconst diff = vec3.create();\n\nclass Ray {\n\tconstructor(mOrigin, mDirection) {\n\t\tthis.origin = vec3.clone(mOrigin);\n\t\tthis.direction = vec3.clone(mDirection);\n\t}\n\n\tat(t) {\n\t\tvec3.copy(target, this.direction);\n\t\tvec3.scale(target, target, t);\n\t\tvec3.add(target, target, this.origin);\n\n\t\treturn target;\n\t}\n\n\n\tlookAt(mTarget) {\n\t\tvec3.sub(this.direction, mTarget, this.origin);\n\t\tvec3.normalize(this.origin, this.origin);\n\t}\n\n\tclosestPointToPoint(mPoint) {\n\t\tconst result = vec3.create();\n\t\tvec3.sub(mPoint, this.origin);\n\t\tconst directionDistance = vec3.dot(result, this.direction);\n\n\t\tif (directionDistance < 0) {\n\t\t\treturn vec3.clone(this.origin);\n\t\t}\n\n\t\tvec3.copy(result, this.direction);\n\t\tvec3.scale(result, result, directionDistance);\n\t\tvec3.add(result, result, this.origin);\n\n\t\treturn result;\n\t}\n\n\n\tdistanceToPoint(mPoint) {\n\t\treturn Math.sqrt(this.distanceSqToPoint(mPoint));\n\t}\n\n\n\tdistanceSqToPoint(mPoint) {\n\t\tconst v1 = vec3.create();\n\n\t\tvec3.sub(v1, mPoint, this.origin);\n\t\tconst directionDistance = vec3.dot(v1, this.direction);\n\n\t\tif (directionDistance < 0) {\n\t\t\treturn vec3.squaredDistance(this.origin, mPoint);\n\t\t}\n\n\t\tvec3.copy(v1, this.direction);\n\t\tvec3.scale(v1, v1, directionDistance);\n\t\tvec3.add(v1, v1, this.origin);\n\t\treturn vec3.squaredDistance(v1, mPoint);\n\t}\n\n\n\tintersectsSphere(mCenter, mRadius) {\n\t\treturn this.distanceToPoint(mCenter) <= mRadius;\n\t}\n\n\n\tintersectSphere(mCenter, mRadius) {\n\t\tconst v1 = vec3.create();\n\t\tvec3.sub(v1, mCenter, this.origin);\n\t\tconst tca = vec3.dot(v1, this.direction);\n\t\tconst d2 = vec3.dot(v1, v1) - tca * tca;\n\t\tconst radius2 = mRadius * mRadius;\n\n\t\tif(d2 > radius2) return null;\n\n\t\tconst thc = Math.sqrt(radius2 - d2);\n\n\t\tconst t0 = tca - thc;\n\n\t\tconst t1 = tca + thc;\n\n\t\tif(t0 < 0 && t1 < 0) return null;\n\n\t\tif(t0 < 0) return this.at(t1);\n\n\t\treturn this.at(t0);\n\t}\n\n\n\tdistanceToPlane(mPlaneCenter, mNormal) {\n\t\tconst denominator = vec3.dot(mNormal, this.direction);\n\n\t\tif(denominator === 0) {\n\t\t}\n\t}\n\n\n\tintersectTriangle(mPA, mPB, mPC, backfaceCulling = true) {\n\t\tvec3.copy(a, mPA);\n\t\tvec3.copy(b, mPB);\n\t\tvec3.copy(c, mPC);\n\n\t\t// const edge1 = vec3.create();\n\t\t// const edge2 = vec3.create();\n\t\t// const normal = vec3.create();\n\t\t// const diff = vec3.create();\n\n\t\tvec3.sub(edge1, b, a);\n\t\tvec3.sub(edge2, c, a);\n\t\tvec3.cross(normal, edge1, edge2);\n\n\t\tlet DdN = vec3.dot(this.direction, normal);\n\t\tlet sign;\n\n\t\tif (DdN > 0) {\n\t\t\tif (backfaceCulling) {\treturn null;\t}\n\t\t\tsign = 1;\n\t\t} else if (DdN < 0) {\n\t\t\tsign = -1;\n\t\t\tDdN = - DdN;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\n\t\tvec3.sub(diff, this.origin, a);\n\n\t\tvec3.cross(edge2, diff, edge2);\n\t\tconst DdQxE2 = sign * vec3.dot(this.direction, edge2);\n\t\tif (DdQxE2 < 0) { \treturn null; \t}\n\n\t\tvec3.cross(edge1, edge1, diff);\n\t\tconst DdE1xQ = sign * vec3.dot(this.direction, edge1);\n\t\tif (DdE1xQ < 0) {\treturn null;\t}\n\n\t\tif(DdQxE2 + DdE1xQ > DdN) {\treturn null;\t}\n\n\t\tconst Qdn = - sign * vec3.dot(diff, normal);\n\t\tif(Qdn < 0) {\treturn null;\t}\n\n\t\treturn this.at(Qdn / DdN);\n\t}\n\n}\n\nexport default Ray;\n\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/math/Ray.js","// Object3D.js\n\nimport { vec3, mat4, quat } from 'gl-matrix';\n\nclass Object3D {\n\n\tconstructor() {\n\t\tthis._needUpdate = true;\n\n\t\tthis._x = 0;\n\t\tthis._y = 0;\n\t\tthis._z = 0;\n\n\t\tthis._sx = 1;\n\t\tthis._sy = 1;\n\t\tthis._sz = 1;\n\n\t\tthis._rx = 0;\n\t\tthis._ry = 0;\n\t\tthis._rz = 0;\n\n\t\tthis._position = vec3.create();\n\t\tthis._scale = vec3.fromValues(1, 1, 1);\n\t\tthis._rotation = vec3.create();\n\n\t\tthis._matrix = mat4.create();\n\t\tthis._matrixRotation = mat4.create();\n\t\tthis._matrixScale = mat4.create();\n\t\tthis._matrixTranslation = mat4.create();\n\t\tthis._matrixQuaternion = mat4.create();\n\t\tthis._quat = quat.create();\n\t}\n\n\t_update() {\n\t\tvec3.set(this._scale, this._sx, this._sy, this._sz);\n\t\tvec3.set(this._rotation, this._rx, this._ry, this._rz);\n\t\tvec3.set(this._position, this._x, this._y, this._z);\n\n\t\tmat4.identity(this._matrixTranslation, this._matrixTranslation);\n\t\tmat4.identity(this._matrixScale, this._matrixScale);\n\t\tmat4.identity(this._matrixRotation, this._matrixRotation);\n\n\t\tmat4.rotateX(this._matrixRotation, this._matrixRotation, this._rx);\n\t\tmat4.rotateY(this._matrixRotation, this._matrixRotation, this._ry);\n\t\tmat4.rotateZ(this._matrixRotation, this._matrixRotation, this._rz);\n\n\n\t\tmat4.fromQuat(this._matrixQuaternion, this._quat);\n\t\tmat4.mul(this._matrixRotation, this._matrixQuaternion, this._matrixRotation);\n\n\t\tmat4.scale(this._matrixScale, this._matrixScale, this._scale);\n\t\tmat4.translate(this._matrixTranslation, this._matrixTranslation, this._position);\n\n\t\tmat4.mul(this._matrix, this._matrixTranslation, this._matrixRotation);\n\t\tmat4.mul(this._matrix, this._matrix, this._matrixScale);\n\n\t\tthis._needUpdate = false;\n\t}\n\n\n\tsetRotationFromQuaternion(mQuat) {\n\t\tquat.copy(this._quat, mQuat);\n\t\tthis._needUpdate = true;\n\t}\n\n\n\tget matrix() {\n\t\tif(this._needUpdate) {\tthis._update();\t}\n\t\treturn this._matrix;\n\t}\n\n\tget x() {\treturn this._x;\t}\n\tset x(mValue) {\n\t\tthis._needUpdate = true;\n\t\tthis._x = mValue;\n\t}\n\n\tget y() {\treturn this._y;\t}\n\tset y(mValue) {\n\t\tthis._needUpdate = true;\n\t\tthis._y = mValue;\n\t}\n\n\tget z() {\treturn this._z;\t}\n\tset z(mValue) {\n\t\tthis._needUpdate = true;\n\t\tthis._z = mValue;\n\t}\n\n\t\n\tget scaleX() {\treturn this._sx;\t}\n\tset scaleX(mValue) {\n\t\tthis._needUpdate = true;\n\t\tthis._sx = mValue;\n\t}\n\n\tget scaleY() {\treturn this._sy;\t}\n\tset scaleY(mValue) {\n\t\tthis._needUpdate = true;\n\t\tthis._sy = mValue;\n\t}\n\n\tget scaleZ() {\treturn this._sz;\t}\n\tset scaleZ(mValue) {\n\t\tthis._needUpdate = true;\n\t\tthis._sz = mValue;\n\t}\n\n\n\tget rotationX() {\treturn this._rx;\t}\n\tset rotationX(mValue) {\n\t\tthis._needUpdate = true;\n\t\tthis._rx = mValue;\n\t}\n\n\tget rotationY() {\treturn this._ry;\t}\n\tset rotationY(mValue) {\n\t\tthis._needUpdate = true;\n\t\tthis._ry = mValue;\n\t}\n\n\tget rotationZ() {\treturn this._rz;\t}\n\tset rotationZ(mValue) {\n\t\tthis._needUpdate = true;\n\t\tthis._rz = mValue;\n\t}\n\n}\n\n\nexport default Object3D;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/objects/Object3D.js","// ShaderLbs.js\n\n'use strict';\n\nimport simpleColorFrag from '../shaders/simpleColor.frag';\nimport bigTriangleVert from '../shaders/bigTriangle.vert';\nimport generalVert from '../shaders/general.vert';\nimport copyFrag from '../shaders/copy.frag';\nimport basicVert from '../shaders/basic.vert';\nimport skyboxVert from '../shaders/skybox.vert';\nimport skyboxFrag from '../shaders/skybox.frag';\n\nconst ShaderLibs = {\n\tsimpleColorFrag,\n\tbigTriangleVert,\n\tgeneralVert,\n\tcopyFrag,\n\tbasicVert,\n\tskyboxVert,\n\tskyboxFrag,\n};\n\n\nexport default ShaderLibs;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/utils/ShaderLibs.js","module.exports = \"// generalWithNormal.vert\\n\\n#define SHADER_NAME GENERAL_VERTEX\\n\\nprecision highp float;\\n#define GLSLIFY 1\\nattribute vec3 aVertexPosition;\\nattribute vec2 aTextureCoord;\\nattribute vec3 aNormal;\\n\\nuniform mat4 uModelMatrix;\\nuniform mat4 uViewMatrix;\\nuniform mat4 uProjectionMatrix;\\nuniform mat3 uNormalMatrix;\\n\\nuniform vec3 position;\\nuniform vec3 scale;\\n\\nvarying vec2 vTextureCoord;\\nvarying vec3 vNormal;\\n\\nvoid main(void) {\\n\\tvec3 pos      = aVertexPosition * scale;\\n\\tpos           += position;\\n\\tgl_Position   = uProjectionMatrix * uViewMatrix * uModelMatrix * vec4(pos, 1.0);\\n\\t\\n\\tvTextureCoord = aTextureCoord;\\n\\tvNormal       = normalize(uNormalMatrix * aNormal);\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/alfrid/shaders/general.vert\n// module id = 29\n// module chunks = 0","module.exports = \"// basic.vert\\n\\n#define SHADER_NAME SKYBOX_VERTEX\\n\\nprecision highp float;\\n#define GLSLIFY 1\\nattribute vec3 aVertexPosition;\\nattribute vec2 aTextureCoord;\\nattribute vec3 aNormal;\\n\\nuniform mat4 uModelMatrix;\\nuniform mat4 uViewMatrix;\\nuniform mat4 uProjectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\nvarying vec3 vVertex;\\nvarying vec3 vNormal;\\n\\nvoid main(void) {\\n\\tmat4 matView = uViewMatrix;\\n\\tmatView[3][0] = 0.0;\\n\\tmatView[3][1] = 0.0;\\n\\tmatView[3][2] = 0.0;\\n\\t\\n\\tgl_Position = uProjectionMatrix * matView * uModelMatrix * vec4(aVertexPosition, 1.0);\\n\\tvTextureCoord = aTextureCoord;\\n\\t\\n\\tvVertex = aVertexPosition;\\n\\tvNormal = aNormal;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/alfrid/shaders/skybox.vert\n// module id = 30\n// module chunks = 0","module.exports = \"// basic.frag\\n\\n#define SHADER_NAME SKYBOX_FRAGMENT\\n\\nprecision mediump float;\\n#define GLSLIFY 1\\nuniform samplerCube texture;\\nvarying vec2 vTextureCoord;\\nvarying vec3 vVertex;\\n\\nvoid main(void) {\\n    gl_FragColor = textureCube(texture, vVertex);\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/alfrid/shaders/skybox.frag\n// module id = 31\n// module chunks = 0","// PassMacro.js\n\nclass PassMacro {\n\tconstructor() {\n\t\tthis._passes = [];\n\t}\n\n\taddPass(pass) {\n\t\tthis._passes.push(pass);\n\t}\n\n\tget passes() {\n\t\treturn this._passes;\n\t}\n}\n\nexport default PassMacro;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/post/PassMacro.js","// PassVBlur.js\n\nimport PassBlurBase from './PassBlurBase';\n\nclass PassVBlur extends PassBlurBase {\n\tconstructor(mQuality = 9, mWidth, mHeight, mParams) {\n\t\tsuper(mQuality, [0, 1], mWidth, mHeight, mParams);\n\t}\n}\n\nexport default PassVBlur;\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/post/PassVBlur.js","// PassBlurBase.js\n\nimport GL from '../GLTool';\nimport Pass from './Pass';\n\nconst fsBlur5 = require('../shaders/blur5.frag');\nconst fsBlur9 = require('../shaders/blur9.frag');\nconst fsBlur13 = require('../shaders/blur13.frag');\n\nclass PassBlurBase extends Pass {\n\tconstructor(mQuality = 9, mDirection, mWidth, mHeight, mParams = {}) {\n\t\tlet fs;\n\t\tswitch(mQuality) {\n\t\tcase 5:\n\t\tdefault:\n\t\t\tfs = fsBlur5;\n\t\t\tbreak;\n\t\tcase 9 : \n\t\t\tfs = fsBlur9;\n\t\t\tbreak;\n\t\tcase 13 : \n\t\t\tfs = fsBlur13;\n\t\t\tbreak;\n\n\t\t}\n\t\tsuper(fs, mWidth, mHeight, mParams);\n\t\tthis.uniform('uDirection', mDirection);\n\t\tthis.uniform('uResolution', [GL.width, GL.height]);\n\t}\n}\n\nexport default PassBlurBase;\n\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/post/PassBlurBase.js","// PassHBlur.js\n\nimport PassBlurBase from './PassBlurBase';\n\nclass PassHBlur extends PassBlurBase {\n\tconstructor(mQuality = 9, mWidth, mHeight, mParams) {\n\t\tsuper(mQuality, [1, 0], mWidth, mHeight, mParams);\n\t}\n}\n\nexport default PassHBlur;\n\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/post/PassHBlur.js","module.exports = \"// fxaa.frag\\n\\n#define SHADER_NAME FXAA\\n\\nprecision highp float;\\n#define GLSLIFY 1\\nvarying vec2 vTextureCoord;\\nuniform sampler2D texture;\\nuniform vec2 uResolution;\\n\\n\\nfloat FXAA_SUBPIX_SHIFT = 1.0/4.0;\\n#define FXAA_REDUCE_MIN   (1.0/ 128.0)\\n#define FXAA_REDUCE_MUL   (1.0 / 8.0)\\n#define FXAA_SPAN_MAX     8.0\\n\\n\\nvec4 applyFXAA(sampler2D tex) {\\n    vec4 color;\\n    vec2 fragCoord = gl_FragCoord.xy;\\n    vec3 rgbNW = texture2D(tex, (fragCoord + vec2(-1.0, -1.0)) * uResolution).xyz;\\n    vec3 rgbNE = texture2D(tex, (fragCoord + vec2(1.0, -1.0)) * uResolution).xyz;\\n    vec3 rgbSW = texture2D(tex, (fragCoord + vec2(-1.0, 1.0)) * uResolution).xyz;\\n    vec3 rgbSE = texture2D(tex, (fragCoord + vec2(1.0, 1.0)) * uResolution).xyz;\\n    vec3 rgbM  = texture2D(tex, fragCoord  * uResolution).xyz;\\n    vec3 luma = vec3(0.299, 0.587, 0.114);\\n    float lumaNW = dot(rgbNW, luma);\\n    float lumaNE = dot(rgbNE, luma);\\n    float lumaSW = dot(rgbSW, luma);\\n    float lumaSE = dot(rgbSE, luma);\\n    float lumaM  = dot(rgbM,  luma);\\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\\n\\n    vec2 dir;\\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\\n\\n    float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\\n                          (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\\n\\n    float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\\n    dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX),\\n              max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\\n              dir * rcpDirMin)) * uResolution;\\n\\n    vec3 rgbA = 0.5 * (\\n        texture2D(tex, fragCoord * uResolution + dir * (1.0 / 3.0 - 0.5)).xyz +\\n        texture2D(tex, fragCoord * uResolution + dir * (2.0 / 3.0 - 0.5)).xyz);\\n    vec3 rgbB = rgbA * 0.5 + 0.25 * (\\n        texture2D(tex, fragCoord * uResolution + dir * -0.5).xyz +\\n        texture2D(tex, fragCoord * uResolution + dir * 0.5).xyz);\\n\\n    float lumaB = dot(rgbB, luma);\\n    if ((lumaB < lumaMin) || (lumaB > lumaMax))\\n        color = vec4(rgbA, 1.0);\\n    else\\n        color = vec4(rgbB, 1.0);\\n    return color;\\n}\\n\\nvoid main(void) {\\n \\tvec4 color = applyFXAA(texture);\\n    gl_FragColor = color;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/alfrid/shaders/fxaa.frag\n// module id = 36\n// module chunks = 0","// alfrid.js\n\nimport * as GLM \t\t\tfrom 'gl-matrix';\nimport GLTool \t\t\t\tfrom './alfrid/GLTool';\nimport GLShader \t\t\tfrom './alfrid/GLShader';\nimport GLTexture \t\t\tfrom './alfrid/GLTexture';\nimport GLCubeTexture \t\tfrom './alfrid/GLCubeTexture';\nimport Mesh \t\t\t\tfrom './alfrid/Mesh';\nimport Geom\t\t\t\t\tfrom './alfrid/Geom';\nimport Batch\t\t\t\tfrom './alfrid/Batch';\nimport FrameBuffer\t\t\tfrom './alfrid/FrameBuffer';\nimport CubeFrameBuffer\t\tfrom './alfrid/CubeFrameBuffer';\n\n//\tWEBGL 2\nimport MultisampleFrameBuffer\t\tfrom './alfrid/MultisampleFrameBuffer';\nimport TransformFeedbackObject from './alfrid/TransformFeedbackObject';\n\n//\tTOOLS\nimport Scheduler \t\t\tfrom 'scheduling';\nimport EventDispatcher \t\tfrom './alfrid/utils/EventDispatcher';\nimport EaseNumber \t\t\tfrom './alfrid/utils/EaseNumber';\nimport TweenNumber \t\t\tfrom './alfrid/utils/TweenNumber';\nimport OrbitalControl\t\tfrom './alfrid/utils/OrbitalControl';\nimport QuatRotation\t\t\tfrom './alfrid/utils/QuatRotation';\n\n//\tCAMERAS\nimport Camera \t\t\t\tfrom './alfrid/cameras/Camera';\nimport CameraOrtho \t\t\tfrom './alfrid/cameras/CameraOrtho';\nimport CameraPerspective\tfrom './alfrid/cameras/CameraPerspective';\nimport CameraCube\t\t\tfrom './alfrid/cameras/CameraCube';\n\n//\tMATH\nimport Ray \t\t\t\t\tfrom './alfrid/math/Ray';\n\n//\tOBJECT\nimport Object3D \t\t\tfrom './alfrid/objects/Object3D';\n\n//\tLOADERS\nimport BinaryLoader\t\t\tfrom './alfrid/loaders/BinaryLoader';\nimport ObjLoader\t\t\tfrom './alfrid/loaders/ObjLoader';\nimport HDRLoader\t\t\tfrom './alfrid/loaders/HDRLoader';\nimport ColladaParser\t\tfrom './alfrid/loaders/ColladaParser';\n\n//\tPOST EFFECT\nimport EffectComposer \t\tfrom './alfrid/post/EffectComposer';\nimport Pass \t\t\t\tfrom './alfrid/post/Pass';\nimport PassMacro \t\t\tfrom './alfrid/post/PassMacro';\nimport PassBlur \t\t\tfrom './alfrid/post/PassBlur';\nimport PassVBlur \t\t\tfrom './alfrid/post/PassVBlur';\nimport PassHBlur \t\t\tfrom './alfrid/post/PassHBlur';\nimport PassFxaa \t\t\tfrom './alfrid/post/PassFxaa';\n\n\n//\tHELPERS\nimport BatchCopy\t\t\tfrom './alfrid/helpers/BatchCopy';\nimport BatchAxis\t\t\tfrom './alfrid/helpers/BatchAxis';\nimport BatchBall\t\t\tfrom './alfrid/helpers/BatchBall';\nimport BatchDotsPlane\t\tfrom './alfrid/helpers/BatchDotsPlane';\nimport BatchLine \t\t\tfrom './alfrid/helpers/BatchLine';\nimport BatchSkybox\t\t\tfrom './alfrid/helpers/BatchSkybox';\nimport BatchSky\t\t\t\tfrom './alfrid/helpers/BatchSky';\nimport BatchFXAA\t\t\tfrom './alfrid/helpers/BatchFXAA';\nimport Scene\t\t\t\tfrom './alfrid/helpers/Scene';\nimport View\t\t\t\t\tfrom './alfrid/helpers/View';\nimport View3D\t\t\t\tfrom './alfrid/helpers/View3D';\nimport ShaderLibs\t\t\tfrom './alfrid/utils/ShaderLibs';\n\n\nconst VERSION = '0.1.24';\n\nclass Alfrid {\n\tconstructor() {\n\t\tthis.glm               = GLM;\n\t\tthis.GL                = GLTool;\n\t\tthis.GLTool            = GLTool;\n\t\tthis.GLShader          = GLShader;\n\t\tthis.GLTexture         = GLTexture;\n\t\tthis.GLCubeTexture     = GLCubeTexture;\n\t\tthis.Mesh              = Mesh;\n\t\tthis.Geom              = Geom;\n\t\tthis.Batch             = Batch;\n\t\tthis.FrameBuffer       = FrameBuffer;\n\t\tthis.CubeFrameBuffer   = CubeFrameBuffer;\n\t\tthis.Scheduler         = Scheduler;\n\t\tthis.EventDispatcher   = EventDispatcher;\n\t\tthis.EaseNumber        = EaseNumber;\n\t\tthis.TweenNumber       = TweenNumber;\n\t\tthis.Camera            = Camera;\n\t\tthis.CameraOrtho       = CameraOrtho;\n\t\tthis.CameraPerspective = CameraPerspective;\n\t\tthis.Ray \t\t\t   = Ray;\n\t\tthis.CameraCube        = CameraCube;\n\t\tthis.OrbitalControl    = OrbitalControl;\n\t\tthis.QuatRotation      = QuatRotation;\n\t\tthis.BinaryLoader      = BinaryLoader;\n\t\tthis.ObjLoader         = ObjLoader;\n\t\tthis.ColladaParser     = ColladaParser;\n\t\tthis.HDRLoader         = HDRLoader;\n\t\tthis.BatchCopy         = BatchCopy;\n\t\tthis.BatchAxis         = BatchAxis;\n\t\tthis.BatchBall         = BatchBall;\n\t\tthis.BatchBall         = BatchBall;\n\t\tthis.BatchLine         = BatchLine;\n\t\tthis.BatchSkybox       = BatchSkybox;\n\t\tthis.BatchSky          = BatchSky;\n\t\tthis.BatchFXAA         = BatchFXAA;\n\t\tthis.BatchDotsPlane    = BatchDotsPlane;\n\t\tthis.Scene             = Scene;\n\t\tthis.View              = View;\n\t\tthis.View3D            = View3D;\n\t\tthis.Object3D          = Object3D;\n\t\tthis.ShaderLibs        = ShaderLibs;\n\t\t\n\t\tthis.EffectComposer    = EffectComposer;\n\t\tthis.Pass        \t   = Pass;\n\t\tthis.PassMacro         = PassMacro;\n\t\tthis.PassBlur          = PassBlur;\n\t\tthis.PassVBlur         = PassVBlur;\n\t\tthis.PassHBlur         = PassHBlur;\n\t\tthis.PassFxaa          = PassFxaa;\n\n\t\tthis.MultisampleFrameBuffer   = MultisampleFrameBuffer;\n\t\tthis.TransformFeedbackObject  = TransformFeedbackObject;\n\n\n\t\t//\tNOT SUPER SURE I'VE DONE THIS IS A GOOD WAY\n\n\t\tfor(const s in GLM) {\n\t\t\tif(GLM[s]) {\n\t\t\t\twindow[s] = GLM[s];\n\t\t\t}\n\t\t}\n\t}\n\n\tlog() {\n\t\tif(navigator.userAgent.indexOf('Chrome') > -1) {\n\t\t\tconsole.log(`%clib alfrid : VERSION ${VERSION}`, 'background: #193441; color: #FCFFF5');\n\t\t} else {\n\t\t\tconsole.log('lib alfrid : VERSION ', VERSION);\n\t\t}\n\t\tconsole.log('%cClasses : ', 'color: #193441');\n\n\t\tfor(const s in this) {\n\t\t\tif(this[s]) {\n\t\t\t\tconsole.log(`%c - ${s}`, 'color: #3E606F');\n\t\t\t}\n\t\t}\n\t}\n}\n\nconst al = new Alfrid();\n\nexport default al;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid.js","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nimport * as glMatrix from \"./common\"\n\n/**\n * 2x2 Matrix\n * @module mat2\n */\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {mat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Create a new mat2 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out A new 2x2 matrix\n */\nexport function fromValues(m00, m01, m10, m11) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n\n/**\n * Set the components of a mat2 to the given values\n *\n * @param {mat2} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out\n */\nexport function set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    let a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function invert(out, a) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n\n  // Calculate the determinant\n  let det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] =  a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] =  a0 * det;\n\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  let a0 = a[0];\n  out[0] =  a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] =  a0;\n\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat2\n *\n * @param {mat2} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nexport function multiply(out, a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nexport function rotate(out, a, rad) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  out[0] = a0 *  c + a2 * s;\n  out[1] = a1 *  c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\nexport function scale(out, a, v) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let v0 = v[0], v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nexport function fromRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n\n/**\n * Returns a string representation of a mat2\n *\n * @param {mat2} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {mat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2)))\n}\n\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {mat2} L the lower triangular matrix\n * @param {mat2} D the diagonal matrix\n * @param {mat2} U the upper triangular matrix\n * @param {mat2} a the input matrix to factorize\n */\n\nexport function LDU(L, D, U, a) {\n  L[2] = a[2]/a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n\n/**\n * Adds two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2} out the receiving vector\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  return out;\n}\n\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat2.subtract}\n * @function\n */\nexport const sub = subtract;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-matrix/src/gl-matrix/mat2.js\n// module id = 38\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nimport * as glMatrix from \"./common\";\n\n/**\n * 2x3 Matrix\n * @module mat2d\n *\n * @description\n * A mat2d contains six elements defined as:\n * <pre>\n * [a, c, tx,\n *  b, d, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, c, tx,\n *  b, d, ty,\n *  0, 0, 1]\n * </pre>\n * The last row is ignored so the array is shorter and operations are faster.\n */\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {mat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Create a new mat2d with the given values\n *\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} A new mat2d\n */\nexport function fromValues(a, b, c, d, tx, ty) {\n  let out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n\n/**\n * Set the components of a mat2d to the given values\n *\n * @param {mat2d} out the receiving matrix\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} out\n */\nexport function set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nexport function invert(out, a) {\n  let aa = a[0], ab = a[1], ac = a[2], ad = a[3];\n  let atx = a[4], aty = a[5];\n\n  let det = aa * ad - ab * ac;\n  if(!det){\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {mat2d} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function multiply(out, a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nexport function rotate(out, a, rad) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  out[0] = a0 *  c + a2 * s;\n  out[1] = a1 *  c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\nexport function scale(out, a, v) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let v0 = v[0], v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\nexport function translate(out, a, v) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let v0 = v[0], v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nexport function fromRotation(out, rad) {\n  let s = Math.sin(rad), c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2d} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat2d} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n\n/**\n * Returns a string representation of a mat2d\n *\n * @param {mat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' +\n          a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {mat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1))\n}\n\n/**\n * Adds two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2d} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n\n/**\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2d} out the receiving vector\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2d} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  out[4] = a[4] + (b[4] * scale);\n  out[5] = a[5] + (b[5] * scale);\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)));\n}\n\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat2d.subtract}\n * @function\n */\nexport const sub = subtract;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-matrix/src/gl-matrix/mat2d.js\n// module id = 39\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nimport * as glMatrix from \"./common\";\n\n/**\n * 4x4 Matrix\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    let a01 = a[1], a02 = a[2], a03 = a[3];\n    let a12 = a[6], a13 = a[7];\n    let a23 = a[11];\n\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function adjoint(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\n  out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\n  out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\n  out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\n  out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\n  out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  // Cache only the current line of the second matrix\n  let b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n  out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n  out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n  out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n  return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n  let x = v[0], y = v[1], z = v[2];\n  let a00, a01, a02, a03;\n  let a10, a11, a12, a13;\n  let a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n    out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n    out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n    out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n  let x = v[0], y = v[1], z = v[2];\n\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n  let x = axis[0], y = axis[1], z = axis[2];\n  let len = Math.sqrt(x * x + y * y + z * z);\n  let s, c, t;\n  let a00, a01, a02, a03;\n  let a10, a11, a12, a13;\n  let a20, a21, a22, a23;\n  let b00, b01, b02;\n  let b10, b11, b12;\n  let b20, b21, b22;\n\n  if (Math.abs(len) < glMatrix.EPSILON) { return null; }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n  a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n  a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n  // Construct the elements of the rotation matrix\n  b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateX(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a10 = a[4];\n  let a11 = a[5];\n  let a12 = a[6];\n  let a13 = a[7];\n  let a20 = a[8];\n  let a21 = a[9];\n  let a22 = a[10];\n  let a23 = a[11];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged rows\n    out[0]  = a[0];\n    out[1]  = a[1];\n    out[2]  = a[2];\n    out[3]  = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateY(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a00 = a[0];\n  let a01 = a[1];\n  let a02 = a[2];\n  let a03 = a[3];\n  let a20 = a[8];\n  let a21 = a[9];\n  let a22 = a[10];\n  let a23 = a[11];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged rows\n    out[4]  = a[4];\n    out[5]  = a[5];\n    out[6]  = a[6];\n    out[7]  = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateZ(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a00 = a[0];\n  let a01 = a[1];\n  let a02 = a[2];\n  let a03 = a[3];\n  let a10 = a[4];\n  let a11 = a[5];\n  let a12 = a[6];\n  let a13 = a[7];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged last row\n    out[8]  = a[8];\n    out[9]  = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Scaling vector\n * @returns {mat4} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function fromRotation(out, rad, axis) {\n  let x = axis[0], y = axis[1], z = axis[2];\n  let len = Math.sqrt(x * x + y * y + z * z);\n  let s, c, t;\n\n  if (Math.abs(len) < glMatrix.EPSILON) { return null; }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromXRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = 1;\n  out[1]  = 0;\n  out[2]  = 0;\n  out[3]  = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromYRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = c;\n  out[1]  = 0;\n  out[2]  = -s;\n  out[3]  = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromZRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = c;\n  out[1]  = s;\n  out[2]  = 0;\n  out[3]  = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n\n  return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n  let m11 = mat[0];\n  let m12 = mat[1];\n  let m13 = mat[2];\n  let m21 = mat[4];\n  let m22 = mat[5];\n  let m23 = mat[6];\n  let m31 = mat[8];\n  let m32 = mat[9];\n  let m33 = mat[10];\n\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n\n  return out;\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport function getRotation(out, mat) {\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n  let trace = mat[0] + mat[5] + mat[10];\n  let S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (mat[6] - mat[9]) / S;\n    out[1] = (mat[8] - mat[2]) / S;\n    out[2] = (mat[1] - mat[4]) / S;\n  } else if ((mat[0] > mat[5])&(mat[0] > mat[10])) {\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\n    out[3] = (mat[6] - mat[9]) / S;\n    out[0] = 0.25 * S;\n    out[1] = (mat[1] + mat[4]) / S;\n    out[2] = (mat[8] + mat[2]) / S;\n  } else if (mat[5] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\n    out[3] = (mat[8] - mat[2]) / S;\n    out[0] = (mat[1] + mat[4]) / S;\n    out[1] = 0.25 * S;\n    out[2] = (mat[6] + mat[9]) / S;\n  } else {\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\n    out[3] = (mat[1] - mat[4]) / S;\n    out[0] = (mat[8] + mat[2]) / S;\n    out[1] = (mat[6] + mat[9]) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n  let sx = s[0];\n  let sy = s[1];\n  let sz = s[2];\n\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @param {vec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  let sx = s[0];\n  let sy = s[1];\n  let sz = s[2];\n\n  let ox = o[0];\n  let oy = o[1];\n  let oz = o[2];\n\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out[0] * ox + out[4] * oy + out[8] * oz);\n  out[13] = v[1] + oy - (out[1] * ox + out[5] * oy + out[9] * oz);\n  out[14] = v[2] + oz - (out[2] * ox + out[6] * oy + out[10] * oz);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let yx = y * x2;\n  let yy = y * y2;\n  let zx = z * x2;\n  let zy = z * y2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function frustum(out, left, right, bottom, top, near, far) {\n  let rl = 1 / (right - left);\n  let tb = 1 / (top - bottom);\n  let nf = 1 / (near - far);\n  out[0] = (near * 2) * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = (near * 2) * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = (far * near * 2) * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspective(out, fovy, aspect, near, far) {\n  let f = 1.0 / Math.tan(fovy / 2);\n  let nf = 1 / (near - far);\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = (2 * far * near) * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  let upTan = Math.tan(fov.upDegrees * Math.PI/180.0);\n  let downTan = Math.tan(fov.downDegrees * Math.PI/180.0);\n  let leftTan = Math.tan(fov.leftDegrees * Math.PI/180.0);\n  let rightTan = Math.tan(fov.rightDegrees * Math.PI/180.0);\n  let xScale = 2.0 / (leftTan + rightTan);\n  let yScale = 2.0 / (upTan + downTan);\n\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = ((upTan - downTan) * yScale * 0.5);\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = (far * near) / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n  let lr = 1 / (left - right);\n  let bt = 1 / (bottom - top);\n  let nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function lookAt(out, eye, center, up) {\n  let x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  let eyex = eye[0];\n  let eyey = eye[1];\n  let eyez = eye[2];\n  let upx = up[0];\n  let upy = up[1];\n  let upz = up[2];\n  let centerx = center[0];\n  let centery = center[1];\n  let centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON &&\n      Math.abs(eyey - centery) < glMatrix.EPSILON &&\n      Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return mat4.identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n  let eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n\n  let z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n\n  let len = z0*z0 + z1*z1 + z2*z2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  let x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n};\n\n/**\n * Returns a string representation of a mat4\n *\n * @param {mat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n          a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +\n          a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' +\n          a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {mat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  out[4] = a[4] + (b[4] * scale);\n  out[5] = a[5] + (b[5] * scale);\n  out[6] = a[6] + (b[6] * scale);\n  out[7] = a[7] + (b[7] * scale);\n  out[8] = a[8] + (b[8] * scale);\n  out[9] = a[9] + (b[9] * scale);\n  out[10] = a[10] + (b[10] * scale);\n  out[11] = a[11] + (b[11] * scale);\n  out[12] = a[12] + (b[12] * scale);\n  out[13] = a[13] + (b[13] * scale);\n  out[14] = a[14] + (b[14] * scale);\n  out[15] = a[15] + (b[15] * scale);\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] &&\n         a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] &&\n         a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] &&\n         a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0  = a[0],  a1  = a[1],  a2  = a[2],  a3  = a[3];\n  let a4  = a[4],  a5  = a[5],  a6  = a[6],  a7  = a[7];\n  let a8  = a[8],  a9  = a[9],  a10 = a[10], a11 = a[11];\n  let a12 = a[12], a13 = a[13], a14 = a[14], a15 = a[15];\n\n  let b0  = b[0],  b1  = b[1],  b2  = b[2],  b3  = b[3];\n  let b4  = b[4],  b5  = b[5],  b6  = b[6],  b7  = b[7];\n  let b8  = b[8],  b9  = b[9],  b10 = b[10], b11 = b[11];\n  let b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\n\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n          Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n          Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n          Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)) &&\n          Math.abs(a9 - b9) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a9), Math.abs(b9)) &&\n          Math.abs(a10 - b10) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a10), Math.abs(b10)) &&\n          Math.abs(a11 - b11) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a11), Math.abs(b11)) &&\n          Math.abs(a12 - b12) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a12), Math.abs(b12)) &&\n          Math.abs(a13 - b13) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a13), Math.abs(b13)) &&\n          Math.abs(a14 - b14) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a14), Math.abs(b14)) &&\n          Math.abs(a15 - b15) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a15), Math.abs(b15)));\n}\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\nexport const sub = subtract;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-matrix/src/gl-matrix/mat4.js\n// module id = 40\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nimport * as glMatrix from \"./common\"\nimport * as mat3 from \"./mat3\"\nimport * as vec3 from \"./vec3\"\nimport * as vec4 from \"./vec4\"\n\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  let s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {quat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\nexport function getAxisAngle(out_axis, q) {\n  let rad = Math.acos(q[3]) * 2.0;\n  let s = Math.sin(rad / 2.0);\n  if (s != 0.0) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n  return rad;\n}\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let by = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bz = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate W component of\n * @returns {quat} out\n */\nexport function calculateW(out, a) {\n  let x = a[0], y = a[1], z = a[2];\n\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n  let omega, cosom, sinom, scale0, scale1;\n\n  // calc cosine\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\n  // adjust signs (if necessary)\n  if ( cosom < 0.0 ) {\n    cosom = -cosom;\n    bx = - bx;\n    by = - by;\n    bz = - bz;\n    bw = - bw;\n  }\n  // calculate coefficients\n  if ( (1.0 - cosom) > 0.000001 ) {\n    // standard case (slerp)\n    omega  = Math.acos(cosom);\n    sinom  = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  }\n  // calculate final values\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n\n  return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let dot = a0*a0 + a1*a1 + a2*a2 + a3*a3;\n  let invDot = dot ? 1.0/dot : 0;\n\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0*invDot;\n  out[1] = -a1*invDot;\n  out[2] = -a2*invDot;\n  out[3] = a3*invDot;\n  return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  let fTrace = m[0] + m[4] + m[8];\n  let fRoot;\n\n  if ( fTrace > 0.0 ) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0);  // 2w\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5/fRoot;  // 1/(4w)\n    out[0] = (m[5]-m[7])*fRoot;\n    out[1] = (m[6]-m[2])*fRoot;\n    out[2] = (m[1]-m[3])*fRoot;\n  } else {\n    // |w| <= 1/2\n    let i = 0;\n    if ( m[4] > m[0] )\n      i = 1;\n    if ( m[8] > m[i*3+i] )\n      i = 2;\n    let j = (i+1)%3;\n    let k = (i+2)%3;\n\n    fRoot = Math.sqrt(m[i*3+i]-m[j*3+j]-m[k*3+k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j*3+k] - m[k*3+j]) * fRoot;\n    out[j] = (m[j*3+i] + m[i*3+j]) * fRoot;\n    out[k] = (m[k*3+i] + m[i*3+k]) * fRoot;\n  }\n\n  return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, x, y, z) {\n    let halfToRad = 0.5 * Math.PI / 180.0;\n    x *= halfToRad;\n    y *= halfToRad;\n    z *= halfToRad;\n\n    let sx = Math.sin(x);\n    let cx = Math.cos(x);\n    let sy = Math.sin(y);\n    let cy = Math.cos(y);\n    let sz = Math.sin(z);\n    let cz = Math.cos(z);\n\n    out[0] = sx * cy * cz - cx * sy * sz;\n    out[1] = cx * sy * cz + sx * cy * sz;\n    out[2] = cx * cy * sz - sx * sy * cz;\n    out[3] = cx * cy * cz + sx * sy * sz;\n\n    return out;\n}\n\n/**\n * Returns a string representation of a quatenion\n *\n * @param {quat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nexport const clone = vec4.clone;\n\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nexport const fromValues = vec4.fromValues;\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport const copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport const set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport const add = vec4.add;\n\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport const scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nexport const lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport const length = vec4.length;\n\n/**\n * Alias for {@link quat.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Calculates the squared length of a quat\n *\n * @param {quat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nexport const squaredLength = vec4.squaredLength;\n\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport const normalize = vec4.normalize;\n\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {quat} a The first quaternion.\n * @param {quat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport const exactEquals = vec4.exactEquals;\n\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {quat} a The first vector.\n * @param {quat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport const equals = vec4.equals;\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {vec3} a the initial vector\n * @param {vec3} b the destination vector\n * @returns {quat} out\n */\nexport const rotationTo = (function() {\n  let tmpvec3 = vec3.create();\n  let xUnitVec3 = vec3.fromValues(1,0,0);\n  let yUnitVec3 = vec3.fromValues(0,1,0);\n\n  return function(out, a, b) {\n    let dot = vec3.dot(a, b);\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001)\n        vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n})();\n\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {quat} c the third operand\n * @param {quat} d the fourth operand\n * @param {Number} t interpolation amount\n * @returns {quat} out\n */\nexport const sqlerp = (function () {\n  let temp1 = create();\n  let temp2 = create();\n\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n\n    return out;\n  };\n}());\n\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {vec3} view  the vector representing the viewing direction\n * @param {vec3} right the vector representing the local \"right\" direction\n * @param {vec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\nexport const setAxes = (function() {\n  let matr = mat3.create();\n\n  return function(out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n\n    return normalize(out, fromMat3(out, matr));\n  };\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-matrix/src/gl-matrix/quat.js\n// module id = 41\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nimport * as glMatrix from \"./common\";\n\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = 0;\n  out[1] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nexport function fromValues(x, y) {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n};\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n};\n\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to ceil\n * @returns {vec2} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n};\n\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to floor\n * @returns {vec2} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n};\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n};\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n};\n\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to round\n * @returns {vec2} out\n */\nexport function round (out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n};\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n};\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n    y = b[1] - a[1];\n  return Math.sqrt(x*x + y*y);\n};\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n    y = b[1] - a[1];\n  return x*x + y*y;\n};\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  var x = a[0],\n    y = a[1];\n  return Math.sqrt(x*x + y*y);\n};\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength (a) {\n  var x = a[0],\n    y = a[1];\n  return x*x + y*y;\n};\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n};\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n};\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n  var x = a[0],\n    y = a[1];\n  var len = x*x + y*y;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n  }\n  return out;\n};\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n};\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n};\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n    ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n};\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n};\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n};\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n};\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0];\n  let y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1];\n  let b0 = b[0], b1 = b[1];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)));\n}\n\n/**\n * Alias for {@link vec2.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 2;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1];\n    }\n\n    return a;\n  };\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-matrix/src/gl-matrix/vec2.js\n// module id = 42\n// module chunks = 0","// VertexArrayObject.js\n\nexport default function getAndApplyExtension(gl, name) {\n\tconst ext = gl.getExtension(name);\n\tif (!ext) {\n\t\treturn false;\n\t}\n\tconst suffix = name.split('_')[0];\n\tconst suffixRE = new RegExp(`${suffix}$`);\n\n\tfor (const key in ext) {\n\t\tconst val = ext[key];\n\t\tif (typeof(val) === 'function') {\n\t\t\tconst unsuffixedKey = key.replace(suffixRE, '');\n\t\t\tif (key.substring) {\n\t\t\t\tgl[unsuffixedKey] = ext[key].bind(ext);\t\n\t\t\t\t// console.log('Replacing :', key, '=>', unsuffixedKey);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/utils/getAndApplyExtension.js","// exposeAttributes.js\n\nimport GL from '../GLTool';\n\nconst exposeAttributes = function () {\n\tGL.VERTEX_SHADER         = GL.gl.VERTEX_SHADER;\n\tGL.FRAGMENT_SHADER       = GL.gl.FRAGMENT_SHADER;\n\tGL.COMPILE_STATUS        = GL.gl.COMPILE_STATUS;\n\tGL.DEPTH_TEST            = GL.gl.DEPTH_TEST;\n\tGL.CULL_FACE             = GL.gl.CULL_FACE;\n\tGL.BLEND                 = GL.gl.BLEND;\n\tGL.POINTS                = GL.gl.POINTS;\n\tGL.LINES                 = GL.gl.LINES;\n\tGL.TRIANGLES             = GL.gl.TRIANGLES;\n\t\n\tGL.LINEAR                \t= GL.gl.LINEAR;\n\tGL.NEAREST               \t= GL.gl.NEAREST;\n\tGL.LINEAR_MIPMAP_NEAREST \t= GL.gl.LINEAR_MIPMAP_NEAREST;\n\tGL.NEAREST_MIPMAP_LINEAR \t= GL.gl.NEAREST_MIPMAP_LINEAR;\n\tGL.LINEAR_MIPMAP_LINEAR \t= GL.gl.LINEAR_MIPMAP_LINEAR;\n\tGL.NEAREST_MIPMAP_NEAREST \t= GL.gl.NEAREST_MIPMAP_NEAREST;\n\tGL.MIRRORED_REPEAT       \t= GL.gl.MIRRORED_REPEAT;\n\tGL.CLAMP_TO_EDGE         \t= GL.gl.CLAMP_TO_EDGE;\n\tGL.SCISSOR_TEST\t\t   \t \t= GL.gl.SCISSOR_TEST;\n\tGL.UNSIGNED_BYTE\t\t \t= GL.gl.UNSIGNED_BYTE;\n};\n\n\nexport default exposeAttributes;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/utils/exposeAttributes.js","// getFloat.js\n\nimport GL from '../GLTool';\n\nlet hasChecked = false;\nlet _float;\n\n\nfunction checkFloat() {\n\tif(GL.webgl2) {\n\t\treturn GL.gl.FLOAT;\n\t} else {\n\t\tconst extFloat = GL.getExtension('OES_texture_float');\n\t\tif(extFloat) {\n\t\t\treturn GL.gl.FLOAT;\n\t\t} else {\n\t\t\tconsole.warn('USING FLOAT BUT OES_texture_float NOT SUPPORTED');\n\t\t\treturn GL.gl.UNSIGNED_BYTE;\n\t\t}\n\t}\n\n\thasChecked = true;\n};\n\nexport default function () {\n\tif(!hasChecked) {\n\t\t_float = checkFloat();\n\t}\n\n\n\treturn _float;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/utils/getFloat.js","// getHalfFloat.js\n\nimport GL from '../GLTool';\n\nlet hasChecked = false;\nlet halfFloat;\n\nfunction checkHalfFloat() {\n\tif(GL.webgl2) {\n\t\treturn GL.gl.HALF_FLOAT;\n\t} else {\n\t\tconst extHalfFloat = GL.getExtension('OES_texture_half_float');\n\t\tif(extHalfFloat) {\n\t\t\treturn extHalfFloat.HALF_FLOAT_OES;\n\t\t} else {\n\t\t\tconsole.warn('USING HALF FLOAT BUT OES_texture_half_float NOT SUPPORTED');\n\t\t\treturn GL.gl.UNSIGNED_BYTE;\n\t\t}\n\t}\n\n\thasChecked = true;\n};\n\nexport default function () {\n\tif(!hasChecked) {\n\t\thalfFloat = checkHalfFloat();\n\t}\n\n\treturn halfFloat;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/utils/getHalfFloat.js","// ExtensionsList.js\n\nexport default [\n\t'EXT_shader_texture_lod', \n\t'EXT_sRGB', \n\t'EXT_frag_depth', \n\t'OES_texture_float', \n\t'OES_texture_half_float', \n\t'OES_texture_float_linear', \n\t'OES_texture_half_float_linear', \n\t'OES_standard_derivatives', \n\t'WEBGL_depth_texture', \n\t'EXT_texture_filter_anisotropic', \n\t'OES_vertex_array_object', \n\t'ANGLE_instanced_arrays', \n\t'WEBGL_draw_buffers'\n];\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/utils/ExtensionsList.js","module.exports = function(strings) {\n  if (typeof strings === 'string') strings = [strings]\n  var exprs = [].slice.call(arguments,1)\n  var parts = []\n  for (var i = 0; i < strings.length-1; i++) {\n    parts.push(strings[i], exprs[i] || '')\n  }\n  parts.push(strings[i])\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/glslify/browser.js\n// module id = 48\n// module chunks = 0","module.exports = \"// basic.frag\\n\\n#define SHADER_NAME BASIC_FRAGMENT\\n\\nprecision lowp float;\\n#define GLSLIFY 1\\nvarying vec2 vTextureCoord;\\nuniform float time;\\n// uniform sampler2D texture;\\n\\nvoid main(void) {\\n    gl_FragColor = vec4(vTextureCoord, sin(time) * .5 + .5, 1.0);\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/alfrid/shaders/basic.frag\n// module id = 49\n// module chunks = 0","// All values and structures referenced from:\n// http://msdn.microsoft.com/en-us/library/bb943991.aspx/\n//\n// DX10 Cubemap support based on\n// https://github.com/dariomanesku/cmft/issues/7#issuecomment-69516844\n// https://msdn.microsoft.com/en-us/library/windows/desktop/bb943983(v=vs.85).aspx\n// https://github.com/playcanvas/engine/blob/master/src/resources/resources_texture.js\n\nvar DDS_MAGIC = 0x20534444\nvar DDSD_MIPMAPCOUNT = 0x20000\nvar DDPF_FOURCC = 0x4\n\nvar FOURCC_DXT1 = fourCCToInt32('DXT1')\nvar FOURCC_DXT3 = fourCCToInt32('DXT3')\nvar FOURCC_DXT5 = fourCCToInt32('DXT5')\nvar FOURCC_DX10 = fourCCToInt32('DX10')\nvar FOURCC_FP32F = 116 // DXGI_FORMAT_R32G32B32A32_FLOAT\n\nvar DDSCAPS2_CUBEMAP = 0x200\nvar D3D10_RESOURCE_DIMENSION_TEXTURE2D = 3\nvar DXGI_FORMAT_R32G32B32A32_FLOAT = 2\n\n// The header length in 32 bit ints\nvar headerLengthInt = 31\n\n// Offsets into the header array\nvar off_magic = 0\nvar off_size = 1\nvar off_flags = 2\nvar off_height = 3\nvar off_width = 4\nvar off_mipmapCount = 7\nvar off_pfFlags = 20\nvar off_pfFourCC = 21\nvar off_caps2 = 28\n\nmodule.exports = parseHeaders\n\nfunction parseHeaders (arrayBuffer) {\n  var header = new Int32Array(arrayBuffer, 0, headerLengthInt)\n\n  if (header[off_magic] !== DDS_MAGIC) {\n    throw new Error('Invalid magic number in DDS header')\n  }\n\n  if (!header[off_pfFlags] & DDPF_FOURCC) {\n    throw new Error('Unsupported format, must contain a FourCC code')\n  }\n\n  var blockBytes\n  var format\n  var fourCC = header[off_pfFourCC]\n  switch (fourCC) {\n    case FOURCC_DXT1:\n      blockBytes = 8\n      format = 'dxt1'\n      break\n    case FOURCC_DXT3:\n      blockBytes = 16\n      format = 'dxt3'\n      break\n    case FOURCC_DXT5:\n      blockBytes = 16\n      format = 'dxt5'\n      break\n    case FOURCC_FP32F:\n      format = 'rgba32f'\n      break\n    case FOURCC_DX10:\n      var dx10Header = new Uint32Array(arrayBuffer.slice(128, 128 + 20))\n      format = dx10Header[0]\n      var resourceDimension = dx10Header[1]\n      var miscFlag = dx10Header[2]\n      var arraySize = dx10Header[3]\n      var miscFlags2 = dx10Header[4]\n\n      if (resourceDimension === D3D10_RESOURCE_DIMENSION_TEXTURE2D && format === DXGI_FORMAT_R32G32B32A32_FLOAT) {\n        format = 'rgba32f'\n      } else {\n        throw new Error('Unsupported DX10 texture format ' + format)\n      }\n      break\n    default:\n      throw new Error('Unsupported FourCC code: ' + int32ToFourCC(fourCC))\n  }\n\n  var flags = header[off_flags]\n  var mipmapCount = 1\n\n  if (flags & DDSD_MIPMAPCOUNT) {\n    mipmapCount = Math.max(1, header[off_mipmapCount])\n  }\n\n  var cubemap = false\n  var caps2 = header[off_caps2]\n  if (caps2 & DDSCAPS2_CUBEMAP) {\n    cubemap = true\n  }\n\n  var width = header[off_width]\n  var height = header[off_height]\n  var dataOffset = header[off_size] + 4\n  var texWidth = width\n  var texHeight = height\n  var images = []\n  var dataLength\n\n  if (fourCC === FOURCC_DX10) {\n    dataOffset += 20\n  }\n\n  if (cubemap) {\n    for (var f = 0; f < 6; f++) {\n      if (format !== 'rgba32f') {\n        throw new Error('Only RGBA32f cubemaps are supported')\n      }\n      var bpp = 4 * 32 / 8\n\n      width = texWidth\n      height = texHeight\n\n      // cubemap should have all mipmap levels defined\n      // Math.log2(width) + 1\n      var requiredMipLevels = Math.log(width) / Math.log(2) + 1\n\n      for (var i = 0; i < requiredMipLevels; i++) {\n        dataLength = width * height * bpp\n        images.push({\n          offset: dataOffset,\n          length: dataLength,\n          shape: [ width, height ]\n        })\n        // Reuse data from the previous level if we are beyond mipmapCount\n        // This is hack for CMFT not publishing full mipmap chain https://github.com/dariomanesku/cmft/issues/10\n        if (i < mipmapCount) {\n          dataOffset += dataLength\n        }\n        width = Math.floor(width / 2)\n        height = Math.floor(height / 2)\n      }\n    }\n  } else {\n    for (var i = 0; i < mipmapCount; i++) {\n      dataLength = Math.max(4, width) / 4 * Math.max(4, height) / 4 * blockBytes\n\n      images.push({\n        offset: dataOffset,\n        length: dataLength,\n        shape: [ width, height ]\n      })\n      dataOffset += dataLength\n      width = Math.floor(width / 2)\n      height = Math.floor(height / 2)\n    }\n  }\n\n  return {\n    shape: [ texWidth, texHeight ],\n    images: images,\n    format: format,\n    flags: flags,\n    cubemap: cubemap\n  }\n}\n\nfunction fourCCToInt32 (value) {\n  return value.charCodeAt(0) +\n    (value.charCodeAt(1) << 8) +\n    (value.charCodeAt(2) << 16) +\n    (value.charCodeAt(3) << 24)\n}\n\nfunction int32ToFourCC (value) {\n  return String.fromCharCode(\n    value & 0xff,\n    (value >> 8) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 24) & 0xff\n  )\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/parse-dds/index.js\n// module id = 50\n// module chunks = 0","// CubeFrameBuffer.js\n\n'use strict';\n\nimport GL from './GLTool';\nimport GLCubeTexture from './GLCubeTexture';\n\nlet gl;\n\n\nclass CubeFrameBuffer {\n\n\tconstructor(size, mParameters = {}) {\n\t\tgl = GL.gl;\n\t\tthis._size = size;\n\t\tthis.magFilter = mParameters.magFilter || gl.LINEAR;\n\t\tthis.minFilter = mParameters.minFilter || gl.LINEAR;\n\t\tthis.wrapS     = mParameters.wrapS || gl.CLAMP_TO_EDGE;\n\t\tthis.wrapT     = mParameters.wrapT || gl.CLAMP_TO_EDGE;\n\n\t\tthis._init();\n\t}\n\n\n\t_init() {\n\t\tthis.texture   = gl.createTexture();\n\t\tthis.glTexture = new GLCubeTexture(this.texture, {}, true);\n\n\t\tgl.bindTexture(gl.TEXTURE_CUBE_MAP, this.texture);\n\t\tgl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, this.magFilter);\n\t\tgl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, this.minFilter);\n\t\tgl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, this.wrapS);\n\t\tgl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, this.wrapT);\n\n\t\tconst targets = [\n\t\t\tgl.TEXTURE_CUBE_MAP_POSITIVE_X, gl.TEXTURE_CUBE_MAP_NEGATIVE_X, \n\t\t\tgl.TEXTURE_CUBE_MAP_POSITIVE_Y, gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, \n\t\t\tgl.TEXTURE_CUBE_MAP_POSITIVE_Z, gl.TEXTURE_CUBE_MAP_NEGATIVE_Z \n\t\t];\n\n\t\tfor(let i = 0; i < targets.length; i++) {\n\t\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\t\t\tgl.texImage2D(targets[i], 0, gl.RGBA, this.width, this.height, 0, gl.RGBA, gl.FLOAT, null);\n\t\t}\n\n\n\t\tthis._frameBuffers = [];\n\t\tfor(let i = 0; i < targets.length; i++) {\n\t\t\tconst frameBuffer = gl.createFramebuffer();\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, targets[i], this.texture, 0);\n\n\t\t\tconst status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\t\t\tif (status !== gl.FRAMEBUFFER_COMPLETE) {\n\t\t\t\tconsole.log(`'gl.checkFramebufferStatus() returned '${status}`);\n\t\t\t}\n\n\t\t\tthis._frameBuffers.push(frameBuffer);\n\t\t}\n\n\t\t// gl.generateMipmap(gl.TEXTURE_CUBE_MAP);\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\t\tgl.bindTexture(gl.TEXTURE_CUBE_MAP, null);\n\t}\n\n\n\tbind(mTargetIndex) {\n\n\t\t// if(Math.random() > .99) console.log('bind :', mTargetIndex, this._frameBuffers[mTargetIndex]);\n\t\tGL.viewport(0, 0, this.width, this.height);\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this._frameBuffers[mTargetIndex]);\n\t}\n\n\tunbind() {\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\tGL.viewport(0, 0, GL.width, GL.height);\n\t}\n\n\t//\tTEXTURES\n\n\tgetTexture() {\n\t\treturn this.glTexture;\n\t}\n\n\t//\tGETTERS AND SETTERS\n\n\tget width() {\n\t\treturn this._size;\n\t}\n\n\tget height() {\n\t\treturn this._size;\n\t}\n}\n\n\nexport default CubeFrameBuffer;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/CubeFrameBuffer.js","// MultisampleFrameBuffer.js\n\nimport GL from './GLTool';\nimport GLTexture from './GLTexture';\n\nlet gl;\n\nfunction isPowerOfTwo(x) {\t\n\treturn (x !== 0) && (!(x & (x - 1)));\n};\n\nclass MultisampleFrameBuffer {\n\tconstructor(mWidth, mHeight, mParameters = {}) {\n\t\tgl = GL.gl;\n\n\t\tthis.width            = mWidth;\n\t\tthis.height           = mHeight;\n\n\t\tthis.magFilter  = mParameters.magFilter \t|| gl.LINEAR;\n\t\tthis.minFilter  = mParameters.minFilter \t|| gl.LINEAR;\n\t\tthis.wrapS      = mParameters.wrapS \t\t|| gl.CLAMP_TO_EDGE;\n\t\tthis.wrapT      = mParameters.wrapT \t\t|| gl.CLAMP_TO_EDGE;\n\t\tthis.useDepth   = mParameters.useDepth \t\t|| true;\n\t\tthis.useStencil = mParameters.useStencil \t|| false;\n\t\tthis.texelType \t= mParameters.type;\n\t\tthis._numSample = mParameters.numSample \t|| 8;\n\n\t\tif(!isPowerOfTwo(this.width) || !isPowerOfTwo(this.height)) {\n\t\t\tthis.wrapS = this.wrapT = gl.CLAMP_TO_EDGE;\n\n\t\t\tif(this.minFilter === gl.LINEAR_MIPMAP_NEAREST) {\n\t\t\t\tthis.minFilter = gl.LINEAR;\n\t\t\t}\n\t\t} \n\n\t\tthis._init();\n\t}\n\n\t_init() {\n\t\tlet texelType = gl.UNSIGNED_BYTE;\n\t\tif (this.texelType) {\n\t\t\ttexelType = this.texelType;\n\t\t}\n\n\t\tthis.texelType = texelType;\n\n\t\tthis.frameBuffer        = gl.createFramebuffer();\t\n\t\tthis.frameBufferColor   = gl.createFramebuffer();\t\n\t\tthis.renderBufferColor  = gl.createRenderbuffer();\n\t\tthis.renderBufferDepth  = gl.createRenderbuffer();\n\t\tthis.glTexture \t\t\t= this._createTexture();\n\t\tthis.glDepthTexture \t= this._createTexture(gl.DEPTH_COMPONENT16, gl.UNSIGNED_SHORT, gl.DEPTH_COMPONENT, true);\n\n\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, this.renderBufferColor);\n\t\tgl.renderbufferStorageMultisample(gl.RENDERBUFFER, this._numSample, gl.RGBA8, this.width, this.height);\n\n\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, this.renderBufferDepth);\n\t\tgl.renderbufferStorageMultisample(gl.RENDERBUFFER, this._numSample, gl.DEPTH_COMPONENT16, this.width, this.height);\n\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n\t\tgl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.RENDERBUFFER, this.renderBufferColor);\n\t\tgl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this.renderBufferDepth);\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBufferColor);\n\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.glTexture.texture, 0);\n\t\t// gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, this.glDepthTexture.texture, 0);\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n\t\t// gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBufferDepth);\n\t\t// gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, this.glDepthTexture.texture, 0);\n\t\t// gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t}\n\n\t_createTexture(mInternalformat, mTexelType, mFormat, forceNearest = false) {\n\t\tif(mInternalformat === undefined) {\tmInternalformat = gl.RGBA;\t}\n\t\tif(mTexelType === undefined) {\tmTexelType = this.texelType;\t}\n\t\tif(!mFormat) {\tmFormat = mInternalformat; }\n\n\t\tconst t = gl.createTexture();\n\t\tconst glt = new GLTexture(t, true);\n\t\tconst magFilter = forceNearest ? GL.NEAREST : this.magFilter;\n\t\tconst minFilter = forceNearest ? GL.NEAREST : this.minFilter;\n\n\t\tgl.bindTexture(gl.TEXTURE_2D, t);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, this.wrapS);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, this.wrapT);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, mInternalformat, this.width, this.height, 0, mFormat, mTexelType, null);\t\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\n\t\treturn glt;\n\t}\n\n\n\tbind(mAutoSetViewport=true) {\n\t\tif(mAutoSetViewport) {\n\t\t\tGL.viewport(0, 0, this.width, this.height);\t\n\t\t}\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n\t}\n\n\n\tunbind(mAutoSetViewport=true) {\n\t\tif(mAutoSetViewport) {\n\t\t\tGL.viewport(0, 0, GL.width, GL.height);\t\n\t\t}\n\n\t\tconst { width, height } = this;\n\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n\t\tgl.bindFramebuffer(gl.READ_FRAMEBUFFER, this.frameBuffer);\n\t\tgl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, this.frameBufferColor);\n\t\tgl.clearBufferfv(gl.COLOR, 0, [0.0, 0.0, 0.0, 0.0]);\n\t\tgl.blitFramebuffer(\n\t\t\t0, 0, width, height,\n\t\t\t0, 0, width, height,\n\t\t\tgl.COLOR_BUFFER_BIT, GL.NEAREST\n\t\t);\n\t\t// gl.blitFramebuffer(\n\t\t// \t0, 0, width, height,\n\t\t// \t0, 0, width, height,\n\t\t// \tgl.COLOR_BUFFER_BIT|gl.DEPTH_STENCIL, GL.NEAREST\n\t\t// );\n\n\t\t// gl.bindFramebuffer(gl.READ_FRAMEBUFFER, this.frameBuffer);\n\t\t// gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, this.frameBufferDepth);\n\t\t// gl.clearBufferfi(gl.DEPTH_STENCIL, 0, 1.0, 0);\n\t\t// gl.blitFramebuffer(\n\t\t// \t0, 0, width, height,\n\t\t// \t0, 0, width, height,\n\t\t// \tgl.DEPTH_BUFFER_BIT, gl.NEAREST\n\t\t// );\n\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t}\n\n\n\tgetTexture(mIndex = 0) {\n\t\treturn this.glTexture;\n\t}\n\n\n\tgetDepthTexture() {\n\t\treturn this.glDepthTexture;\n\t}\n\n}\n\n\nexport default MultisampleFrameBuffer;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/MultisampleFrameBuffer.js","// TransformFeedbackObject.js\n\nimport GL from './GLTool';\nimport GLShader from './GLShader';\nimport Mesh from './Mesh';\n\nlet gl;\n\nclass TransformFeedbackObject {\n\n\n\tconstructor(strVertexShader, strFragmentShader) {\n\t\tgl = GL.gl;\n\t\tthis._vs = strVertexShader;\n\t\tthis._fs = strFragmentShader;\n\t\t\n\t\tthis._init();\n\t}\n\n\n\t_init() {\n\t\tthis._meshCurrent = new Mesh();\n\t\tthis._meshTarget = new Mesh();\n\t\tthis._numPoints = -1;\n\n\t\tthis._varyings = [];\n\t\tthis.transformFeedback = gl.createTransformFeedback();\n\t}\n\n\n\tbufferData(mData, mName, mVaryingName) {\n\t\tconst isTransformFeedback = !!mVaryingName;\n\t\tconsole.log('is Transform feedback ?', mName, isTransformFeedback);\n\t\tthis._meshCurrent.bufferData(mData, mName, null, gl.STREAM_COPY, false);\n\t\tthis._meshTarget.bufferData(mData, mName, null, gl.STREAM_COPY, false);\n\n\t\tif(isTransformFeedback) {\n\t\t\tthis._varyings.push(mVaryingName);\n\n\t\t\tif(this._numPoints < 0) {\n\t\t\t\tthis._numPoints = mData.length;\n\t\t\t}\n\t\t}\n\t}\n\n\tbufferIndex(mArrayIndices) {\n\t\tthis._meshCurrent.bufferIndex(mArrayIndices);\n\t\tthis._meshTarget.bufferIndex(mArrayIndices);\n\t}\n\n\n\tuniform(mName, mType, mValue) {\n\t\tif(this.shader) {\n\t\t\tthis.shader.uniform(mName, mType, mValue);\t\n\t\t}\n\t\t\n\t}\n\n\tgenerate() {\n\t\tthis.shader = new GLShader(this._vs, this._fs, this._varyings);\n\t}\n\n\trender() {\n\t\tif(!this.shader) {\tthis.generate();\t}\n\n\t\tthis.shader.bind();\n\t\tGL.drawTransformFeedback(this);\n\n\t\tthis._swap();\n\t}\n\n\t_swap() {\n\t\tconst tmp          = this._meshCurrent;\n\t\tthis._meshCurrent = this._meshTarget;\n\t\tthis._meshTarget  = tmp;\n\t}\n\n\tget numPoints() {\treturn this._numPoints;\t}\n\tget meshCurrent() {\treturn this._meshCurrent;\t}\n\tget meshTarget() {\treturn this._meshTarget;\t}\n\tget meshSource() {\treturn this._meshCurrent;\t}\n\tget meshDestination() {\treturn this._meshTarget;\t}\n}\n\n\nexport default TransformFeedbackObject;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/TransformFeedbackObject.js","// EventDispatcher.js\n\nlet supportsCustomEvents = true;\ntry {\n\tlet newTestCustomEvent = document.createEvent('CustomEvent');\n\tnewTestCustomEvent = null;\n} catch(e) {\n\tsupportsCustomEvents = false;\n}\n\nclass EventDispatcher {\n\n\tconstructor() {\n\t\tthis._eventListeners = {};\n\t}\n\n\n\taddEventListener(aEventType, aFunction) {\n\n\t\tif(this._eventListeners === null || this._eventListeners === undefined) {\n\t\t\tthis._eventListeners = {};\n\t\t}\n\n\t\tif(!this._eventListeners[aEventType]) {\n\t\t\tthis._eventListeners[aEventType] = [];\n\t\t}\n\t\tthis._eventListeners[aEventType].push(aFunction);\n\t\t\n\t\treturn this;\n\n\t}\n\n\ton(aEventType, aFunction) {\treturn this.addEventListener(aEventType, aFunction);\t}\n\n\tremoveEventListener(aEventType, aFunction) {\n\t\tif(this._eventListeners === null || this._eventListeners === undefined) {\n\t\t\tthis._eventListeners = {};\n\t\t}\n\t\tconst currentArray = this._eventListeners[aEventType];\n\t\t\n\t\tif (typeof(currentArray) === 'undefined') {\n\t\t\treturn this;\n\t\t}\n\t\t\n\t\tlet currentArrayLength = currentArray.length;\n\t\tfor(let i = 0; i < currentArrayLength; i++) {\n\t\t\tif(currentArray[i] === aFunction) {\n\t\t\t\tcurrentArray.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t\tcurrentArrayLength--;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\toff(aEventType, aFunction) {\treturn this.removeEventListener(aEventType, aFunction);\t}\n\n\tdispatchEvent(aEvent) {\n\t\tif(this._eventListeners === null || this._eventListeners === undefined) {\n\t\t\tthis._eventListeners = {};\n\t\t}\n\t\tconst eventType = aEvent.type;\n\t\t\n\t\ttry {\n\t\t\tif(aEvent.target === null) {\n\t\t\t\taEvent.target = this;\n\t\t\t}\n\t\t\taEvent.currentTarget = this;\n\t\t} catch(theError) {\n\t\t\tconst newEvent = { type: eventType, detail: aEvent.detail, dispatcher: this };\n\t\t\treturn this.dispatchEvent(newEvent);\n\t\t}\n\t\t\n\t\tconst currentEventListeners = this._eventListeners[eventType];\n\t\tif(currentEventListeners !== null && currentEventListeners !== undefined) {\n\t\t\tconst currentArray = this._copyArray(currentEventListeners);\n\t\t\tconst currentArrayLength = currentArray.length;\n\t\t\tfor(let i = 0; i < currentArrayLength; i++) {\n\t\t\t\tconst currentFunction = currentArray[i];\n\t\t\t\tcurrentFunction.call(this, aEvent);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tdispatchCustomEvent(aEventType, aDetail) {\n\t\tlet newEvent;\n\t\tif (supportsCustomEvents) {\n\t\t\tnewEvent = document.createEvent('CustomEvent');\n\t\t\tnewEvent.dispatcher = this;\n\t\t\tnewEvent.initCustomEvent(aEventType, false, false, aDetail);\n\t\t} else {\n\t\t\tnewEvent = { type: aEventType, detail: aDetail, dispatcher: this };\n\t\t}\n\t\treturn this.dispatchEvent(newEvent);\n\t}\n\n\ttrigger(aEventType, aDetail) {\treturn this.dispatchCustomEvent(aEventType, aDetail);\t}\n\n\t_destroy() {\n\t\tif(this._eventListeners !== null) {\n\t\t\tfor(const objectName in this._eventListeners) {\n\t\t\t\tif(this._eventListeners.hasOwnProperty(objectName)) {\n\t\t\t\t\tconst currentArray = this._eventListeners[objectName];\n\t\t\t\t\tconst currentArrayLength = currentArray.length;\n\t\t\t\t\tfor(let i = 0; i < currentArrayLength; i++) {\n\t\t\t\t\t\tcurrentArray[i] = null;\n\t\t\t\t\t}\n\t\t\t\t\tdelete this._eventListeners[objectName];\t\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._eventListeners = null;\n\t\t}\n\t}\n\n\t_copyArray(aArray) {\n\t\tconst currentArray = new Array(aArray.length);\n\t\tconst currentArrayLength = currentArray.length;\n\t\tfor(let i = 0; i < currentArrayLength; i++) {\n\t\t\tcurrentArray[i] = aArray[i];\n\t\t}\n\t\treturn currentArray;\n\t}\n}\n\n\nexport default EventDispatcher;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/utils/EventDispatcher.js","// TweenNumber.js\n\n'use strict';\n\nimport Scheduler from 'scheduling';\n\nconst Easing = {\n\tLinear: {\n\t\tNone: function (k) {\n\t\t\treturn k;\n\t\t}\n\t},\n\tQuadratic: {\n\t\tIn: function (k) {\n\t\t\treturn k * k;\n\t\t},\n\t\tOut: function (k) {\n\t\t\treturn k * (2 - k);\n\t\t},\n\t\tInOut: function (k) {\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k;\n\t\t\t}\n\t\t\treturn - 0.5 * (--k * (k - 2) - 1);\n\t\t}\n\t},\n\tCubic: {\n\t\tIn: function (k) {\n\t\t\treturn k * k * k;\n\t\t},\n\t\tOut: function (k) {\n\t\t\treturn --k * k * k + 1;\n\t\t},\n\t\tInOut: function (k) {\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k;\n\t\t\t}\n\t\t\treturn 0.5 * ((k -= 2) * k * k + 2);\n\t\t}\n\t},\n\tQuartic: {\n\t\tIn: function (k) {\n\t\t\treturn k * k * k * k;\n\t\t},\n\t\tOut: function (k) {\n\t\t\treturn 1 - (--k * k * k * k);\n\t\t},\n\t\tInOut: function (k) {\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k * k;\n\t\t\t}\n\t\t\treturn - 0.5 * ((k -= 2) * k * k * k - 2);\n\t\t}\n\t},\n\tQuintic: {\n\t\tIn: function (k) {\n\t\t\treturn k * k * k * k * k;\n\t\t},\n\t\tOut: function (k) {\n\t\t\treturn --k * k * k * k * k + 1;\n\t\t},\n\t\tInOut: function (k) {\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k * k * k;\n\t\t\t}\n\t\t\treturn 0.5 * ((k -= 2) * k * k * k * k + 2);\n\t\t}\n\t},\n\tSinusoidal: {\n\t\tIn: function (k) {\n\t\t\treturn 1 - Math.cos(k * Math.PI / 2);\n\t\t},\n\t\tOut: function (k) {\n\t\t\treturn Math.sin(k * Math.PI / 2);\n\t\t},\n\t\tInOut: function (k) {\n\t\t\treturn 0.5 * (1 - Math.cos(Math.PI * k));\n\t\t}\n\t},\n\tExponential: {\n\t\tIn: function (k) {\n\t\t\treturn k === 0 ? 0 : Math.pow(1024, k - 1);\n\t\t},\n\t\tOut: function (k) {\n\t\t\treturn k === 1 ? 1 : 1 - Math.pow(2, - 10 * k);\n\t\t},\n\t\tInOut: function (k) {\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * Math.pow(1024, k - 1);\n\t\t\t}\n\t\t\treturn 0.5 * (- Math.pow(2, - 10 * (k - 1)) + 2);\n\t\t}\n\t},\n\tCircular: {\n\t\tIn: function (k) {\n\t\t\treturn 1 - Math.sqrt(1 - k * k);\n\t\t},\n\t\tOut: function (k) {\n\t\t\treturn Math.sqrt(1 - (--k * k));\n\t\t},\n\t\tInOut: function (k) {\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn - 0.5 * (Math.sqrt(1 - k * k) - 1);\n\t\t\t}\n\t\t\treturn 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n\t\t}\n\t},\n\tElastic: {\n\t\tIn: function (k) {\n\t\t\tlet s;\n\t\t\tlet a = 0.1;\n\t\t\tconst p = 0.4;\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (!a || a < 1) {\n\t\t\t\ta = 1;\n\t\t\t\ts = p / 4;\n\t\t\t} else {\n\t\t\t\ts = p * Math.asin(1 / a) / (2 * Math.PI);\n\t\t\t}\n\t\t\treturn - (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n\t\t},\n\t\tOut: function (k) {\n\t\t\tlet s;\n\t\t\tlet a = 0.1;\n\t\t\tconst p = 0.4;\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (!a || a < 1) {\n\t\t\t\ta = 1;\n\t\t\t\ts = p / 4;\n\t\t\t} else {\n\t\t\t\ts = p * Math.asin(1 / a) / (2 * Math.PI);\n\t\t\t}\n\t\t\treturn (a * Math.pow(2, - 10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n\t\t},\n\t\tInOut: function (k) {\n\t\t\tlet s;\n\t\t\tlet a = 0.1;\n\t\t\tconst p = 0.4;\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (!a || a < 1) {\n\t\t\t\ta = 1;\n\t\t\t\ts = p / 4;\n\t\t\t} else {\n\t\t\t\ts = p * Math.asin(1 / a) / (2 * Math.PI);\n\t\t\t}\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn - 0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n\t\t\t}\n\t\t\treturn a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t\t}\n\t},\n\tBack: {\n\t\tIn: function (k) {\n\t\t\tconst s = 1.70158;\n\t\t\treturn k * k * ((s + 1) * k - s);\n\t\t},\n\t\tOut: function (k) {\n\t\t\tconst s = 1.70158;\n\t\t\treturn --k * k * ((s + 1) * k + s) + 1;\n\t\t},\n\t\tInOut: function (k) {\n\t\t\tconst s = 1.70158 * 1.525;\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * (k * k * ((s + 1) * k - s));\n\t\t\t}\n\t\t\treturn 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n\t\t}\n\t},\n\tBounce: {\n\t\tin: function (k) {\n\t\t\treturn 1 - Easing.Bounce.out(1 - k);\n\t\t},\n\t\tout: function (k) {\n\t\t\tif (k < (1 / 2.75)) {\n\t\t\t\treturn 7.5625 * k * k;\n\t\t\t} else if (k < (2 / 2.75)) {\n\t\t\t\treturn 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n\t\t\t} else if (k < (2.5 / 2.75)) {\n\t\t\t\treturn 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n\t\t\t} else {\n\t\t\t\treturn 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n\t\t\t}\n\t\t},\n\t\tinOut: function (k) {\n\t\t\tif (k < 0.5) {\n\t\t\t\treturn Easing.Bounce.in(k * 2) * 0.5;\n\t\t\t}\n\t\t\treturn Easing.Bounce.out(k * 2 - 1) * 0.5 + 0.5;\n\t\t}\n\t}\n};\n\nfunction getFunc(mEasing) {\n\tswitch (mEasing) {\n\tdefault:\n\tcase 'linear' :\n\t\treturn Easing.Linear.None;\n\tcase 'expIn' :\n\t\treturn Easing.Exponential.In;\n\tcase 'expOut' :\n\t\treturn Easing.Exponential.Out;\n\tcase 'expInOut' :\n\t\treturn Easing.Exponential.InOut;\n\n\tcase 'cubicIn' :\n\t\treturn Easing.Cubic.In;\n\tcase 'cubicOut' :\n\t\treturn Easing.Cubic.Out;\n\tcase 'cubicInOut' :\n\t\treturn Easing.Cubic.InOut;\n\n\tcase 'quarticIn' :\n\t\treturn Easing.Quartic.In;\n\tcase 'quarticOut' :\n\t\treturn Easing.Quartic.Out;\n\tcase 'quarticInOut' :\n\t\treturn Easing.Quartic.InOut;\n\n\tcase 'quinticIn' :\n\t\treturn Easing.Quintic.In;\n\tcase 'quinticOut' :\n\t\treturn Easing.Quintic.Out;\n\tcase 'quinticInOut' :\n\t\treturn Easing.Quintic.InOut;\n\n\tcase 'sinusoidalIn' :\n\t\treturn Easing.Sinusoidal.In;\n\tcase 'sinusoidalOut' :\n\t\treturn Easing.Sinusoidal.Out;\n\tcase 'sinusoidalInOut' :\n\t\treturn Easing.Sinusoidal.InOut;\n\n\tcase 'circularIn' :\n\t\treturn Easing.Circular.In;\n\tcase 'circularOut' :\n\t\treturn Easing.Circular.Out;\n\tcase 'circularInOut' :\n\t\treturn Easing.Circular.InOut;\n\n\tcase 'elasticIn' :\n\t\treturn Easing.Elastic.In;\n\tcase 'elasticOut' :\n\t\treturn Easing.Elastic.Out;\n\tcase 'elasticInOut' :\n\t\treturn Easing.Elastic.InOut;\n\n\tcase 'backIn' :\n\t\treturn Easing.Back.In;\n\tcase 'backOut' :\n\t\treturn Easing.Back.Out;\n\tcase 'backInOut' :\n\t\treturn Easing.Back.InOut;\n\n\tcase 'bounceIn' :\n\t\treturn Easing.Bounce.in;\n\tcase 'bounceOut' :\n\t\treturn Easing.Bounce.out;\n\tcase 'bounceInOut' :\n\t\treturn Easing.Bounce.inOut;\n\t}\n}\n\nclass TweenNumber {\n\tconstructor(mValue, mEasing = 'expOut', mSpeed = 0.01) {\n\t\tthis._value = mValue;\n\t\tthis._startValue = mValue;\n\t\tthis._targetValue = mValue;\n\t\tthis._counter = 1;\n\t\tthis.speed = mSpeed;\n\t\tthis.easing = mEasing;\n\t\tthis._needUpdate = true;\n\n\t\tthis._efIndex     = Scheduler.addEF(()=> this._update());\n\t}\n\n\n\t_update() {\n\t\tlet newCounter = this._counter + this.speed;\n\t\tif(newCounter > 1) { newCounter = 1; }\n\t\tif(this._counter === newCounter) {\n\t\t\tthis._needUpdate = false;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._counter = newCounter;\n\t\tthis._needUpdate = true;\n\t}\n\n\n\tlimit(mMin, mMax) {\n\t\tif(mMin > mMax) {\n\t\t\tthis.limit(mMax, mMin);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._min = mMin;\n\t\tthis._max = mMax;\n\n\t\tthis._checkLimit();\n\t}\n\n\tsetTo(mValue) {\n\t\tthis._value = mValue;\n\t\tthis._targetValue = mValue;\n\t\tthis._counter = 1;\n\t}\n\n\n\t_checkLimit() {\n\t\tif(this._min !== undefined && this._targetValue < this._min) {\n\t\t\tthis._targetValue = this._min;\n\t\t} \n\n\t\tif(this._max !== undefined && this._targetValue > this._max) {\n\t\t\tthis._targetValue = this._max;\n\t\t} \n\t}\n\n\n\tdestroy() {\n\t\tScheduler.removeEF(this._efIndex);\n\t}\n\n\t//\tGETTERS / SETTERS\n\n\tset value(mValue) {\n\t\tthis._startValue = this._value;\n\t\tthis._targetValue = mValue;\n\t\tthis._checkLimit();\n\t\tthis._counter = 0;\n\t}\n\n\tget value() {\n\t\tif(this._needUpdate) {\n\t\t\tconst f = getFunc(this.easing);\n\t\t\tconst p = f(this._counter);\n\t\t\tthis._value = this._startValue + p * (this._targetValue - this._startValue);\n\t\t\tthis._needUpdate = false;\n\t\t}\n\t\treturn this._value;\n\t}\n\n\tget targetValue() {\n\t\treturn this._targetValue;\n\t}\n}\n\n\nexport default TweenNumber;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/utils/TweenNumber.js","// QuatRotation.js\n\n'use strict';\n\nimport glm from 'gl-matrix';\nimport EaseNumber from './EaseNumber';\nimport Scheduler from 'scheduling';\n\nconst getMouse = function (mEvent, mTarget) {\n\n\tconst o = mTarget || {};\n\tif(mEvent.touches) {\n\t\to.x = mEvent.touches[0].pageX;\n\t\to.y = mEvent.touches[0].pageY;\n\t} else {\n\t\to.x = mEvent.clientX;\n\t\to.y = mEvent.clientY;\n\t}\n\n\treturn o;\n};\n\nclass QuatRotation {\n\tconstructor(mTarget, mListenerTarget = window, mEasing = 0.1) {\n\n\t\tthis._target         = mTarget;\n\t\tthis._listenerTarget = mListenerTarget;\n\t\t\n\t\tthis.matrix          = glm.mat4.create();\n\t\tthis.m               = glm.mat4.create();\n\t\tthis._vZaxis         = glm.vec3.clone([0, 0, 0]);\n\t\tthis._zAxis          = glm.vec3.clone([0, 0, 1]);\n\t\tthis.preMouse        = { x:0, y:0 };\n\t\tthis.mouse           = { x:0, y:0 };\n\t\tthis._isMouseDown    = false;\n\t\tthis._rotation       = glm.quat.create();\n\t\tthis.tempRotation    = glm.quat.create();\n\t\tthis._rotateZMargin  = 0;\n\t\tthis._offset         = 0.004;\n\t\tthis._slerp          = -1;\n\t\tthis._isLocked       = false;\n\t\t\n\t\tthis._diffX          = new EaseNumber(0, mEasing);\n\t\tthis._diffY          = new EaseNumber(0, mEasing);\n\n\t\tthis._listenerTarget.addEventListener('mousedown', (e) => this._onDown(e));\n\t\tthis._listenerTarget.addEventListener('touchstart', (e) => this._onDown(e));\n\t\tthis._listenerTarget.addEventListener('mousemove', (e) => this._onMove(e));\n\t\tthis._listenerTarget.addEventListener('touchmove', (e) => this._onMove(e));\n\t\twindow.addEventListener('touchend', () => this._onUp());\n\t\twindow.addEventListener('mouseup', () => this._onUp());\n\n\t\tScheduler.addEF(() => this._loop());\n\t}\n\n\t// \tPUBLIC METHODS\n\n\tinverseControl(isInvert = true) {\n\t\tthis._isInvert = isInvert;\n\t}\n\n\tlock(mValue = true) {\n\t\tthis._isLocked = mValue;\n\t}\t\n\n\tsetCameraPos(mQuat, speed = 0.1) {\n\t\tthis.easing = speed;\n\t\tif(this._slerp > 0) { return; }\n\t\t\n\t\tconst tempRotation  = glm.quat.clone(this._rotation);\n\t\tthis._updateRotation(tempRotation);\n\t\tthis._rotation    = glm.quat.clone(tempRotation);\n\t\tthis._currDiffX   = this.diffX = 0;\n\t\tthis._currDiffY   = this.diffY = 0;\n\t\t\n\t\tthis._isMouseDown = false;\n\t\tthis._isRotateZ   = 0;\n\t\t\n\t\tthis._targetQuat  = glm.quat.clone(mQuat);\n\t\tthis._slerp       = 1;\n\t}\n\n\tresetQuat() {\n\t\tthis._rotation    = glm.quat.clone([0, 0, 1, 0]);\n\t\tthis.tempRotation = glm.quat.clone([0, 0, 0, 0]);\n\t\tthis._targetQuat  = undefined;\n\t\tthis._slerp       = -1;\n\t}\n\n\t//\tEVENT HANDLER\n\n\t_onDown(mEvent) {\n\t\tif(this._isLocked) { return; }\n\n\t\tconst mouse = getMouse(mEvent);\n\t\tconst tempRotation = glm.quat.clone(this._rotation);\n\t\tthis._updateRotation(tempRotation);\n\t\tthis._rotation = tempRotation;\n\n\t\tthis._isMouseDown = true;\n\t\tthis._isRotateZ = 0;\n\t\tthis.preMouse = { x:mouse.x, y:mouse.y };\n\n\t\tif(mouse.y < this._rotateZMargin || mouse.y > (window.innerHeight - this._rotateZMargin)) {\t\n\t\t\tthis._isRotateZ = 1;\t\n\t\t} else if(mouse.x < this._rotateZMargin || mouse.x > (window.innerWidth - this._rotateZMargin)) {\t\n\t\t\tthis._isRotateZ = 2;\t\n\t\t}\n\n\t\tthis._diffX.setTo(0);\n\t\tthis._diffY.setTo(0);\n\t}\n\n\n\t_onMove(mEvent) {\n\t\tif(this._isLocked) { return; }\n\t\tgetMouse(mEvent, this.mouse);\n\t}\n\n\n\t_onUp() {\n\t\tif(this._isLocked) { return; }\n\t\tthis._isMouseDown = false;\n\t}\n\n\n\t//\tPRIVATE METHODS\n\n\t_updateRotation(mTempRotation) {\n\t\tif(this._isMouseDown && !this._isLocked) {\n\t\t\tthis._diffX.value = -(this.mouse.x - this.preMouse.x);\n\t\t\tthis._diffY.value =  (this.mouse.y - this.preMouse.y);\n\n\t\t\tif(this._isInvert) {\n\t\t\t\tthis._diffX.value = -this._diffX.targetValue;\n\t\t\t\tthis._diffY.value = -this._diffY.targetValue;\n\t\t\t}\n\t\t}\n\t\t\n\t\tlet angle, _quat;\n\n\t\tif(this._isRotateZ > 0) {\n\t\t\tif(this._isRotateZ === 1) {\n\t\t\t\tangle = -this._diffX.value * this._offset; \n\t\t\t\tangle *= (this.preMouse.y < this._rotateZMargin) ? -1 : 1;\n\t\t\t\t_quat = glm.quat.clone([0, 0, Math.sin(angle), Math.cos(angle)]);\n\t\t\t\tglm.quat.multiply(_quat, mTempRotation, _quat);\n\t\t\t} else {\n\t\t\t\tangle = -this._diffY.value * this._offset; \n\t\t\t\tangle *= (this.preMouse.x < this._rotateZMargin) ? 1 : -1;\n\t\t\t\t_quat = glm.quat.clone([0, 0, Math.sin(angle), Math.cos(angle)]);\n\t\t\t\tglm.quat.multiply(_quat, mTempRotation, _quat);\n\t\t\t}\n\t\t} else {\n\t\t\tconst v = glm.vec3.clone([this._diffX.value, this._diffY.value, 0]);\n\t\t\tconst axis = glm.vec3.create();\n\t\t\tglm.vec3.cross(axis, v, this._zAxis);\n\t\t\tglm.vec3.normalize(axis, axis);\n\t\t\tangle = glm.vec3.length(v) * this._offset;\n\t\t\t_quat = glm.quat.clone([Math.sin(angle) * axis[0], Math.sin(angle) * axis[1], Math.sin(angle) * axis[2], Math.cos(angle)]);\n\t\t\tglm.quat.multiply(mTempRotation, _quat, mTempRotation);\n\t\t}\n\t}\n\n\t_loop() {\n\t\tglm.mat4.identity(this.m);\n\n\t\tif(this._targetQuat === undefined) { \n\t\t\tglm.quat.set(this.tempRotation, this._rotation[0], this._rotation[1], this._rotation[2], this._rotation[3]);\n\t\t\tthis._updateRotation(this.tempRotation);\n\t\t} else {\n\t\t\tthis._slerp += (0 - this._slerp) * 0.1;\n\n\t\t\tif(this._slerp < 0.0005) {\n\t\t\t\tglm.quat.copy(this._rotation, this._targetQuat);\n\t\t\t\tglm.quat.copy(this.tempRotation, this._targetQuat);\n\t\t\t\tthis._targetQuat = undefined;\n\t\t\t\tthis._diffX.setTo(0);\n\t\t\t\tthis._diffY.setTo(0);\n\t\t\t\tthis._slerp = -1;\n\t\t\t} else {\n\t\t\t\tglm.quat.set(this.tempRotation, 0, 0, 0, 0);\n\t\t\t\tglm.quat.slerp(this.tempRotation, this._targetQuat, this._rotation, this._slerp);\n\t\t\t}\n\t\t}\n\n\t\tglm.vec3.transformQuat(this._vZaxis, this._vZaxis, this.tempRotation);\n\n\t\tglm.mat4.fromQuat(this.matrix, this.tempRotation);\n\t}\n\n\n\t//\tGETTER AND SETTER\n\n\tset easing(mValue) {\n\t\tthis._diffX.easing = mValue;\n\t\tthis._diffY.easing = mValue;\n\t}\n\n\tget easing() {\n\t\treturn this._diffX.easing;\n\t}\n}\n\nexport default QuatRotation;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/utils/QuatRotation.js","// CameraCube.js\n\n'use strict';\n\nimport CameraPerspective from './CameraPerspective';\nimport { vec3 } from 'gl-matrix';\n\nconst CAMERA_SETTINGS = [\n\t[vec3.fromValues(0, 0, 0), vec3.fromValues(1, 0, 0), vec3.fromValues(0, -1, 0)],\t\t\n\t[vec3.fromValues(0, 0, 0), vec3.fromValues(-1, 0, 0), vec3.fromValues(0, -1, 0)],\n\t[vec3.fromValues(0, 0, 0), vec3.fromValues(0,  1, 0), vec3.fromValues(0, 0,  1)],\n\t[vec3.fromValues(0, 0, 0), vec3.fromValues(0, -1, 0), vec3.fromValues(0, 0, -1)],\n\t[vec3.fromValues(0, 0, 0), vec3.fromValues(0, 0,  1), vec3.fromValues(0, -1, 0)],\n\t[vec3.fromValues(0, 0, 0), vec3.fromValues(0, 0, -1), vec3.fromValues(0, -1, 0)]\n];\n\nclass CameraCube extends CameraPerspective {\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.setPerspective(Math.PI / 2, 1, 0.1, 1000);\n\t}\n\n\n\tface(mIndex) {\n\t\tconst o = CAMERA_SETTINGS[mIndex];\n\t\tthis.lookAt(o[0], o[1], o[2]);\n\t}\n}\n\n\nexport default CameraCube;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/cameras/CameraCube.js","// ObjLoader.js\n\n'use strict';\n\nimport BinaryLoader from './BinaryLoader';\nimport Mesh from '../Mesh';\n\nclass ObjLoader extends BinaryLoader {\n\n\tload(url, callback, drawType = 4) {\n\t\tthis._drawType = drawType;\n\t\tsuper.load(url, callback);\n\t}\n\n\t_onLoaded() {\n\t\tthis.parseObj(this._req.response);\n\t}\n\n\tparseObj(objStr) {\n\t\tconst lines = objStr.split('\\n');\n\n\t\tconst positions    = [];\n\t\tconst coords       = [];\n\t\tconst finalNormals = [];\n\t\tconst vertices     = [];\n\t\tconst normals      = [];\n\t\tconst uvs          = [];\n\t\tconst indices      = [];\n\t\tlet count        = 0;\n\t\tlet result;\n\n\t\t// v float float float\n\t\tconst vertexPattern = /v( +[\\d|\\.|\\+|\\-|e|E]+)( +[\\d|\\.|\\+|\\-|e|E]+)( +[\\d|\\.|\\+|\\-|e|E]+)/;\n\n\t\t// vn float float float\n\t\tconst normalPattern = /vn( +[\\d|\\.|\\+|\\-|e|E]+)( +[\\d|\\.|\\+|\\-|e|E]+)( +[\\d|\\.|\\+|\\-|e|E]+)/;\n\n\t\t// vt float float\n\t\tconst uvPattern = /vt( +[\\d|\\.|\\+|\\-|e|E]+)( +[\\d|\\.|\\+|\\-|e|E]+)/;\n\n\t\t// f vertex vertex vertex ...\n\t\tconst facePattern1 = /f( +-?\\d+)( +-?\\d+)( +-?\\d+)( +-?\\d+)?/;\n\n\t\t// f vertex/uv vertex/uv vertex/uv ...\n\t\tconst facePattern2 = /f( +(-?\\d+)\\/(-?\\d+))( +(-?\\d+)\\/(-?\\d+))( +(-?\\d+)\\/(-?\\d+))( +(-?\\d+)\\/(-?\\d+))?/;\n\n\t\t// f vertex/uv/normal vertex/uv/normal vertex/uv/normal ...\n\t\tconst facePattern3 = /f( +(-?\\d+)\\/(-?\\d+)\\/(-?\\d+))( +(-?\\d+)\\/(-?\\d+)\\/(-?\\d+))( +(-?\\d+)\\/(-?\\d+)\\/(-?\\d+))( +(-?\\d+)\\/(-?\\d+)\\/(-?\\d+))?/;\n\n\t\t// f vertex//normal vertex//normal vertex//normal ... \n\t\tconst facePattern4 = /f( +(-?\\d+)\\/\\/(-?\\d+))( +(-?\\d+)\\/\\/(-?\\d+))( +(-?\\d+)\\/\\/(-?\\d+))( +(-?\\d+)\\/\\/(-?\\d+))?/;\n\n\n\t\tfunction parseVertexIndex(value) {\n\t\t\tconst index = parseInt(value);\n\t\t\treturn (index >= 0 ? index - 1 : index + vertices.length / 3) * 3;\n\t\t}\n\n\t\tfunction parseNormalIndex(value) {\n\t\t\tconst index = parseInt(value);\n\t\t\treturn (index >= 0 ? index - 1 : index + normals.length / 3) * 3;\n\t\t}\n\n\t\tfunction parseUVIndex(value) {\n\t\t\tconst index = parseInt(value);\n\t\t\treturn (index >= 0 ? index - 1 : index + uvs.length / 2) * 2;\n\t\t}\n\n\n\t\tfunction addVertex(a, b, c) {\n\t\t\tpositions.push([vertices[a], vertices[a + 1], vertices[a + 2]]);\n\t\t\tpositions.push([vertices[b], vertices[b + 1], vertices[b + 2]]);\n\t\t\tpositions.push([vertices[c], vertices[c + 1], vertices[c + 2]]);\n\n\t\t\tindices.push(count * 3 + 0);\n\t\t\tindices.push(count * 3 + 1);\n\t\t\tindices.push(count * 3 + 2);\n\n\t\t\tcount ++;\n\t\t}\n\n\n\t\tfunction addUV(a, b, c) {\n\t\t\tcoords.push([uvs[a], uvs[a + 1]]);\n\t\t\tcoords.push([uvs[b], uvs[b + 1]]);\n\t\t\tcoords.push([uvs[c], uvs[c + 1]]);\n\t\t}\n\n\n\t\tfunction addNormal(a, b, c) {\n\t\t\tfinalNormals.push([normals[a], normals[a + 1], normals[a + 2]]);\n\t\t\tfinalNormals.push([normals[b], normals[b + 1], normals[b + 2]]);\n\t\t\tfinalNormals.push([normals[c], normals[c + 1], normals[c + 2]]);\n\t\t}\n\n\t\tfunction addFace(a, b, c, d,  ua, ub, uc, ud,  na, nb, nc, nd) {\n\t\t\tlet ia = parseVertexIndex(a);\n\t\t\tlet ib = parseVertexIndex(b);\n\t\t\tlet ic = parseVertexIndex(c);\n\t\t\tlet id;\n\n\t\t\tif (d === undefined) {\n\n\t\t\t\taddVertex(ia, ib, ic);\n\n\t\t\t} else {\n\n\t\t\t\tid = parseVertexIndex(d);\n\n\t\t\t\taddVertex(ia, ib, id);\n\t\t\t\taddVertex(ib, ic, id);\n\n\t\t\t}\n\n\n\t\t\tif (ua !== undefined) {\n\n\t\t\t\tia = parseUVIndex(ua);\n\t\t\t\tib = parseUVIndex(ub);\n\t\t\t\tic = parseUVIndex(uc);\n\n\t\t\t\tif (d === undefined) {\n\n\t\t\t\t\taddUV(ia, ib, ic);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tid = parseUVIndex(ud);\n\n\t\t\t\t\taddUV(ia, ib, id);\n\t\t\t\t\taddUV(ib, ic, id);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif (na !== undefined) {\n\n\t\t\t\tia = parseNormalIndex(na);\n\t\t\t\tib = parseNormalIndex(nb);\n\t\t\t\tic = parseNormalIndex(nc);\n\n\t\t\t\tif (d === undefined) {\n\n\t\t\t\t\taddNormal(ia, ib, ic);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tid = parseNormalIndex(nd);\n\n\t\t\t\t\taddNormal(ia, ib, id);\n\t\t\t\t\taddNormal(ib, ic, id);\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\n\t\tfor (let i = 0; i < lines.length; i ++) {\n\t\t\tlet line = lines[i];\n\t\t\tline = line.trim();\n\n\t\t\tif (line.length === 0 || line.charAt(0) === '#') {\n\n\t\t\t\tcontinue;\n\n\t\t\t} else if ((result = vertexPattern.exec(line)) !== null) {\n\n\t\t\t\tvertices.push(\n\t\t\t\t\tparseFloat(result[1]),\n\t\t\t\t\tparseFloat(result[2]),\n\t\t\t\t\tparseFloat(result[3])\n\t\t\t\t);\n\n\t\t\t} else if ((result = normalPattern.exec(line)) !== null) {\n\n\t\t\t\tnormals.push(\n\t\t\t\t\tparseFloat(result[1]),\n\t\t\t\t\tparseFloat(result[2]),\n\t\t\t\t\tparseFloat(result[3])\n\t\t\t\t);\n\n\t\t\t} else if ((result = uvPattern.exec(line)) !== null) {\n\n\t\t\t\tuvs.push(\n\t\t\t\t\tparseFloat(result[1]),\n\t\t\t\t\tparseFloat(result[2])\n\t\t\t\t);\n\n\t\t\t} else if ((result = facePattern1.exec(line)) !== null) {\n\n\t\t\t\taddFace(\n\t\t\t\t\tresult[1], result[2], result[3], result[4]\n\t\t\t\t);\n\n\t\t\t} else if ((result = facePattern2.exec(line)) !== null) {\n\n\t\t\t\taddFace(\n\t\t\t\t\tresult[2], result[5], result[8], result[11],\n\t\t\t\t\tresult[3], result[6], result[9], result[12]\n\t\t\t\t);\n\n\t\t\t} else if ((result = facePattern3.exec(line)) !== null) {\n\t\t\t\taddFace(\n\t\t\t\t\tresult[2], result[6], result[10], result[14],\n\t\t\t\t\tresult[3], result[7], result[11], result[15],\n\t\t\t\t\tresult[4], result[8], result[12], result[16]\n\t\t\t\t);\n\n\t\t\t} else if ((result = facePattern4.exec(line)) !== null) {\n\t\t\t\taddFace(\n\t\t\t\t\tresult[2], result[5], result[8], result[11],\n\t\t\t\t\tundefined, undefined, undefined, undefined,\n\t\t\t\t\tresult[3], result[6], result[9], result[12]\n\t\t\t\t);\n\n\t\t\t} \n\t\t}\n\n\t\treturn this._generateMeshes({\t\n\t\t\tpositions:positions,\n\t\t\tcoords:coords,\n\t\t\tnormals:finalNormals,\n\t\t\tindices:indices\n\t\t});\n\t\t\n\t}\n\n\t_generateMeshes(o) {\n\t\tconst maxNumVertices = 65535;\n\t\tconst hasNormals = o.normals.length > 0;\n\t\tconst hasUVs = o.coords.length > 0;\n\t\tlet mesh;\n\n\t\tif(o.positions.length > maxNumVertices) {\n\t\t\tconst meshes = [];\n\t\t\tlet lastIndex = 0;\n\n\t\t\tconst oCopy       = {};\n\t\t\toCopy.positions = o.positions.concat();\n\t\t\toCopy.coords    = o.coords.concat();\n\t\t\toCopy.indices   = o.indices.concat();\n\t\t\toCopy.normals   = o.normals.concat();\n\n\t\t\twhile(o.indices.length > 0) {\n\n\t\t\t\tconst sliceNum  = Math.min(maxNumVertices, o.positions.length);\n\t\t\t\tconst indices   = o.indices.splice(0, sliceNum);\n\t\t\t\tconst positions = [];\n\t\t\t\tconst coords    = [];\n\t\t\t\tconst normals   = [];\n\t\t\t\tlet index, tmpIndex = 0;\n\n\t\t\t\tfor(let i = 0; i < indices.length; i++) {\n\t\t\t\t\tif(indices[i] > tmpIndex) {\n\t\t\t\t\t\ttmpIndex = indices[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tindex = indices[i];\n\n\t\t\t\t\tpositions.push(oCopy.positions[index]);\n\t\t\t\t\tif(hasUVs) {\n\t\t\t\t\t\tcoords.push(oCopy.coords[index]);\t\n\t\t\t\t\t}\n\t\t\t\t\tif(hasNormals) {\n\t\t\t\t\t\tnormals.push(oCopy.normals[index]);\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tindices[i] -= lastIndex;\n\t\t\t\t}\n\n\t\t\t\tlastIndex = tmpIndex + 1;\n\n\t\t\t\tmesh = new Mesh(this._drawType);\n\t\t\t\tmesh.bufferVertex(positions);\n\t\t\t\tif(hasUVs) {\n\t\t\t\t\tmesh.bufferTexCoord(coords);\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tmesh.bufferIndex(indices);\n\t\t\t\tif(hasNormals) {\n\t\t\t\t\tmesh.bufferNormal(normals);\n\t\t\t\t}\n\n\t\t\t\tmeshes.push(mesh);\n\t\t\t}\n\n\t\t\tif(this._callback) {\n\t\t\t\tthis._callback(meshes, oCopy);\n\t\t\t}\n\n\t\t\treturn meshes;\n\t\t} else {\n\t\t\tmesh = new Mesh(this._drawType);\n\t\t\tmesh.bufferVertex(o.positions);\n\t\t\tif(hasUVs) {\n\t\t\t\tmesh.bufferTexCoord(o.coords);\t\n\t\t\t}\n\t\t\tmesh.bufferIndex(o.indices);\n\t\t\tif(hasNormals) {\n\t\t\t\tmesh.bufferNormal(o.normals);\n\t\t\t}\n\n\t\t\tif(this._callback) {\n\t\t\t\tthis._callback(mesh, o);\n\t\t\t}\n\n\t\t\treturn mesh;\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n}\n\n\nObjLoader.parse = function (objStr) {\n\tconst loader = new ObjLoader();\n\treturn loader.parseObj(objStr);\n};\n\nexport default ObjLoader;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/loaders/ObjLoader.js","// HDRLoader.js\n\n'use strict';\n\nimport BinaryLoader from './BinaryLoader';\nimport hdrParser from '../utils/HDRParser';\n\nclass HDRLoader extends BinaryLoader {\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n\tparse(mArrayBuffer) {\n\t\treturn hdrParser(mArrayBuffer);\n\t}\n\n\t_onLoaded() {\n\t\tconst o = this.parse(this._req.response);\n\t\tif(this._callback) {\n\t\t\tthis._callback(o);\n\t\t}\n\t}\n\n}\n\n\nHDRLoader.parse = function (mArrayBuffer) {\n\treturn hdrParser(mArrayBuffer);\n};\n\nexport default HDRLoader;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/loaders/HDRLoader.js","// HDRParser.js\n\n'use strict';\n\n// Code ported by Marcin Ignac (2014)\n// Based on Java implementation from\n// https://code.google.com/r/cys12345-research/source/browse/hdr/image_processor/RGBE.java?r=7d84e9fd866b24079dbe61fa0a966ce8365f5726\nconst radiancePattern = '#\\\\?RADIANCE';\nconst commentPattern = '#.*';\n// let gammaPattern = 'GAMMA=';\nconst exposurePattern = 'EXPOSURE=\\\\s*([0-9]*[.][0-9]*)';\nconst formatPattern = 'FORMAT=32-bit_rle_rgbe';\nconst widthHeightPattern = '-Y ([0-9]+) \\\\+X ([0-9]+)';\n\n// http://croquetweak.blogspot.co.uk/2014/08/deconstructing-floats-frexp-and-ldexp.html\n// function ldexp(mantissa, exponent) {\n//     return exponent > 1023 ? mantissa * Math.pow(2, 1023) * Math.pow(2, exponent - 1023) : exponent < -1074 ? mantissa * Math.pow(2, -1074) * Math.pow(2, exponent + 1074) : mantissa * Math.pow(2, exponent);\n// }\n\nfunction readPixelsRawRLE(buffer, data, offset, fileOffset, scanlineWidth, numScanlines) {\n\tconst rgbe = new Array(4);\n\tlet scanlineBuffer = null;\n\tlet ptr;\n\tlet ptrEnd;\n\tlet count;\n\tconst buf = new Array(2);\n\tconst bufferLength = buffer.length;\n\n\tfunction readBuf(buf) {\n\t\tlet bytesRead = 0;\n\t\tdo {\n\t\t\tbuf[bytesRead++] = buffer[fileOffset];\n\t\t} while(++fileOffset < bufferLength && bytesRead < buf.length);\n\t\treturn bytesRead;\n\t}\n\n\tfunction readBufOffset(buf, offset, length) {\n\t\tlet bytesRead = 0;\n\t\tdo {\n\t\t\tbuf[offset + bytesRead++] = buffer[fileOffset];\n\t\t} while(++fileOffset < bufferLength && bytesRead < length);\n\t\treturn bytesRead;\n\t}\n\n\tfunction readPixelsRaw(buffer, data, offset, numpixels) {\n\t\tconst numExpected = 4 * numpixels;\n\t\tconst numRead = readBufOffset(data, offset, numExpected);\n\t\tif (numRead < numExpected) {\n\t\t\tthrow new Error(`Error reading raw pixels: got ${numRead} bytes, expected ${numExpected}`);\n\t\t}\n\t}\n\n\twhile (numScanlines > 0) {\n\t\tif (readBuf(rgbe) < rgbe.length) {\n\t\t\tthrow new Error(`Error reading bytes: expected ${rgbe.length}`);\n\t\t}\n\n\t\tif ((rgbe[0] !== 2) || (rgbe[1] !== 2) || ((rgbe[2] & 0x80) !== 0)) {\n\t\t\t\t// this file is not run length encoded\n\t\t\tdata[offset++] = rgbe[0];\n\t\t\tdata[offset++] = rgbe[1];\n\t\t\tdata[offset++] = rgbe[2];\n\t\t\tdata[offset++] = rgbe[3];\n\t\t\treadPixelsRaw(buffer, data, offset, scanlineWidth * numScanlines - 1);\n\t\t\treturn;\n\t\t}\n\n\t\tif ((((rgbe[2] & 0xFF) << 8) | (rgbe[3] & 0xFF)) !== scanlineWidth) {\n\t\t\tthrow new Error(`Wrong scanline width ${(((rgbe[2] & 0xFF) << 8) | (rgbe[3] & 0xFF))}, expected ${scanlineWidth}`);\n\t\t}\n\n\t\tif (scanlineBuffer === null) {\n\t\t\tscanlineBuffer = new Array(4 * scanlineWidth);\n\t\t}\n\n\t\tptr = 0;\n\t\t/* read each of the four channels for the scanline into the buffer */\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tptrEnd = (i + 1) * scanlineWidth;\n\t\t\twhile(ptr < ptrEnd) {\n\t\t\t\tif (readBuf(buf) < buf.length) {\n\t\t\t\t\tthrow new Error('Error reading 2-byte buffer');\n\t\t\t\t}\n\t\t\t\tif ((buf[0] & 0xFF) > 128) {\n\t\t\t\t\t/* a run of the same value */\n\t\t\t\t\tcount = (buf[0] & 0xFF) - 128;\n\t\t\t\t\tif ((count === 0) || (count > ptrEnd - ptr)) {\n\t\t\t\t\t\tthrow new Error('Bad scanline data');\n\t\t\t\t\t}\n\t\t\t\t\twhile(count-- > 0) {\n\t\t\t\t\t\tscanlineBuffer[ptr++] = buf[1];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t/* a non-run */\n\t\t\t\t\tcount = buf[0] & 0xFF;\n\t\t\t\t\tif ((count === 0) || (count > ptrEnd - ptr)) {\n\t\t\t\t\t\tthrow new Error('Bad scanline data');\n\t\t\t\t\t}\n\t\t\t\t\tscanlineBuffer[ptr++] = buf[1];\n\t\t\t\t\tif (--count > 0) {\n\t\t\t\t\t\tif (readBufOffset(scanlineBuffer, ptr, count) < count) {\n\t\t\t\t\t\t\tthrow new Error('Error reading non-run data');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tptr += count;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/* copy byte data to output */\n\t\tfor(let i = 0; i < scanlineWidth; i++) {\n\t\t\tdata[offset + 0] = scanlineBuffer[i];\n\t\t\tdata[offset + 1] = scanlineBuffer[i + scanlineWidth];\n\t\t\tdata[offset + 2] = scanlineBuffer[i + 2 * scanlineWidth];\n\t\t\tdata[offset + 3] = scanlineBuffer[i + 3 * scanlineWidth];\n\t\t\toffset += 4;\n\t\t}\n\n\t\tnumScanlines--;\n\t}\n\n}\n\n// Returns data as floats and flipped along Y by default\nfunction parseHdr(buffer) {\n\tif (buffer instanceof ArrayBuffer) {\n\t\tbuffer = new Uint8Array(buffer);\n\t}\n\n\tlet fileOffset = 0;\n\tconst bufferLength = buffer.length;\n\n\tconst NEW_LINE = 10;\n\n\tfunction readLine() {\n\t\tlet buf = '';\n\t\tdo {\n\t\t\tconst b = buffer[fileOffset];\n\t\t\tif (b === NEW_LINE) {\n\t\t\t\t++fileOffset;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbuf += String.fromCharCode(b);\n\t\t} while(++fileOffset < bufferLength);\n\t\treturn buf;\n\t}\n\n\tlet width = 0;\n\tlet height = 0;\n\tlet exposure = 1;\n\tconst gamma = 1;\n\tlet rle = false;\n\n\tfor(let i = 0; i < 20; i++) {\n\t\tconst line = readLine();\n\t\tlet match;\n\t\tif (match = line.match(radiancePattern)) {\n\t\t} else if (match = line.match(formatPattern)) {\n\t\t\trle = true;\n\t\t} else if (match = line.match(exposurePattern)) {\n\t\t\texposure = Number(match[1]);\n\t\t} else if (match = line.match(commentPattern)) {\n\t\t} else if (match = line.match(widthHeightPattern)) {\n\t\t\theight = Number(match[1]);\n\t\t\twidth = Number(match[2]);\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (!rle) {\n\t\tthrow new Error('File is not run length encoded!');\n\t}\n\n\tconst data = new Uint8Array(width * height * 4);\n\tconst scanlineWidth = width;\n\tconst numScanlines = height;\n\n\treadPixelsRawRLE(buffer, data, 0, fileOffset, scanlineWidth, numScanlines);\n\n\t// TODO: Should be Float16\n\tconst floatData = new Float32Array(width * height * 4);\n\tfor(let offset = 0; offset < data.length; offset += 4) {\n\t\tlet r = data[offset + 0] / 255;\n\t\tlet g = data[offset + 1] / 255;\n\t\tlet b = data[offset + 2] / 255;\n\t\tconst e = data[offset + 3];\n\t\tconst f = Math.pow(2.0, e - 128.0);\n\n\t\tr *= f;\n\t\tg *= f;\n\t\tb *= f;\n\n\t\tconst floatOffset = offset;\n\n\t\tfloatData[floatOffset + 0] = r;\n\t\tfloatData[floatOffset + 1] = g;\n\t\tfloatData[floatOffset + 2] = b;\n\t\tfloatData[floatOffset + 3] = 1.0;\n\t}\n\n\treturn {\n\t\tshape: [width, height],\n\t\texposure: exposure,\n\t\tgamma: gamma,\n\t\tdata: floatData\n\t};\n}\n\n\nexport default parseHdr;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/utils/HDRParser.js","// ColladaParser.js\n\nimport parser from 'collada-parser';\nimport Mesh from '../Mesh';\n\n\nconst generateMesh = function (meshes) {\n\tconst caches = {};\n\n\tmeshes.forEach((mesh)=> {\n\t\tconst { vertices, normals, coords, triangles, name } = mesh.mesh;\n\t\tif(!caches[name]) {\n\t\t\tconst glMesh = new Mesh()\n\t\t\t.bufferFlattenData(vertices, 'aVertexPosition', 3)\n\t\t\t.bufferFlattenData(coords, 'aTextureCoord', 2)\n\t\t\t.bufferFlattenData(normals, 'aNormal', 3)\n\t\t\t.bufferIndex(triangles);\n\n\t\t\tcaches[name] = glMesh;\n\t\t}\n\n\t\tmesh.glMesh = caches[name];\n\t});\n};\n\nconst parse = function (mData) {\n\tconst meshes = parser.parse(mData);\n\tgenerateMesh(meshes);\n\n\treturn meshes;\n};\n\nconst load = function (mPath, mCallback) {\n\tparser.load(mPath, (meshes)=> {\n\t\tgenerateMesh(meshes);\n\t\tmCallback(meshes);\n\t});\n};\n\nconst ColladaParser = {\n\tparse,\n\tload\n};\n\n\nexport default ColladaParser;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/loaders/ColladaParser.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _Collada = require('./Collada');\n\nvar _Collada2 = _interopRequireDefault(_Collada);\n\nvar _glMatrix = require('gl-matrix');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// ColladaParser.js\n\nvar parseData = function parseData(mData) {\n\tvar materials = mData.materials,\n\t    meshes = mData.meshes;\n\n\n\tvar finalMeshes = [];\n\tvar meshObjs = [];\n\tvar allMeshes = [];\n\n\t//\tgetting all meshes' buffers\n\tfor (var s in meshes) {\n\t\tvar oMesh = meshes[s];\n\t\tvar vertices = oMesh.vertices,\n\t\t    normals = oMesh.normals,\n\t\t    coords = oMesh.coords,\n\t\t    triangles = oMesh.triangles;\n\n\t\tvar buffers = {\n\t\t\tvertices: vertices, normals: normals, coords: coords, triangles: triangles\n\t\t};\n\t\tallMeshes.push({\n\t\t\tid: s,\n\t\t\tbuffers: buffers\n\t\t});\n\t}\n\n\tfunction getMaterial(id) {\n\t\tvar mat = void 0;\n\t\tfor (var _s in materials) {\n\t\t\tif (_s === id) {\n\t\t\t\tmat = materials[_s];\n\t\t\t}\n\t\t}\n\n\t\tvar oMaterial = {};\n\t\tif (mat.diffuse) {\n\t\t\toMaterial.diffuseColor = mat.diffuse;\n\t\t}\n\n\t\toMaterial.diffuseColor = mat.diffuse || [0, 0, 0];\n\t\toMaterial.shininess = mat.shininess || 0;\n\t\tif (mat.textures) {\n\t\t\tif (mat.textures.diffuse) {\n\t\t\t\toMaterial.diffuseMapID = mat.textures.diffuse.map_id;\n\t\t\t}\n\n\t\t\tif (mat.textures.normal) {\n\t\t\t\toMaterial.normalMapID = mat.textures.normal.map_id;\n\t\t\t}\n\t\t}\n\n\t\treturn oMaterial;\n\t}\n\n\tfunction walk(node, mtxParent) {\n\t\tvar m = _glMatrix.mat4.create();\n\t\tif (node.model) {\n\t\t\t_glMatrix.mat4.multiply(m, mtxParent, node.model);\n\t\t} else {\n\t\t\t_glMatrix.mat4.copy(m, mtxParent);\n\t\t}\n\n\t\tif (node.children.length > 0) {\n\t\t\tnode.children.forEach(function (child) {\n\t\t\t\twalk(child, m);\n\t\t\t});\n\t\t}\n\n\t\tif (node.mesh) {\n\t\t\tvar _oMesh = {};\n\t\t\t_oMesh.modelMatrix = m;\n\t\t\t_oMesh.mesh = meshes[node.mesh];\n\t\t\t_oMesh.id = node.id;\n\t\t\t_oMesh.name = node.name;\n\t\t\t_oMesh.material = getMaterial(node.material);\n\t\t\tmeshObjs.push(_oMesh);\n\t\t}\n\t}\n\n\tvar mtx = _glMatrix.mat4.create();\n\twalk(mData.root, mtx);\n\n\treturn meshObjs;\n};\n\nvar parse = function parse(mFile) {\n\tvar o = _Collada2.default.parse(mFile);\n\treturn parseData(o);\n};\n\nvar load = function load(mPath, mCallBack) {\n\t_Collada2.default.load(mPath, function (mData) {\n\t\tmCallBack(parseData(mData));\n\t});\n};\n\nvar ColladaParser = {\n\tload: load,\n\tparse: parse\n};\n\nexports.default = ColladaParser;\nmodule.exports = exports['default'];\n//# sourceMappingURL=ColladaParser.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/collada-parser/lib/ColladaParser.js\n// module id = 62\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _glMatrix = require(\"gl-matrix\");\n\nvar isWorker = global.document === undefined; // Collada.js\n\nvar DEG2RAD = Math.PI * 2 / 360;\n\n//global temporal variables\nvar temp_mat4 = null;\nvar temp_vec2 = null;\nvar temp_vec3 = null;\nvar temp_vec4 = null;\nvar temp_quat = null;\n\nfunction request(url, callback) {\n\tvar req = new XMLHttpRequest();\n\treq.onload = function () {\n\t\tvar response = this.response;\n\t\tif (this.status != 200) return;\n\t\tif (callback) callback(this.response);\n\t};\n\treq.open(\"get\", url, true);\n\treq.send();\n}\n\nvar Collada = {\n\n\tlibsPath: \"./\",\n\tworkerPath: \"./\",\n\tno_flip: true,\n\tuse_transferables: true, //for workers\n\tonerror: null,\n\tverbose: false,\n\tconfig: { forceParser: false },\n\n\tinit: function init(config) {\n\t\tconfig = config || {};\n\t\tfor (var i in config) {\n\t\t\tthis[i] = config[i];\n\t\t}this.config = config;\n\n\t\tif (isWorker) {\n\t\t\ttry {\n\t\t\t\timportScripts(this.libsPath + \"gl-matrix-min.js\", this.libsPath + \"tinyxml.js\");\n\t\t\t} catch (err) {\n\t\t\t\tCollada.throwException(Collada.LIBMISSING_ERROR);\n\t\t\t}\n\t\t}\n\n\t\t//init glMatrix\n\t\ttemp_mat4 = _glMatrix.mat4.create();\n\t\ttemp_vec2 = vec3.create();\n\t\ttemp_vec3 = vec3.create();\n\t\ttemp_vec4 = vec3.create();\n\t\ttemp_quat = _glMatrix.quat.create();\n\n\t\tif (isWorker) console.log(\"Collada worker ready\");\n\t},\n\n\tload: function load(url, callback) {\n\t\trequest(url, function (data) {\n\t\t\tif (!data) callback(null);else callback(Collada.parse(data));\n\t\t});\n\t},\n\n\t_xmlroot: null,\n\t_nodes_by_id: null,\n\t_transferables: null,\n\t_controllers_found: null,\n\t_geometries_found: null,\n\n\tsafeString: function safeString(str) {\n\t\tif (!str) return \"\";\n\n\t\tif (this.convertID) return this.convertID(str);\n\n\t\treturn str.replace(/ /g, \"_\");\n\t},\n\n\tLIBMISSING_ERROR: \"Libraries loading error, when using workers remember to pass the URL to the tinyxml.js in the options.libsPath\",\n\tNOXMLPARSER_ERROR: \"TinyXML not found, when using workers remember to pass the URL to the tinyxml.js in the options.libsPath (Workers do not allow to access the native XML DOMParser)\",\n\tthrowException: function throwException(msg) {\n\t\tif (isWorker) self.postMessage({ action: \"exception\", msg: msg });else if (Collada.onerror) Collada.onerror(msg);\n\t\tthrow msg;\n\t},\n\n\tgetFilename: function getFilename(filename) {\n\t\tvar pos = filename.lastIndexOf(\"\\\\\");\n\t\tif (pos != -1) filename = filename.substr(pos + 1);\n\t\t//strip unix slashes\n\t\tpos = filename.lastIndexOf(\"/\");\n\t\tif (pos != -1) filename = filename.substr(pos + 1);\n\t\treturn filename;\n\t},\n\n\tlast_name: 0,\n\n\tgenerateName: function generateName(v) {\n\t\tv = v || \"name_\";\n\t\tvar name = v + this.last_name;\n\t\tthis.last_name++;\n\t\treturn name;\n\t},\n\n\tparse: function parse(data, options, filename) {\n\t\toptions = options || {};\n\t\tfilename = filename || \"_dae_\" + Date.now() + \".dae\";\n\n\t\t//console.log(\"Parsing collada\");\n\t\tvar flip = false;\n\n\t\tvar xmlparser = null;\n\t\tvar root = null;\n\t\tthis._transferables = [];\n\n\t\tif (this.verbose) console.log(\" - XML parsing...\");\n\n\t\tif (global[\"DOMParser\"] && !this.config.forceParser) {\n\t\t\txmlparser = new DOMParser();\n\t\t\troot = xmlparser.parseFromString(data, \"text/xml\");\n\t\t\tif (this.verbose) console.log(\" - XML parsed\");\n\t\t} else //USING JS XML PARSER IMPLEMENTATION (much slower)\n\t\t\t{\n\t\t\t\tif (!global[\"DOMImplementation\"]) return Collada.throwException(Collada.NOXMLPARSER_ERROR);\n\t\t\t\t//use tinyxmlparser\n\t\t\t\ttry {\n\t\t\t\t\txmlparser = new DOMImplementation();\n\t\t\t\t} catch (err) {\n\t\t\t\t\treturn Collada.throwException(Collada.NOXMLPARSER_ERROR);\n\t\t\t\t}\n\n\t\t\t\troot = xmlparser.loadXML(data);\n\t\t\t\tif (this.verbose) console.log(\" - XML parsed\");\n\n\t\t\t\t//for every node...\n\t\t\t\tvar by_ids = root._nodes_by_id = {};\n\t\t\t\tfor (var i = 0, l = root.all.length; i < l; ++i) {\n\t\t\t\t\tvar node = root.all[i];\n\t\t\t\t\tby_ids[node.id] = node;\n\t\t\t\t\tif (node.getAttribute(\"sid\")) by_ids[node.getAttribute(\"sid\")] = node;\n\t\t\t\t}\n\n\t\t\t\tif (!this.extra_functions) {\n\t\t\t\t\tthis.extra_functions = true;\n\t\t\t\t\t//these methods are missing so here is a lousy implementation\n\t\t\t\t\tDOMDocument.prototype.querySelector = DOMElement.prototype.querySelector = function (selector) {\n\t\t\t\t\t\tvar tags = selector.split(\" \");\n\t\t\t\t\t\tvar current_element = this;\n\n\t\t\t\t\t\twhile (tags.length) {\n\t\t\t\t\t\t\tvar current = tags.shift();\n\t\t\t\t\t\t\tvar tokens = current.split(\"#\");\n\t\t\t\t\t\t\tvar tagname = tokens[0];\n\t\t\t\t\t\t\tvar id = tokens[1];\n\t\t\t\t\t\t\tvar elements = tagname ? current_element.getElementsByTagName(tagname) : current_element.childNodes;\n\t\t\t\t\t\t\tif (!id) //no id filter\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (tags.length == 0) return elements.item(0);\n\t\t\t\t\t\t\t\t\tcurrent_element = elements.item(0);\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//has id? check for all to see if one matches the id\n\t\t\t\t\t\t\tfor (var i = 0; i < elements.length; i++) {\n\t\t\t\t\t\t\t\tif (elements.item(i).getAttribute(\"id\") == id) {\n\t\t\t\t\t\t\t\t\tif (tags.length == 0) return elements.item(i);\n\t\t\t\t\t\t\t\t\tcurrent_element = elements.item(i);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t};\n\n\t\t\t\t\tDOMDocument.prototype.querySelectorAll = DOMElement.prototype.querySelectorAll = function (selector) {\n\t\t\t\t\t\tvar tags = selector.split(\" \");\n\t\t\t\t\t\tif (tags.length == 1) return this.getElementsByTagName(selector);\n\n\t\t\t\t\t\tvar current_element = this;\n\t\t\t\t\t\tvar result = [];\n\n\t\t\t\t\t\tinner(this, tags);\n\n\t\t\t\t\t\tfunction inner(root, tags) {\n\t\t\t\t\t\t\tif (!tags) return;\n\n\t\t\t\t\t\t\tvar current = tags.shift();\n\t\t\t\t\t\t\tvar elements = root.getElementsByTagName(current);\n\t\t\t\t\t\t\tif (tags.length == 0) {\n\t\t\t\t\t\t\t\tfor (var i = 0; i < elements.length; i++) {\n\t\t\t\t\t\t\t\t\tresult.push(elements.item(i));\n\t\t\t\t\t\t\t\t}return;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tfor (var i = 0; i < elements.length; i++) {\n\t\t\t\t\t\t\t\tinner(elements.item(i), tags.concat());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar list = new DOMNodeList(this.documentElement);\n\t\t\t\t\t\tlist._nodes = result;\n\t\t\t\t\t\tlist.length = result.length;\n\n\t\t\t\t\t\treturn list;\n\t\t\t\t\t};\n\n\t\t\t\t\tObject.defineProperty(DOMElement.prototype, \"textContent\", {\n\t\t\t\t\t\tget: function get() {\n\t\t\t\t\t\t\tvar nodes = this.getChildNodes();\n\t\t\t\t\t\t\treturn nodes.item(0).toString();\n\t\t\t\t\t\t},\n\t\t\t\t\t\tset: function set() {}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\tthis._xmlroot = root;\n\t\tvar xmlcollada = root.querySelector(\"COLLADA\");\n\t\tif (xmlcollada) {\n\t\t\tthis._current_DAE_version = xmlcollada.getAttribute(\"version\");\n\t\t\tconsole.log(\"DAE Version:\" + this._current_DAE_version);\n\t\t}\n\n\t\t//var xmlvisual_scene = root.querySelector(\"visual_scene\");\n\t\tvar xmlvisual_scene = root.getElementsByTagName(\"visual_scene\").item(0);\n\t\tif (!xmlvisual_scene) throw \"visual_scene XML node not found in DAE\";\n\n\t\t//hack to avoid problems with bones with spaces in names\n\t\tthis._nodes_by_id = {}; //clear\n\t\tthis._controllers_found = {}; //we need to check what controllers had been found, in case we miss one at the end\n\t\tthis._geometries_found = {};\n\n\t\t//Create a scene tree\n\t\tvar scene = {\n\t\t\tobject_type: \"SceneTree\",\n\t\t\tlight: null,\n\t\t\tmaterials: {},\n\t\t\tmeshes: {},\n\t\t\tresources: {}, //used to store animation tracks\n\t\t\troot: { children: [] },\n\t\t\texternal_files: {} //store info about external files mentioned in this \n\t\t};\n\n\t\t//scene metadata (like author, tool, up vector, dates, etc)\n\t\tvar xmlasset = root.getElementsByTagName(\"asset\")[0];\n\t\tif (xmlasset) scene.metadata = this.readAsset(xmlasset);\n\n\t\t//parse nodes tree to extract names and ierarchy only\n\t\tvar xmlnodes = xmlvisual_scene.childNodes;\n\t\tfor (var i = 0; i < xmlnodes.length; i++) {\n\t\t\tif (xmlnodes.item(i).localName != \"node\") continue;\n\n\t\t\tvar node = this.readNodeTree(xmlnodes.item(i), scene, 0, flip);\n\t\t\tif (node) scene.root.children.push(node);\n\t\t}\n\n\t\t//parse nodes content (two steps so we have first all the scene tree info)\n\t\tfor (var i = 0; i < xmlnodes.length; i++) {\n\t\t\tif (xmlnodes.item(i).localName != \"node\") continue;\n\t\t\tthis.readNodeInfo(xmlnodes.item(i), scene, 0, flip);\n\t\t}\n\n\t\t//read remaining controllers (in some cases some controllers are not linked from the nodes or the geometries)\n\t\tthis.readLibraryControllers(scene);\n\n\t\t//read animations\n\t\tvar animations = this.readAnimations(root, scene);\n\t\tif (animations) {\n\t\t\tvar animations_name = \"#animations_\" + filename.substr(0, filename.indexOf(\".\"));\n\t\t\tscene.resources[animations_name] = animations;\n\t\t\tscene.root.animations = animations_name;\n\t\t}\n\n\t\t//read external files (images)\n\t\tscene.images = this.readImages(root);\n\n\t\t//clear memory\n\t\tthis._nodes_by_id = {};\n\t\tthis._controllers_found = {};\n\t\tthis._geometries_found = {};\n\t\tthis._xmlroot = null;\n\n\t\t//console.log(scene);\n\t\treturn scene;\n\t},\n\n\t/* Collect node ids, in case there is bones (with spaces in name) I need to know the nodenames in advance */\n\t/*\n readAllNodeNames: function(xmlnode)\n {\n \tvar node_id = this.safeString( xmlnode.getAttribute(\"id\") );\n \tif(node_id)\n \t\tthis._nodes_by_id[node_id] = true; //node found\n \t//nodes seem to have to possible ids, id and sid, I guess one is unique, the other user-defined\n \tvar node_sid = this.safeString( xmlnode.getAttribute(\"sid\") );\n \tif(node_sid)\n \t\tthis._nodes_by_id[node_sid] = true; //node found\n \n \tfor( var i = 0; i < xmlnode.childNodes.length; i++ )\n \t{\n \t\tvar xmlchild = xmlnode.childNodes.item(i);\n \t\t\t//children\n \t\tif(xmlchild.localName != \"node\")\n \t\t\tcontinue;\n \t\tthis.readAllNodeNames(xmlchild);\n \t}\n },\n \t*/\n\n\treadAsset: function readAsset(xmlasset) {\n\t\tvar metadata = {};\n\n\t\tfor (var i = 0; i < xmlasset.childNodes.length; i++) {\n\t\t\tvar xmlchild = xmlasset.childNodes.item(i);\n\t\t\tif (xmlchild.nodeType != 1) //not tag\n\t\t\t\tcontinue;\n\t\t\tswitch (xmlchild.localName) {\n\t\t\t\tcase \"contributor\":\n\t\t\t\t\tvar tool = xmlchild.querySelector(\"authoring_tool\");\n\t\t\t\t\tif (tool) metadata[\"authoring_tool\"] = tool.textContext;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"unit\":\n\t\t\t\t\tmetadata[\"unit\"] = xmlchild.getAttribute(\"name\");break;\n\t\t\t\tdefault:\n\t\t\t\t\tmetadata[xmlchild.localName] = xmlchild.textContent;break;\n\t\t\t}\n\t\t}\n\n\t\treturn metadata;\n\t},\n\n\treadNodeTree: function readNodeTree(xmlnode, scene, level, flip) {\n\t\tvar node_id = this.safeString(xmlnode.getAttribute(\"id\"));\n\t\tvar node_sid = this.safeString(xmlnode.getAttribute(\"sid\"));\n\n\t\tif (!node_id && !node_sid) return null;\n\n\t\t//here we create the node\n\t\tvar node = {\n\t\t\tid: node_sid || node_id,\n\t\t\tchildren: [],\n\t\t\t_depth: level\n\t\t};\n\n\t\tvar node_type = xmlnode.getAttribute(\"type\");\n\t\tif (node_type) node.type = node_type;\n\n\t\tvar node_name = xmlnode.getAttribute(\"name\");\n\t\tif (node_name) node.name = node_name;\n\t\tthis._nodes_by_id[node.id] = node;\n\t\tif (node_id) this._nodes_by_id[node_id] = node;\n\t\tif (node_sid) this._nodes_by_id[node_sid] = node;\n\n\t\t//transform\n\t\tnode.model = this.readTransform(xmlnode, level, flip);\n\n\t\t//node elements\n\t\tfor (var i = 0; i < xmlnode.childNodes.length; i++) {\n\t\t\tvar xmlchild = xmlnode.childNodes.item(i);\n\t\t\tif (xmlchild.nodeType != 1) //not tag\n\t\t\t\tcontinue;\n\n\t\t\t//children\n\t\t\tif (xmlchild.localName == \"node\") {\n\t\t\t\tvar child_node = this.readNodeTree(xmlchild, scene, level + 1, flip);\n\t\t\t\tif (child_node) node.children.push(child_node);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\treturn node;\n\t},\n\n\treadNodeInfo: function readNodeInfo(xmlnode, scene, level, flip, parent) {\n\t\tvar node_id = this.safeString(xmlnode.getAttribute(\"id\"));\n\t\tvar node_sid = this.safeString(xmlnode.getAttribute(\"sid\"));\n\n\t\t/*\n  if(!node_id && !node_sid)\n  {\n  \tconsole.warn(\"Collada: node without id, creating a random one\");\n  \tnode_id = this.generateName(\"node_\");\n  \treturn null;\n  }\n  */\n\n\t\tvar node;\n\t\tif (!node_id && !node_sid) {\n\t\t\t//if there is no id, then either all of this node's properties \n\t\t\t//should be assigned directly to its parent node, or the node doesn't\n\t\t\t//have a parent node, in which case its a light or something. \n\t\t\t//So we get the parent by its id, and if there is no parent, we return null\n\t\t\tif (parent) node = this._nodes_by_id[parent.id || parent.sid];else return null;\n\t\t} else node = this._nodes_by_id[node_id || node_sid];\n\n\t\tif (!node) {\n\t\t\tconsole.warn(\"Collada: Node not found by id: \" + (node_id || node_sid));\n\t\t\treturn null;\n\t\t}\n\n\t\t//node elements\n\t\tfor (var i = 0; i < xmlnode.childNodes.length; i++) {\n\t\t\tvar xmlchild = xmlnode.childNodes.item(i);\n\t\t\tif (xmlchild.nodeType != 1) //not tag\n\t\t\t\tcontinue;\n\n\t\t\t//children\n\t\t\tif (xmlchild.localName == \"node\") {\n\t\t\t\t//pass parent node in case child node is a 'dead' node (has no id or sid)\n\t\t\t\tthis.readNodeInfo(xmlchild, scene, level + 1, flip, xmlnode);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t//geometry\n\t\t\tif (xmlchild.localName == \"instance_geometry\") {\n\t\t\t\tvar url = xmlchild.getAttribute(\"url\");\n\t\t\t\tvar mesh_id = url.toString().substr(1);\n\t\t\t\tnode.mesh = mesh_id;\n\n\t\t\t\tif (!scene.meshes[url]) {\n\t\t\t\t\tvar mesh_data = this.readGeometry(url, flip);\n\t\t\t\t\tif (mesh_data) {\n\t\t\t\t\t\tmesh_data.name = mesh_id;\n\t\t\t\t\t\tscene.meshes[mesh_id] = mesh_data;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t//binded material\n\t\t\t\tvar xmlmaterials = xmlchild.querySelectorAll(\"instance_material\");\n\t\t\t\tif (xmlmaterials) {\n\t\t\t\t\tfor (var iMat = 0; iMat < xmlmaterials.length; ++iMat) {\n\t\t\t\t\t\tvar xmlmaterial = xmlmaterials.item(iMat);\n\t\t\t\t\t\tif (!xmlmaterial) {\n\t\t\t\t\t\t\tconsole.warn(\"instance_material not found: \" + i);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar matname = xmlmaterial.getAttribute(\"target\").toString().substr(1);\n\t\t\t\t\t\t//matname = matname.replace(/ /g,\"_\"); //names cannot have spaces\n\t\t\t\t\t\tif (!scene.materials[matname]) {\n\n\t\t\t\t\t\t\tvar material = this.readMaterial(matname);\n\t\t\t\t\t\t\tif (material) {\n\t\t\t\t\t\t\t\tmaterial.id = matname;\n\t\t\t\t\t\t\t\tscene.materials[material.id] = material;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (iMat == 0) node.material = matname;else {\n\t\t\t\t\t\t\tif (!node.materials) node.materials = [];\n\t\t\t\t\t\t\tnode.materials.push(matname);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//this node has a controller: skinning, morph targets or even multimaterial are controllers\n\t\t\t//warning: I detected that some nodes could have a controller but they are not referenced here.  ??\n\t\t\tif (xmlchild.localName == \"instance_controller\") {\n\t\t\t\tvar url = xmlchild.getAttribute(\"url\");\n\t\t\t\tvar xmlcontroller = this._xmlroot.querySelector(\"controller\" + url);\n\n\t\t\t\tif (xmlcontroller) {\n\n\t\t\t\t\tvar mesh_data = this.readController(xmlcontroller, flip, scene);\n\n\t\t\t\t\t//binded materials\n\t\t\t\t\tvar xmlbind_material = xmlchild.querySelector(\"bind_material\");\n\t\t\t\t\tif (xmlbind_material) {\n\t\t\t\t\t\t//removed readBindMaterials up here for consistency\n\t\t\t\t\t\tvar xmltechniques = xmlbind_material.querySelectorAll(\"technique_common\");\n\t\t\t\t\t\tfor (var iTec = 0; iTec < xmltechniques.length; iTec++) {\n\t\t\t\t\t\t\tvar xmltechnique = xmltechniques.item(iTec);\n\t\t\t\t\t\t\tvar xmlinstance_materials = xmltechnique.querySelectorAll(\"instance_material\");\n\t\t\t\t\t\t\tfor (var iMat = 0; iMat < xmlinstance_materials.length; iMat++) {\n\t\t\t\t\t\t\t\tvar xmlinstance_material = xmlinstance_materials.item(iMat);\n\t\t\t\t\t\t\t\tif (!xmlinstance_material) {\n\t\t\t\t\t\t\t\t\tconsole.warn(\"instance_material for controller not found: \" + xmlinstance_material);\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvar matname = xmlinstance_material.getAttribute(\"target\").toString().substr(1);\n\t\t\t\t\t\t\t\tif (!scene.materials[matname]) {\n\n\t\t\t\t\t\t\t\t\tvar material = this.readMaterial(matname);\n\t\t\t\t\t\t\t\t\tif (material) {\n\t\t\t\t\t\t\t\t\t\tmaterial.id = matname;\n\t\t\t\t\t\t\t\t\t\tscene.materials[material.id] = material;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (iMat == 0) node.material = matname;else {\n\t\t\t\t\t\t\t\t\tif (!node.materials) node.materials = [];\n\t\t\t\t\t\t\t\t\tnode.materials.push(matname);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (mesh_data) {\n\t\t\t\t\t\tvar mesh = mesh_data;\n\t\t\t\t\t\tif (mesh_data.type == \"morph\") {\n\t\t\t\t\t\t\tmesh = mesh_data.mesh;\n\t\t\t\t\t\t\tnode.morph_targets = mesh_data.morph_targets;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmesh.name = url.toString();\n\t\t\t\t\t\tnode.mesh = url.toString();\n\t\t\t\t\t\tscene.meshes[url] = mesh;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//light\n\t\t\tif (xmlchild.localName == \"instance_light\") {\n\t\t\t\tvar url = xmlchild.getAttribute(\"url\");\n\t\t\t\tthis.readLight(node, url);\n\t\t\t}\n\n\t\t\t//camera\n\t\t\tif (xmlchild.localName == \"instance_camera\") {\n\t\t\t\tvar url = xmlchild.getAttribute(\"url\");\n\t\t\t\tthis.readCamera(node, url);\n\t\t\t}\n\n\t\t\t//other possible tags?\n\t\t}\n\t},\n\n\t//if you want to rename some material names\n\tmaterial_translate_table: {\n\t\t/*\n  transparency: \"opacity\",\n  reflectivity: \"reflection_factor\",\n  specular: \"specular_factor\",\n  shininess: \"specular_gloss\",\n  emission: \"emissive\",\n  diffuse: \"color\"\n  */\n\t},\n\n\tlight_translate_table: {\n\n\t\tpoint: \"omni\",\n\t\tdirectional: \"directional\",\n\t\tspot: \"spot\"\n\t},\n\n\tcamera_translate_table: {\n\t\txfov: \"fov\",\n\t\taspect_ratio: \"aspect\",\n\t\tznear: \"near\",\n\t\tzfar: \"far\"\n\t},\n\n\t//used when id have spaces (regular selector do not support spaces)\n\tquerySelectorAndId: function querySelectorAndId(root, selector, id) {\n\t\tvar nodes = root.querySelectorAll(selector);\n\t\tfor (var i = 0; i < nodes.length; i++) {\n\t\t\tvar attr_id = nodes.item(i).getAttribute(\"id\");\n\t\t\tif (!attr_id) continue;\n\t\t\tattr_id = attr_id.toString();\n\t\t\tif (attr_id == id) return nodes.item(i);\n\t\t}\n\t\treturn null;\n\t},\n\n\t//returns the first element that matches a tag name, if not tagname is specified then the first tag element\n\tgetFirstChildElement: function getFirstChildElement(root, localName) {\n\t\tvar c = root.childNodes;\n\t\tfor (var i = 0; i < c.length; ++i) {\n\t\t\tvar item = c.item(i);\n\t\t\tif (item.localName && !localName || localName && localName == item.localName) return item;\n\t\t}\n\t\treturn null;\n\t},\n\n\treadMaterial: function readMaterial(url) {\n\t\tvar xmlmaterial = this.querySelectorAndId(this._xmlroot, \"library_materials material\", url);\n\n\t\tif (!xmlmaterial) return null;\n\n\t\t//get effect name\n\t\tvar xmleffect = xmlmaterial.querySelector(\"instance_effect\");\n\t\tif (!xmleffect) return null;\n\n\t\tvar effect_url = xmleffect.getAttribute(\"url\").substr(1);\n\n\t\t//get effect\n\t\tvar xmleffects = this.querySelectorAndId(this._xmlroot, \"library_effects effect\", effect_url);\n\n\t\tif (!xmleffects) return null;\n\n\t\t//get common\n\t\tvar xmltechnique = xmleffects.querySelector(\"technique\");\n\t\tif (!xmltechnique) return null;\n\n\t\t//get newparams and convert to js object\n\t\tvar xmlnewparams = xmleffects.querySelectorAll(\"newparam\");\n\t\tvar newparams = {};\n\t\tfor (var i = 0; i < xmlnewparams.length; i++) {\n\n\t\t\tvar init_from = xmlnewparams[i].querySelector(\"init_from\");\n\t\t\tvar parent;\n\t\t\tif (init_from) parent = init_from.innerHTML;else {\n\t\t\t\tvar source = xmlnewparams[i].querySelector(\"source\");\n\t\t\t\tparent = source.innerHTML;\n\t\t\t}\n\n\t\t\tnewparams[xmlnewparams[i].getAttribute(\"sid\")] = {\n\t\t\t\tparent: parent\n\t\t\t};\n\t\t}\n\n\t\tvar material = {};\n\n\t\t//read the images here because we need to access them to assign texture names\n\t\tvar images = this.readImages(this._xmlroot);\n\n\t\tvar xmlphong = xmltechnique.querySelector(\"phong\");\n\t\tif (!xmlphong) xmlphong = xmltechnique.querySelector(\"blinn\");\n\t\tif (!xmlphong) xmlphong = xmltechnique.querySelector(\"lambert\");\n\t\tif (!xmlphong) return null;\n\n\t\t//for every tag of properties\n\t\tfor (var i = 0; i < xmlphong.childNodes.length; ++i) {\n\t\t\tvar xmlparam = xmlphong.childNodes.item(i);\n\n\t\t\tif (!xmlparam.localName) //text tag\n\t\t\t\tcontinue;\n\n\t\t\t//translate name\n\t\t\tvar param_name = xmlparam.localName.toString();\n\t\t\tif (this.material_translate_table[param_name]) param_name = this.material_translate_table[param_name];\n\n\t\t\t//value\n\t\t\tvar xmlparam_value = this.getFirstChildElement(xmlparam);\n\t\t\tif (!xmlparam_value) continue;\n\n\t\t\tif (xmlparam_value.localName.toString() == \"color\") {\n\t\t\t\tvar value = this.readContentAsFloats(xmlparam_value);\n\t\t\t\tif (xmlparam.getAttribute(\"opaque\") == \"RGB_ZERO\") material[param_name] = value.subarray(0, 4);else material[param_name] = value.subarray(0, 3);\n\t\t\t\tcontinue;\n\t\t\t} else if (xmlparam_value.localName.toString() == \"float\") {\n\t\t\t\tmaterial[param_name] = this.readContentAsFloats(xmlparam_value)[0];\n\t\t\t\tcontinue;\n\t\t\t} else if (xmlparam_value.localName.toString() == \"texture\") {\n\t\t\t\tif (!material.textures) material.textures = {};\n\t\t\t\tvar map_id = xmlparam_value.getAttribute(\"texture\");\n\t\t\t\tif (!map_id) continue;\n\n\t\t\t\t// if map_id is not a filename, lets go and look for it.\n\t\t\t\tif (map_id.indexOf('.') === -1) {\n\t\t\t\t\t//check effect parents\n\t\t\t\t\tmap_id = this.getParentParam(newparams, map_id);\n\n\t\t\t\t\tif (images[map_id]) map_id = images[map_id].path;\n\t\t\t\t}\n\n\t\t\t\t//now get the texture filename from images\n\n\t\t\t\tvar map_info = { map_id: map_id };\n\t\t\t\tvar uvs = xmlparam_value.getAttribute(\"texcoord\");\n\t\t\t\tmap_info.uvs = uvs;\n\t\t\t\tmaterial.textures[param_name] = map_info;\n\t\t\t}\n\t\t}\n\n\t\tmaterial.object_type = \"Material\";\n\t\treturn material;\n\t},\n\n\tgetParentParam: function getParentParam(newparams, param) {\n\t\tif (!newparams[param]) return param;\n\n\t\tif (newparams[param].parent) return this.getParentParam(newparams, newparams[param].parent);else return param;\n\t},\n\n\treadLight: function readLight(node, url) {\n\t\tvar light = {};\n\n\t\tvar xmlnode = null;\n\n\t\tif (url.length > 1) //weird cases with id == #\n\t\t\txmlnode = this._xmlroot.querySelector(\"library_lights \" + url);else {\n\t\t\tvar xmlliblights = this._xmlroot.querySelector(\"library_lights\");\n\t\t\txmlnode = this.getFirstChildElement(xmlliblights, \"light\");\n\t\t}\n\n\t\tif (!xmlnode) return null;\n\n\t\t//pack\n\t\tvar children = [];\n\t\tvar xml = xmlnode.querySelector(\"technique_common\");\n\t\tif (xml) for (var i = 0; i < xml.childNodes.length; i++) {\n\t\t\tif (xml.childNodes.item(i).nodeType == 1) //tag\n\t\t\t\tchildren.push(xml.childNodes.item(i));\n\t\t}var xmls = xmlnode.querySelectorAll(\"technique\");\n\t\tfor (var i = 0; i < xmls.length; i++) {\n\t\t\tvar xml2 = xmls.item(i);\n\t\t\tfor (var j = 0; j < xml2.childNodes.length; j++) {\n\t\t\t\tif (xml2.childNodes.item(j).nodeType == 1) //tag\n\t\t\t\t\tchildren.push(xml2.childNodes.item(j));\n\t\t\t}\n\t\t}\n\n\t\t//get\n\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\tvar xml = children[i];\n\t\t\tswitch (xml.localName) {\n\t\t\t\tcase \"point\":\n\t\t\t\t\tlight.type = this.light_translate_table[xml.localName];\n\t\t\t\t\tparse_params(light, xml);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"directional\":\n\t\t\t\t\tlight.type = this.light_translate_table[xml.localName];\n\t\t\t\t\tparse_params(light, xml);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"spot\":\n\t\t\t\t\tlight.type = this.light_translate_table[xml.localName];\n\t\t\t\t\tparse_params(light, xml);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"intensity\":\n\t\t\t\t\tlight.intensity = this.readContentAsFloats(xml)[0];\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfunction parse_params(light, xml) {\n\t\t\tfor (var i = 0; i < xml.childNodes.length; i++) {\n\t\t\t\tvar child = xml.childNodes.item(i);\n\t\t\t\tif (!child || child.nodeType != 1) //tag\n\t\t\t\t\tcontinue;\n\n\t\t\t\tswitch (child.localName) {\n\t\t\t\t\tcase \"color\":\n\t\t\t\t\t\tlight.color = Collada.readContentAsFloats(child);break;\n\t\t\t\t\tcase \"falloff_angle\":\n\t\t\t\t\t\tlight.angle_end = Collada.readContentAsFloats(child)[0];\n\t\t\t\t\t\tlight.angle = light.angle_end - 10;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (node.model) {\n\t\t\t//light position is final column of model\n\t\t\tlight.position = [node.model[12], node.model[13], node.model[14]];\n\t\t\t//light forward vector is reverse of third column of model\n\t\t\tvar forward = [-node.model[8], -node.model[9], -node.model[10]];\n\t\t\t//so light target is position + forward\n\t\t\tlight.target = [light.position[0] + forward[0], light.position[1] + forward[1], light.position[2] + forward[2]];\n\t\t} else {\n\t\t\tconsole.warn(\"Could not read light position for light: \" + node.name + \". Setting defaults.\");\n\t\t\tlight.position = [0, 0, 0];\n\t\t\tlight.target = [0, -1, 0];\n\t\t}\n\n\t\tnode.light = light;\n\t},\n\n\treadCamera: function readCamera(node, url) {\n\t\tvar camera = {};\n\n\t\tvar xmlnode = this._xmlroot.querySelector(\"library_cameras \" + url);\n\t\tif (!xmlnode) return null;\n\n\t\t//pack\n\t\tvar children = [];\n\t\tvar xml = xmlnode.querySelector(\"technique_common\");\n\t\tif (xml) //grab all internal stuff\n\t\t\tfor (var i = 0; i < xml.childNodes.length; i++) {\n\t\t\t\tif (xml.childNodes.item(i).nodeType == 1) //tag\n\t\t\t\t\tchildren.push(xml.childNodes.item(i));\n\t\t\t} //\n\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\tvar tag = children[i];\n\t\t\tparse_params(camera, tag);\n\t\t}\n\n\t\tfunction parse_params(camera, xml) {\n\t\t\tfor (var i = 0; i < xml.childNodes.length; i++) {\n\t\t\t\tvar child = xml.childNodes.item(i);\n\t\t\t\tif (!child || child.nodeType != 1) //tag\n\t\t\t\t\tcontinue;\n\t\t\t\tvar translated = Collada.camera_translate_table[child.localName] || child.localName;\n\t\t\t\tcamera[translated] = parseFloat(child.textContent);\n\t\t\t}\n\t\t}\n\n\t\t//parse to convert yfov to standard (x) fov\n\t\tif (camera.yfov && !camera.fov) {\n\t\t\tif (camera.aspect) {\n\t\t\t\tcamera.fov = camera.yfov * camera.aspect;\n\t\t\t} else console.warn(\"Could not convert camera yfov to xfov because aspect ratio not set\");\n\t\t}\n\n\t\tnode.camera = camera;\n\t},\n\n\treadTransform: function readTransform(xmlnode, level, flip) {\n\t\t//identity\n\t\tvar matrix = _glMatrix.mat4.create();\n\t\tvar temp = _glMatrix.mat4.create();\n\t\tvar tmpq = _glMatrix.quat.create();\n\n\t\tvar flip_fix = false;\n\n\t\t//search for the matrix\n\t\tfor (var i = 0; i < xmlnode.childNodes.length; i++) {\n\t\t\tvar xml = xmlnode.childNodes.item(i);\n\t\t\tif (!xml || xml.nodeType != 1) //tag\n\t\t\t\tcontinue;\n\n\t\t\tif (xml.localName == \"matrix\") {\n\t\t\t\tvar matrix = this.readContentAsFloats(xml);\n\t\t\t\t//console.log(\"Nodename: \" + xmlnode.getAttribute(\"id\"));\n\t\t\t\t//console.log(matrix);\n\t\t\t\tthis.transformMatrix(matrix, level == 0);\n\t\t\t\t//console.log(matrix);\n\t\t\t\treturn matrix;\n\t\t\t}\n\n\t\t\tif (xml.localName == \"translate\") {\n\t\t\t\tvar values = this.readContentAsFloats(xml);\n\t\t\t\tif (flip && level > 0) {\n\t\t\t\t\tvar tmp = values[1];\n\t\t\t\t\tvalues[1] = values[2];\n\t\t\t\t\tvalues[2] = -tmp; //swap coords\n\t\t\t\t}\n\n\t\t\t\t_glMatrix.mat4.translate(matrix, matrix, values);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t//rotate\n\t\t\tif (xml.localName == \"rotate\") {\n\t\t\t\tvar values = this.readContentAsFloats(xml);\n\t\t\t\tif (values.length == 4) //x,y,z, angle\n\t\t\t\t\t{\n\t\t\t\t\t\tvar id = xml.getAttribute(\"sid\");\n\t\t\t\t\t\tif (id == \"jointOrientX\") {\n\t\t\t\t\t\t\tvalues[3] += 90;\n\t\t\t\t\t\t\tflip_fix = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//rotateX & rotateY & rotateZ done below\n\n\t\t\t\t\t\tif (flip) {\n\t\t\t\t\t\t\tvar tmp = values[1];\n\t\t\t\t\t\t\tvalues[1] = values[2];\n\t\t\t\t\t\t\tvalues[2] = -tmp; //swap coords\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (values[3] != 0.0) {\n\t\t\t\t\t\t\t_glMatrix.quat.setAxisAngle(tmpq, values.subarray(0, 3), values[3] * DEG2RAD);\n\t\t\t\t\t\t\t_glMatrix.mat4.fromQuat(temp, tmpq);\n\t\t\t\t\t\t\t_glMatrix.mat4.multiply(matrix, matrix, temp);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t//scale\n\t\t\tif (xml.localName == \"scale\") {\n\t\t\t\tvar values = this.readContentAsFloats(xml);\n\t\t\t\tif (flip) {\n\t\t\t\t\tvar tmp = values[1];\n\t\t\t\t\tvalues[1] = values[2];\n\t\t\t\t\tvalues[2] = -tmp; //swap coords\n\t\t\t\t}\n\t\t\t\t_glMatrix.mat4.scale(matrix, matrix, values);\n\t\t\t}\n\t\t}\n\n\t\treturn matrix;\n\t},\n\n\treadTransform2: function readTransform2(xmlnode, level, flip) {\n\t\t//identity\n\t\tvar matrix = _glMatrix.mat4.create();\n\t\tvar rotation = _glMatrix.quat.create();\n\t\tvar tmpmatrix = _glMatrix.mat4.create();\n\t\tvar tmpq = _glMatrix.quat.create();\n\t\tvar translate = vec3.create();\n\t\tvar scale = vec3.fromValues(1, 1, 1);\n\n\t\tvar flip_fix = false;\n\n\t\t//search for the matrix\n\t\tfor (var i = 0; i < xmlnode.childNodes.length; i++) {\n\t\t\tvar xml = xmlnode.childNodes.item(i);\n\n\t\t\tif (xml.localName == \"matrix\") {\n\t\t\t\tvar matrix = this.readContentAsFloats(xml);\n\t\t\t\t//console.log(\"Nodename: \" + xmlnode.getAttribute(\"id\"));\n\t\t\t\t//console.log(matrix);\n\t\t\t\tthis.transformMatrix(matrix, level == 0);\n\t\t\t\t//console.log(matrix);\n\t\t\t\treturn matrix;\n\t\t\t}\n\n\t\t\tif (xml.localName == \"translate\") {\n\t\t\t\tvar values = this.readContentAsFloats(xml);\n\t\t\t\ttranslate.set(values);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t//rotate\n\t\t\tif (xml.localName == \"rotate\") {\n\t\t\t\tvar values = this.readContentAsFloats(xml);\n\t\t\t\tif (values.length == 4) //x,y,z, angle\n\t\t\t\t\t{\n\t\t\t\t\t\tvar id = xml.getAttribute(\"sid\");\n\t\t\t\t\t\tif (id == \"jointOrientX\") {\n\t\t\t\t\t\t\tvalues[3] += 90;\n\t\t\t\t\t\t\tflip_fix = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//rotateX & rotateY & rotateZ done below\n\n\t\t\t\t\t\tif (flip) {\n\t\t\t\t\t\t\tvar tmp = values[1];\n\t\t\t\t\t\t\tvalues[1] = values[2];\n\t\t\t\t\t\t\tvalues[2] = -tmp; //swap coords\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (values[3] != 0.0) {\n\t\t\t\t\t\t\t_glMatrix.quat.setAxisAngle(tmpq, values.subarray(0, 3), values[3] * DEG2RAD);\n\t\t\t\t\t\t\t_glMatrix.quat.multiply(rotation, rotation, tmpq);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t//scale\n\t\t\tif (xml.localName == \"scale\") {\n\t\t\t\tvar values = this.readContentAsFloats(xml);\n\t\t\t\tif (flip) {\n\t\t\t\t\tvar tmp = values[1];\n\t\t\t\t\tvalues[1] = values[2];\n\t\t\t\t\tvalues[2] = -tmp; //swap coords\n\t\t\t\t}\n\t\t\t\tscale.set(values);\n\t\t\t}\n\t\t}\n\n\t\tif (flip && level > 0) {\n\t\t\tvar tmp = translate[1];\n\t\t\ttranslate[1] = translate[2];\n\t\t\ttranslate[2] = -tmp; //swap coords\n\t\t}\n\t\t_glMatrix.mat4.translate(matrix, matrix, translate);\n\n\t\t_glMatrix.mat4.fromQuat(tmpmatrix, rotation);\n\t\t//mat4.rotateX(tmpmatrix, tmpmatrix, Math.PI * 0.5);\n\t\t_glMatrix.mat4.multiply(matrix, matrix, tmpmatrix);\n\t\t_glMatrix.mat4.scale(matrix, matrix, scale);\n\n\t\treturn matrix;\n\t},\n\n\t//for help read this: https://www.khronos.org/collada/wiki/Using_accessors\n\treadGeometry: function readGeometry(id, flip, scene) {\n\t\t//already read, could happend if several controllers point to the same mesh\n\t\tif (this._geometries_found[id] !== undefined) return this._geometries_found[id];\n\n\t\t//var xmlgeometry = this._xmlroot.querySelector(\"geometry\" + id);\n\t\tvar xmlgeometry = this._xmlroot.getElementById(id.substr(1));\n\t\tif (!xmlgeometry) {\n\t\t\tconsole.warn(\"readGeometry: geometry not found: \" + id);\n\t\t\tthis._geometries_found[id] = null;\n\t\t\treturn null;\n\t\t}\n\n\t\t//if the geometry has morph targets then instead of storing it in a geometry, it is in a controller\n\t\tif (xmlgeometry.localName == \"controller\") {\n\t\t\tvar geometry = this.readController(xmlgeometry, flip, scene);\n\t\t\tthis._geometries_found[id] = geometry;\n\t\t\treturn geometry;\n\t\t}\n\n\t\tif (xmlgeometry.localName != \"geometry\") {\n\t\t\tconsole.warn(\"readGeometry: tag should be geometry, instead it was found: \" + xmlgeometry.localName);\n\t\t\tthis._geometries_found[id] = null;\n\t\t\treturn null;\n\t\t}\n\n\t\tvar xmlmesh = xmlgeometry.querySelector(\"mesh\");\n\t\tif (!xmlmesh) {\n\t\t\tconsole.warn(\"readGeometry: mesh not found in geometry: \" + id);\n\t\t\tthis._geometries_found[id] = null;\n\t\t\treturn null;\n\t\t}\n\n\t\t//get data sources\n\t\tvar sources = {};\n\t\tvar xmlsources = xmlmesh.querySelectorAll(\"source\");\n\t\tfor (var i = 0; i < xmlsources.length; i++) {\n\t\t\tvar xmlsource = xmlsources.item(i);\n\t\t\tif (!xmlsource.querySelector) continue;\n\t\t\tvar float_array = xmlsource.querySelector(\"float_array\");\n\t\t\tif (!float_array) continue;\n\t\t\tvar floats = this.readContentAsFloats(float_array);\n\n\t\t\tvar xmlaccessor = xmlsource.querySelector(\"accessor\");\n\t\t\tvar stride = parseInt(xmlaccessor.getAttribute(\"stride\"));\n\n\t\t\tsources[xmlsource.getAttribute(\"id\")] = { stride: stride, data: floats };\n\t\t}\n\n\t\t//get streams\n\t\tvar xmlvertices = xmlmesh.querySelector(\"vertices input\");\n\t\tvar vertices_source = sources[xmlvertices.getAttribute(\"source\").substr(1)];\n\t\tsources[xmlmesh.querySelector(\"vertices\").getAttribute(\"id\")] = vertices_source;\n\n\t\tvar mesh = null;\n\t\tvar xmlpolygons = xmlmesh.querySelector(\"polygons\");\n\t\tif (xmlpolygons) mesh = this.readTriangles(xmlpolygons, sources);\n\n\t\tif (!mesh) {\n\t\t\tvar xmltriangles = xmlmesh.querySelectorAll(\"triangles\");\n\t\t\tif (xmltriangles && xmltriangles.length) mesh = this.readTriangles(xmltriangles, sources);\n\t\t}\n\n\t\tif (!mesh) {\n\t\t\t//polylist = true;\n\t\t\t//var vcount = null;\n\t\t\t//var xmlvcount = xmlpolygons.querySelector(\"vcount\");\n\t\t\t//var vcount = this.readContentAsUInt32( xmlvcount );\n\t\t\tvar xmlpolylist = xmlmesh.querySelector(\"polylist\");\n\t\t\tif (xmlpolylist) mesh = this.readPolylist(xmlpolylist, sources);\n\t\t}\n\n\t\tif (!mesh) {\n\t\t\tvar xmllinestrip = xmlmesh.querySelector(\"linestrips\");\n\t\t\tif (xmllinestrip) mesh = this.readLineStrip(sources, xmllinestrip);\n\t\t}\n\n\t\tif (!mesh) {\n\t\t\tconsole.log(\"no polygons or triangles in mesh: \" + id);\n\t\t\tthis._geometries_found[id] = null;\n\t\t\treturn null;\n\t\t}\n\n\t\t//swap coords (X,Y,Z) -> (X,Z,-Y)\n\t\tif (flip && !this.no_flip) {\n\t\t\tvar tmp = 0;\n\t\t\tvar array = mesh.vertices;\n\t\t\tfor (var i = 0, l = array.length; i < l; i += 3) {\n\t\t\t\ttmp = array[i + 1];\n\t\t\t\tarray[i + 1] = array[i + 2];\n\t\t\t\tarray[i + 2] = -tmp;\n\t\t\t}\n\n\t\t\tarray = mesh.normals;\n\t\t\tfor (var i = 0, l = array.length; i < l; i += 3) {\n\t\t\t\ttmp = array[i + 1];\n\t\t\t\tarray[i + 1] = array[i + 2];\n\t\t\t\tarray[i + 2] = -tmp;\n\t\t\t}\n\t\t}\n\n\t\t//transferables for worker\n\t\tif (isWorker && this.use_transferables) {\n\t\t\tfor (var i in mesh) {\n\t\t\t\tvar data = mesh[i];\n\t\t\t\tif (data && data.buffer && data.length > 100) {\n\t\t\t\t\tthis._transferables.push(data.buffer);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//extra info\n\t\tmesh.filename = id;\n\t\tmesh.object_type = \"Mesh\";\n\n\t\tthis._geometries_found[id] = mesh;\n\t\treturn mesh;\n\t},\n\n\treadTriangles: function readTriangles(xmltriangles, sources) {\n\t\tvar use_indices = false;\n\n\t\tvar groups = [];\n\t\tvar buffers = [];\n\t\tvar last_index = 0;\n\t\tvar facemap = {};\n\t\tvar vertex_remap = []; //maps DAE vertex index to Mesh vertex index (because when meshes are triangulated indices are changed\n\t\tvar indicesArray = [];\n\t\tvar last_start = 0;\n\t\tvar group_name = \"\";\n\t\tvar material_name = \"\";\n\n\t\t//for every triangles set (warning, some times they are repeated...)\n\t\tfor (var tris = 0; tris < xmltriangles.length; tris++) {\n\t\t\tvar xml_shape_root = xmltriangles.item(tris);\n\t\t\tvar triangles = xml_shape_root.localName == \"triangles\";\n\n\t\t\tmaterial_name = xml_shape_root.getAttribute(\"material\");\n\n\t\t\t//for each buffer (input) build the structure info\n\t\t\tif (tris == 0) buffers = this.readShapeInputs(xml_shape_root, sources);\n\n\t\t\t//assuming buffers are ordered by offset\n\n\t\t\t//iterate data\n\t\t\tvar xmlps = xml_shape_root.querySelectorAll(\"p\");\n\t\t\tvar num_data_vertex = buffers.length; //one value per input buffer\n\n\t\t\t//for every polygon (could be one with all the indices, could be several, depends on the program)\n\t\t\tfor (var i = 0; i < xmlps.length; i++) {\n\t\t\t\tvar xmlp = xmlps.item(i);\n\t\t\t\tif (!xmlp || !xmlp.textContent) break;\n\n\t\t\t\tvar data = xmlp.textContent.trim().split(\" \");\n\n\t\t\t\t//used for triangulate polys\n\t\t\t\tvar first_index = -1;\n\t\t\t\tvar current_index = -1;\n\t\t\t\tvar prev_index = -1;\n\n\t\t\t\t//discomment to force 16bits indices\n\t\t\t\t//if(use_indices && last_index >= 256*256)\n\t\t\t\t//\tbreak;\n\n\t\t\t\tvar num_values_per_vertex = 1;\n\t\t\t\tfor (var b in buffers) {\n\t\t\t\t\tnum_values_per_vertex = Math.max(num_values_per_vertex, buffers[b][4] + 1);\n\t\t\t\t} //for every pack of indices in the polygon (vertex, normal, uv, ... )\n\t\t\t\tvar current_data_pos = 0;\n\t\t\t\tfor (var k = 0, l = data.length; k < l; k += num_values_per_vertex) {\n\t\t\t\t\tvar vertex_id = data.slice(k, k + num_values_per_vertex).join(\" \"); //generate unique id\n\n\t\t\t\t\tprev_index = current_index;\n\t\t\t\t\tif (facemap.hasOwnProperty(vertex_id)) //add to arrays, keep the index\n\t\t\t\t\t\tcurrent_index = facemap[vertex_id];else {\n\t\t\t\t\t\t//for every data buffer associated to this vertex\n\t\t\t\t\t\tfor (var j = 0; j < buffers.length; ++j) {\n\t\t\t\t\t\t\tvar buffer = buffers[j];\n\t\t\t\t\t\t\tvar array = buffer[1]; //array where we accumulate the final data as we extract if from sources\n\t\t\t\t\t\t\tvar source = buffer[3]; //where to read the data from\n\n\t\t\t\t\t\t\t//compute the index inside the data source array\n\t\t\t\t\t\t\t//var index = parseInt(data[k + j]);\n\t\t\t\t\t\t\tvar index = parseInt(data[k + buffer[4]]);\n\t\t\t\t\t\t\t//current_data_pos += buffer[4];\n\n\t\t\t\t\t\t\t//remember this index in case we need to remap\n\t\t\t\t\t\t\tif (j == 0) vertex_remap[array.length / buffer[2]] = index; //not sure if buffer[2], it should be number of floats per vertex (usually 3)\n\t\t\t\t\t\t\t//vertex_remap[ array.length / num_data_vertex ] = index;\n\n\t\t\t\t\t\t\t//compute the position inside the source buffer where the final data is located\n\t\t\t\t\t\t\tindex *= buffer[2]; //this works in most DAEs (not all)\n\t\t\t\t\t\t\t//index = index * buffer[2] + buffer[4]; //stride(2) offset(4)\n\t\t\t\t\t\t\t//index += buffer[4]; //stride(2) offset(4)\n\t\t\t\t\t\t\t//extract every value of this element and store it in its final array (every x,y,z, etc)\n\t\t\t\t\t\t\tfor (var x = 0; x < buffer[2]; ++x) {\n\t\t\t\t\t\t\t\tif (source[index + x] === undefined) throw \"UNDEFINED!\"; //DEBUG\n\t\t\t\t\t\t\t\tarray.push(source[index + x]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrent_index = last_index;\n\t\t\t\t\t\tlast_index += 1;\n\t\t\t\t\t\tfacemap[vertex_id] = current_index;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!triangles) //the xml element is not triangles? then split polygons in triangles\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (k == 0) first_index = current_index;\n\t\t\t\t\t\t\t//if(k > 2 * num_data_vertex) //not sure if use this or the next line, the next one works in some DAEs but not sure if it works in all\n\t\t\t\t\t\t\tif (k > 2) //triangulate polygons: ensure this works\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tindicesArray.push(first_index);\n\t\t\t\t\t\t\t\t\tindicesArray.push(prev_index);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\tindicesArray.push(current_index);\n\t\t\t\t} //per vertex\n\t\t\t} //per polygon\n\n\t\t\tvar group = {\n\t\t\t\tname: group_name || \"group\" + tris,\n\t\t\t\tstart: last_start,\n\t\t\t\tlength: indicesArray.length - last_start,\n\t\t\t\tmaterial: material_name || \"\"\n\t\t\t};\n\t\t\tlast_start = indicesArray.length;\n\t\t\tgroups.push(group);\n\t\t} //per triangles group\n\n\t\tvar mesh = {\n\t\t\tvertices: new Float32Array(buffers[0][1]),\n\t\t\tinfo: { groups: groups },\n\t\t\t_remap: new Uint32Array(vertex_remap)\n\t\t};\n\n\t\tthis.transformMeshInfo(mesh, buffers, indicesArray);\n\n\t\treturn mesh;\n\t},\n\n\treadPolylist: function readPolylist(xml_shape_root, sources) {\n\t\tvar use_indices = false;\n\n\t\tvar groups = [];\n\t\tvar buffers = [];\n\t\tvar last_index = 0;\n\t\tvar facemap = {};\n\t\tvar vertex_remap = [];\n\t\tvar indicesArray = [];\n\t\tvar last_start = 0;\n\t\tvar group_name = \"\";\n\t\tvar material_name = \"\";\n\n\t\tmaterial_name = xml_shape_root.getAttribute(\"material\");\n\t\tbuffers = this.readShapeInputs(xml_shape_root, sources);\n\n\t\tvar xmlvcount = xml_shape_root.querySelector(\"vcount\");\n\t\tvar vcount = this.readContentAsUInt32(xmlvcount);\n\n\t\tvar xmlp = xml_shape_root.querySelector(\"p\");\n\t\tvar data = this.readContentAsUInt32(xmlp);\n\n\t\tvar num_data_vertex = buffers.length;\n\n\t\tvar pos = 0;\n\t\tfor (var i = 0, l = vcount.length; i < l; ++i) {\n\t\t\tvar num_vertices = vcount[i];\n\n\t\t\tvar first_index = -1;\n\t\t\tvar current_index = -1;\n\t\t\tvar prev_index = -1;\n\n\t\t\t//iterate vertices of this polygon\n\t\t\tfor (var k = 0; k < num_vertices; ++k) {\n\t\t\t\tvar vertex_id = data.subarray(pos, pos + num_data_vertex).join(\" \");\n\n\t\t\t\tprev_index = current_index;\n\t\t\t\tif (facemap.hasOwnProperty(vertex_id)) //add to arrays, keep the index\n\t\t\t\t\tcurrent_index = facemap[vertex_id];else {\n\t\t\t\t\tfor (var j = 0; j < buffers.length; ++j) {\n\t\t\t\t\t\tvar buffer = buffers[j];\n\t\t\t\t\t\tvar index = parseInt(data[pos + j]); //p\n\t\t\t\t\t\tvar array = buffer[1]; //array with all the data\n\t\t\t\t\t\tvar source = buffer[3]; //where to read the data from\n\t\t\t\t\t\tif (j == 0) vertex_remap[array.length / num_data_vertex] = index;\n\t\t\t\t\t\tindex *= buffer[2]; //stride\n\t\t\t\t\t\tfor (var x = 0; x < buffer[2]; ++x) {\n\t\t\t\t\t\t\tarray.push(source[index + x]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrent_index = last_index;\n\t\t\t\t\tlast_index += 1;\n\t\t\t\t\tfacemap[vertex_id] = current_index;\n\t\t\t\t}\n\n\t\t\t\tif (num_vertices > 3) //split polygons then\n\t\t\t\t\t{\n\t\t\t\t\t\tif (k == 0) first_index = current_index;\n\t\t\t\t\t\t//if(k > 2 * num_data_vertex) //not sure if use this or the next line, the next one works in some DAEs but not sure if it works in all\n\t\t\t\t\t\tif (k > 2) //triangulate polygons: tested, this works\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tindicesArray.push(first_index);\n\t\t\t\t\t\t\t\tindicesArray.push(prev_index);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\tindicesArray.push(current_index);\n\t\t\t\tpos += num_data_vertex;\n\t\t\t} //per vertex\n\t\t} //per polygon\n\n\t\tvar mesh = {\n\t\t\tvertices: new Float32Array(buffers[0][1]),\n\t\t\tinfo: {},\n\t\t\t_remap: new Uint32Array(vertex_remap)\n\t\t};\n\n\t\tthis.transformMeshInfo(mesh, buffers, indicesArray);\n\n\t\treturn mesh;\n\t},\n\n\treadShapeInputs: function readShapeInputs(xml_shape_root, sources) {\n\t\tvar buffers = [];\n\n\t\tvar xmlinputs = xml_shape_root.querySelectorAll(\"input\");\n\t\tfor (var i = 0; i < xmlinputs.length; i++) {\n\t\t\tvar xmlinput = xmlinputs.item(i);\n\t\t\tif (!xmlinput.getAttribute) continue;\n\t\t\tvar semantic = xmlinput.getAttribute(\"semantic\").toUpperCase();\n\t\t\tvar stream_source = sources[xmlinput.getAttribute(\"source\").substr(1)];\n\t\t\tvar offset = parseInt(xmlinput.getAttribute(\"offset\"));\n\t\t\tvar data_set = 0;\n\t\t\tif (xmlinput.getAttribute(\"set\")) data_set = parseInt(xmlinput.getAttribute(\"set\"));\n\t\t\tbuffers.push([semantic, [], stream_source.stride, stream_source.data, offset, data_set]);\n\t\t}\n\n\t\treturn buffers;\n\t},\n\n\ttransformMeshInfo: function transformMeshInfo(mesh, buffers, indicesArray) {\n\t\t//rename buffers (DAE has other names)\n\t\tvar translator = {\n\t\t\t\"normal\": \"normals\",\n\t\t\t\"texcoord\": \"coords\"\n\t\t};\n\t\tfor (var i = 1; i < buffers.length; ++i) {\n\t\t\tvar name = buffers[i][0].toLowerCase();\n\t\t\tvar data = buffers[i][1];\n\t\t\tif (!data.length) continue;\n\n\t\t\tif (translator[name]) name = translator[name];\n\t\t\tif (mesh[name]) name = name + buffers[i][5];\n\t\t\tmesh[name] = new Float32Array(data); //are they always float32? I think so\n\t\t}\n\n\t\tif (indicesArray && indicesArray.length) {\n\t\t\tif (mesh.vertices.length > 256 * 256) mesh.triangles = new Uint32Array(indicesArray);else mesh.triangles = new Uint16Array(indicesArray);\n\t\t}\n\n\t\treturn mesh;\n\t},\n\n\treadLineStrip: function readLineStrip(sources, xmllinestrip) {\n\t\tvar use_indices = false;\n\n\t\tvar buffers = [];\n\t\tvar last_index = 0;\n\t\tvar facemap = {};\n\t\tvar vertex_remap = [];\n\t\tvar indicesArray = [];\n\t\tvar last_start = 0;\n\t\tvar group_name = \"\";\n\t\tvar material_name = \"\";\n\n\t\tvar tris = 0; //used in case there are several strips\n\n\t\t//for each buffer (input) build the structure info\n\t\tvar xmlinputs = xmllinestrip.querySelectorAll(\"input\");\n\t\tif (tris == 0) //first iteration, create buffers\n\t\t\tfor (var i = 0; i < xmlinputs.length; i++) {\n\t\t\t\tvar xmlinput = xmlinputs.item(i);\n\t\t\t\tif (!xmlinput.getAttribute) continue;\n\t\t\t\tvar semantic = xmlinput.getAttribute(\"semantic\").toUpperCase();\n\t\t\t\tvar stream_source = sources[xmlinput.getAttribute(\"source\").substr(1)];\n\t\t\t\tvar offset = parseInt(xmlinput.getAttribute(\"offset\"));\n\t\t\t\tvar data_set = 0;\n\t\t\t\tif (xmlinput.getAttribute(\"set\")) data_set = parseInt(xmlinput.getAttribute(\"set\"));\n\n\t\t\t\tbuffers.push([semantic, [], stream_source.stride, stream_source.data, offset, data_set]);\n\t\t\t}\n\t\t//assuming buffers are ordered by offset\n\n\t\t//iterate data\n\t\tvar xmlps = xmllinestrip.querySelectorAll(\"p\");\n\t\tvar num_data_vertex = buffers.length; //one value per input buffer\n\n\t\t//for every polygon (could be one with all the indices, could be several, depends on the program)\n\t\tfor (var i = 0; i < xmlps.length; i++) {\n\t\t\tvar xmlp = xmlps.item(i);\n\t\t\tif (!xmlp || !xmlp.textContent) break;\n\n\t\t\tvar data = xmlp.textContent.trim().split(\" \");\n\n\t\t\t//used for triangulate polys\n\t\t\tvar first_index = -1;\n\t\t\tvar current_index = -1;\n\t\t\tvar prev_index = -1;\n\n\t\t\t//if(use_indices && last_index >= 256*256)\n\t\t\t//\tbreak;\n\n\t\t\t//for every pack of indices in the polygon (vertex, normal, uv, ... )\n\t\t\tfor (var k = 0, l = data.length; k < l; k += num_data_vertex) {\n\t\t\t\tvar vertex_id = data.slice(k, k + num_data_vertex).join(\" \"); //generate unique id\n\n\t\t\t\tprev_index = current_index;\n\t\t\t\tif (facemap.hasOwnProperty(vertex_id)) //add to arrays, keep the index\n\t\t\t\t\tcurrent_index = facemap[vertex_id];else {\n\t\t\t\t\tfor (var j = 0; j < buffers.length; ++j) {\n\t\t\t\t\t\tvar buffer = buffers[j];\n\t\t\t\t\t\tvar index = parseInt(data[k + j]);\n\t\t\t\t\t\tvar array = buffer[1]; //array with all the data\n\t\t\t\t\t\tvar source = buffer[3]; //where to read the data from\n\t\t\t\t\t\tif (j == 0) vertex_remap[array.length / num_data_vertex] = index;\n\t\t\t\t\t\tindex *= buffer[2]; //stride\n\t\t\t\t\t\tfor (var x = 0; x < buffer[2]; ++x) {\n\t\t\t\t\t\t\tarray.push(source[index + x]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrent_index = last_index;\n\t\t\t\t\tlast_index += 1;\n\t\t\t\t\tfacemap[vertex_id] = current_index;\n\t\t\t\t}\n\n\t\t\t\tindicesArray.push(current_index);\n\t\t\t} //per vertex\n\t\t} //per polygon\n\n\t\tvar mesh = {\n\t\t\tprimitive: \"line_strip\",\n\t\t\tvertices: new Float32Array(buffers[0][1]),\n\t\t\tinfo: {}\n\t\t};\n\n\t\treturn this.transformMeshInfo(mesh, buffers, indicesArray);\n\t},\n\n\t//like querySelector but allows spaces in names because COLLADA allows space in names\n\tfindXMLNodeById: function findXMLNodeById(root, nodename, id) {\n\t\t//precomputed\n\t\tif (this._xmlroot._nodes_by_id) {\n\t\t\tvar n = this._xmlroot._nodes_by_id[id];\n\t\t\tif (n && n.localName == nodename) return n;\n\t\t} else //for the native parser\n\t\t\t{\n\t\t\t\tvar n = this._xmlroot.getElementById(id);\n\t\t\t\tif (n) return n;\n\t\t\t}\n\n\t\t//recursive: slow\n\t\tvar childs = root.childNodes;\n\t\tfor (var i = 0; i < childs.length; ++i) {\n\t\t\tvar xmlnode = childs.item(i);\n\t\t\tif (xmlnode.nodeType != 1) //no tag\n\t\t\t\tcontinue;\n\t\t\tif (xmlnode.localName != nodename) continue;\n\t\t\tvar node_id = xmlnode.getAttribute(\"id\");\n\t\t\tif (node_id == id) return xmlnode;\n\t\t}\n\t\treturn null;\n\t},\n\n\treadImages: function readImages(root) {\n\t\tvar xmlimages = root.querySelector(\"library_images\");\n\t\tif (!xmlimages) return null;\n\n\t\tvar images = {};\n\n\t\tvar xmlimages_childs = xmlimages.childNodes;\n\t\tfor (var i = 0; i < xmlimages_childs.length; ++i) {\n\t\t\tvar xmlimage = xmlimages_childs.item(i);\n\t\t\tif (xmlimage.nodeType != 1) //no tag\n\t\t\t\tcontinue;\n\n\t\t\tvar xmlinitfrom = xmlimage.querySelector(\"init_from\");\n\t\t\tif (!xmlinitfrom) continue;\n\t\t\tif (xmlinitfrom.textContent) {\n\t\t\t\tvar filename = this.getFilename(xmlinitfrom.textContent);\n\t\t\t\tvar id = xmlimage.getAttribute(\"id\");\n\t\t\t\timages[id] = { filename: filename, map: id, name: xmlimage.getAttribute(\"name\"), path: xmlinitfrom.textContent };\n\t\t\t}\n\t\t}\n\n\t\treturn images;\n\t},\n\n\treadAnimations: function readAnimations(root, scene) {\n\t\tvar xmlanimations = root.querySelector(\"library_animations\");\n\t\tif (!xmlanimations) return null;\n\n\t\tvar xmlanimation_childs = xmlanimations.childNodes;\n\n\t\tvar animations = {\n\t\t\tobject_type: \"Animation\",\n\t\t\ttakes: {}\n\t\t};\n\n\t\tvar default_take = { tracks: [] };\n\t\tvar tracks = default_take.tracks;\n\n\t\tfor (var i = 0; i < xmlanimation_childs.length; ++i) {\n\t\t\tvar xmlanimation = xmlanimation_childs.item(i);\n\t\t\tif (xmlanimation.nodeType != 1 || xmlanimation.localName != \"animation\") //no tag\n\t\t\t\tcontinue;\n\n\t\t\tvar anim_id = xmlanimation.getAttribute(\"id\");\n\t\t\tif (!anim_id) //nested animation (DAE 1.5)\n\t\t\t\t{\n\t\t\t\t\tvar xmlanimation2_childs = xmlanimation.querySelectorAll(\"animation\");\n\t\t\t\t\tif (xmlanimation2_childs.length) {\n\t\t\t\t\t\tfor (var j = 0; j < xmlanimation2_childs.length; ++j) {\n\t\t\t\t\t\t\tvar xmlanimation2 = xmlanimation2_childs.item(j);\n\t\t\t\t\t\t\tthis.readAnimation(xmlanimation2, tracks);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else //source tracks?\n\t\t\t\t\t\tthis.readAnimation(xmlanimation, tracks);\n\t\t\t\t} else //no nested (DAE 1.4)\n\t\t\t\tthis.readAnimation(xmlanimation, tracks);\n\t\t}\n\n\t\tif (!tracks.length) return null; //empty animation\n\n\t\t//compute animation duration\n\t\tvar max_time = 0;\n\t\tfor (var i = 0; i < tracks.length; ++i) {\n\t\t\tif (max_time < tracks[i].duration) max_time = tracks[i].duration;\n\t\t}default_take.name = \"default\";\n\t\tdefault_take.duration = max_time;\n\t\tanimations.takes[default_take.name] = default_take;\n\t\treturn animations;\n\t},\n\n\t//animation xml\n\treadAnimation: function readAnimation(xmlanimation, result) {\n\t\tif (xmlanimation.localName != \"animation\") return null;\n\n\t\t//this could be missing when there are lots of anims packed in one <animation>\n\t\tvar anim_id = xmlanimation.getAttribute(\"id\");\n\n\t\t//channels are like animated properties\n\t\tvar xmlchannel_list = xmlanimation.querySelectorAll(\"channel\");\n\t\tif (!xmlchannel_list.length) return null;\n\n\t\tvar tracks = result || [];\n\n\t\tfor (var i = 0; i < xmlchannel_list.length; ++i) {\n\t\t\tvar anim = this.readChannel(xmlchannel_list.item(i), xmlanimation);\n\t\t\tif (anim) tracks.push(anim);\n\t\t}\n\n\t\treturn tracks;\n\t},\n\n\treadChannel: function readChannel(xmlchannel, xmlanimation) {\n\t\tif (xmlchannel.localName != \"channel\" || xmlanimation.localName != \"animation\") return null;\n\n\t\tvar source = xmlchannel.getAttribute(\"source\");\n\t\tvar target = xmlchannel.getAttribute(\"target\");\n\n\t\t//sampler, is in charge of the interpolation\n\t\t//var xmlsampler = xmlanimation.querySelector(\"sampler\" + source);\n\t\tvar xmlsampler = this.findXMLNodeById(xmlanimation, \"sampler\", source.substr(1));\n\t\tif (!xmlsampler) {\n\t\t\tconsole.error(\"Error DAE: Sampler not found in \" + source);\n\t\t\treturn null;\n\t\t}\n\n\t\tvar inputs = {};\n\t\tvar params = {};\n\t\tvar sources = {};\n\t\tvar xmlinputs = xmlsampler.querySelectorAll(\"input\");\n\n\t\tvar time_data = null;\n\n\t\t//iterate inputs: collada separates the keyframe info in independent streams, like time, interpolation method, value )\n\t\tfor (var j = 0; j < xmlinputs.length; j++) {\n\t\t\tvar xmlinput = xmlinputs.item(j);\n\t\t\tvar source_name = xmlinput.getAttribute(\"source\");\n\n\t\t\t//there are three \n\t\t\tvar semantic = xmlinput.getAttribute(\"semantic\");\n\n\t\t\t//Search for source\n\t\t\tvar xmlsource = this.findXMLNodeById(xmlanimation, \"source\", source_name.substr(1));\n\t\t\tif (!xmlsource) continue;\n\n\t\t\tvar xmlparam = xmlsource.querySelector(\"param\");\n\t\t\tif (!xmlparam) continue;\n\n\t\t\tvar type = xmlparam.getAttribute(\"type\");\n\t\t\tinputs[semantic] = { source: source_name, type: type };\n\n\t\t\tvar data_array = null;\n\n\t\t\tif (type == \"float\" || type == \"float4x4\") {\n\t\t\t\tvar xmlfloatarray = xmlsource.querySelector(\"float_array\");\n\t\t\t\tvar floats = this.readContentAsFloats(xmlfloatarray);\n\t\t\t\tsources[source_name] = floats;\n\t\t\t\tdata_array = floats;\n\t\t\t} else //only floats and matrices are supported in animation\n\t\t\t\tcontinue;\n\n\t\t\tvar param_name = xmlparam.getAttribute(\"name\");\n\t\t\tif (param_name == \"TIME\") time_data = data_array;\n\t\t\tif (semantic == \"OUTPUT\") param_name = semantic;\n\t\t\tif (param_name) params[param_name] = type;else console.warn(\"Collada: <param> without name attribute in <animation>\");\n\t\t}\n\n\t\tif (!time_data) {\n\t\t\tconsole.error(\"Error DAE: no TIME info found in <channel>: \" + xmlchannel.getAttribute(\"source\"));\n\t\t\treturn null;\n\t\t}\n\n\t\t//construct animation\n\t\tvar path = target.split(\"/\");\n\n\t\tvar anim = {};\n\t\tvar nodename = path[0]; //safeString ?\n\t\tvar node = this._nodes_by_id[nodename];\n\t\tvar locator = node.id + \"/\" + path[1];\n\t\t//anim.nodename = this.safeString( path[0] ); //where it goes\n\t\tanim.name = path[1];\n\t\tanim.property = locator;\n\t\tvar type = \"number\";\n\t\tvar element_size = 1;\n\t\tvar param_type = params[\"OUTPUT\"];\n\t\tswitch (param_type) {\n\t\t\tcase \"float\":\n\t\t\t\telement_size = 1;break;\n\t\t\tcase \"float3x3\":\n\t\t\t\telement_size = 9;type = \"mat3\";break;\n\t\t\tcase \"float4x4\":\n\t\t\t\telement_size = 16;type = \"mat4\";break;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tanim.type = type;\n\t\tanim.value_size = element_size;\n\t\tanim.duration = time_data[time_data.length - 1]; //last sample\n\n\t\tvar value_data = sources[inputs[\"OUTPUT\"].source];\n\t\tif (!value_data) return null;\n\n\t\t//Pack data ****************\n\t\tvar num_samples = time_data.length;\n\t\tvar sample_size = element_size + 1;\n\t\tvar anim_data = new Float32Array(num_samples * sample_size);\n\t\t//for every sample\n\t\tfor (var j = 0; j < time_data.length; ++j) {\n\t\t\tanim_data[j * sample_size] = time_data[j]; //set time\n\t\t\tvar value = value_data.subarray(j * element_size, (j + 1) * element_size);\n\t\t\tif (param_type == \"float4x4\") {\n\t\t\t\tthis.transformMatrix(value, node ? node._depth == 0 : 0);\n\t\t\t\t//mat4.transpose(value, value);\n\t\t\t}\n\t\t\tanim_data.set(value, j * sample_size + 1); //set data\n\t\t}\n\n\t\tif (isWorker && this.use_transferables) {\n\t\t\tvar data = anim_data;\n\t\t\tif (data && data.buffer && data.length > 100) this._transferables.push(data.buffer);\n\t\t}\n\n\t\tanim.data = anim_data;\n\t\treturn anim;\n\t},\n\n\tfindNode: function findNode(root, id) {\n\t\tif (root.id == id) return root;\n\t\tif (root.children) for (var i in root.children) {\n\t\t\tvar ret = this.findNode(root.children[i], id);\n\t\t\tif (ret) return ret;\n\t\t}\n\t\treturn null;\n\t},\n\n\t//reads controllers and stores them in \n\treadLibraryControllers: function readLibraryControllers(scene) {\n\t\tvar xmllibrarycontrollers = this._xmlroot.querySelector(\"library_controllers\");\n\t\tif (!xmllibrarycontrollers) return null;\n\n\t\tvar xmllibrarycontrollers_childs = xmllibrarycontrollers.childNodes;\n\n\t\tfor (var i = 0; i < xmllibrarycontrollers_childs.length; ++i) {\n\t\t\tvar xmlcontroller = xmllibrarycontrollers_childs.item(i);\n\t\t\tif (xmlcontroller.nodeType != 1 || xmlcontroller.localName != \"controller\") //no tag\n\t\t\t\tcontinue;\n\t\t\tvar id = xmlcontroller.getAttribute(\"id\");\n\t\t\t//we have already processed this controller\n\t\t\tif (this._controllers_found[id]) continue;\n\n\t\t\t//read it (we wont use the returns, we will get it from this._controllers_found\n\t\t\tthis.readController(xmlcontroller, null, scene);\n\t\t}\n\t},\n\n\t//used for skinning and morphing\n\treadController: function readController(xmlcontroller, flip, scene) {\n\t\tif (!xmlcontroller.localName == \"controller\") {\n\t\t\tconsole.warn(\"readController: not a controller: \" + xmlcontroller.localName);\n\t\t\treturn null;\n\t\t}\n\n\t\tvar id = xmlcontroller.getAttribute(\"id\");\n\t\t//use cached\n\t\tif (this._controllers_found[id]) return this._controllers_found[id];\n\n\t\t//AGUILA\n\t\t//TODO: does this work?\n\t\t// if (this._controllers_found[ id ])\n\t\t// \treturn this._controllers_found[ id ];\n\n\t\tvar use_indices = false;\n\t\tvar mesh = null;\n\t\tvar xmlskin = xmlcontroller.querySelector(\"skin\");\n\t\tif (xmlskin) {\n\t\t\tmesh = this.readSkinController(xmlskin, flip, scene);\n\t\t}\n\n\t\tvar xmlmorph = xmlcontroller.querySelector(\"morph\");\n\t\tif (xmlmorph) mesh = this.readMorphController(xmlmorph, flip, scene, mesh);\n\n\t\t//cache and return\n\t\tif (this._controllers_found[id]) {\n\t\t\tid += \"_1blah\"; //??? this doesnt do anything\n\t\t} else this._controllers_found[id] = mesh;\n\n\t\treturn mesh;\n\t},\n\n\t//read this to more info about DAE and skinning https://collada.org/mediawiki/index.php/Skinning\n\treadSkinController: function readSkinController(xmlskin, flip, scene) {\n\t\t//base geometry\n\t\tvar id_geometry = xmlskin.getAttribute(\"source\");\n\n\t\tvar mesh = this.readGeometry(id_geometry, flip, scene);\n\t\tif (!mesh) return null;\n\n\t\tvar sources = this.readSources(xmlskin, flip);\n\t\tif (!sources) return null;\n\n\t\t//matrix\n\t\tvar bind_matrix = null;\n\t\tvar xmlbindmatrix = xmlskin.querySelector(\"bind_shape_matrix\");\n\t\tif (xmlbindmatrix) {\n\t\t\tbind_matrix = this.readContentAsFloats(xmlbindmatrix);\n\t\t\tthis.transformMatrix(bind_matrix, true, true);\n\t\t} else bind_matrix = _glMatrix.mat4.create(); //identity\n\n\t\t//joints\n\t\tvar joints = [];\n\t\tvar xmljoints = xmlskin.querySelector(\"joints\");\n\t\tif (xmljoints) {\n\t\t\tvar joints_source = null; //which bones\n\t\t\tvar inv_bind_source = null; //bind matrices\n\t\t\tvar xmlinputs = xmljoints.querySelectorAll(\"input\");\n\t\t\tfor (var i = 0; i < xmlinputs.length; i++) {\n\t\t\t\tvar xmlinput = xmlinputs[i];\n\t\t\t\tvar sem = xmlinput.getAttribute(\"semantic\").toUpperCase();\n\t\t\t\tvar src = xmlinput.getAttribute(\"source\");\n\t\t\t\tvar source = sources[src.substr(1)];\n\t\t\t\tif (sem == \"JOINT\") joints_source = source;else if (sem == \"INV_BIND_MATRIX\") inv_bind_source = source;\n\t\t\t}\n\n\t\t\t//save bone names and inv matrix\n\t\t\tif (!inv_bind_source || !joints_source) {\n\t\t\t\tconsole.error(\"Error DAE: no joints or inv_bind sources found\");\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tfor (var i in joints_source) {\n\t\t\t\t//get the inverse of the bind pose\n\t\t\t\tvar inv_mat = inv_bind_source.subarray(i * 16, i * 16 + 16);\n\t\t\t\tvar nodename = joints_source[i];\n\t\t\t\tvar node = this._nodes_by_id[nodename];\n\t\t\t\tif (!node) {\n\t\t\t\t\tconsole.warn(\"Node \" + nodename + \" not found\");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthis.transformMatrix(inv_mat, node._depth == 0, true);\n\t\t\t\tjoints.push([nodename, inv_mat]);\n\t\t\t}\n\t\t}\n\n\t\t//weights\n\t\tvar xmlvertexweights = xmlskin.querySelector(\"vertex_weights\");\n\t\tif (xmlvertexweights) {\n\n\t\t\t//here we see the order \n\t\t\tvar weights_indexed_array = null;\n\t\t\tvar xmlinputs = xmlvertexweights.querySelectorAll(\"input\");\n\t\t\tfor (var i = 0; i < xmlinputs.length; i++) {\n\t\t\t\tif (xmlinputs[i].getAttribute(\"semantic\").toUpperCase() == \"WEIGHT\") weights_indexed_array = sources[xmlinputs.item(i).getAttribute(\"source\").substr(1)];\n\t\t\t}\n\n\t\t\tif (!weights_indexed_array) throw \"no weights found\";\n\n\t\t\tvar xmlvcount = xmlvertexweights.querySelector(\"vcount\");\n\t\t\tvar vcount = this.readContentAsUInt32(xmlvcount);\n\n\t\t\tvar xmlv = xmlvertexweights.querySelector(\"v\");\n\t\t\tvar v = this.readContentAsUInt32(xmlv);\n\n\t\t\tvar num_vertices = mesh.vertices.length / 3; //3 components per vertex\n\t\t\tvar weights_array = new Float32Array(4 * num_vertices); //4 bones per vertex\n\t\t\tvar bone_index_array = new Uint8Array(4 * num_vertices); //4 bones per vertex\n\n\t\t\tvar pos = 0;\n\t\t\tvar remap = mesh._remap;\n\t\t\tvar max_bone = 0; //max bone affected\n\n\t\t\tfor (var i = 0, l = vcount.length; i < l; ++i) {\n\t\t\t\tvar num_bones = vcount[i]; //num bones influencing this vertex\n\n\t\t\t\t//find 4 with more influence\n\t\t\t\t//var v_tuplets = v.subarray(offset, offset + num_bones*2);\n\n\t\t\t\tvar offset = pos;\n\t\t\t\tvar b = bone_index_array.subarray(i * 4, i * 4 + 4);\n\t\t\t\tvar w = weights_array.subarray(i * 4, i * 4 + 4);\n\n\t\t\t\tvar sum = 0;\n\t\t\t\tfor (var j = 0; j < num_bones && j < 4; ++j) {\n\t\t\t\t\tb[j] = v[offset + j * 2];\n\t\t\t\t\tif (b[j] > max_bone) max_bone = b[j];\n\n\t\t\t\t\tw[j] = weights_indexed_array[v[offset + j * 2 + 1]];\n\t\t\t\t\tsum += w[j];\n\t\t\t\t}\n\n\t\t\t\t//normalize weights\n\t\t\t\tif (num_bones > 4 && sum < 1.0) {\n\t\t\t\t\tvar inv_sum = 1 / sum;\n\t\t\t\t\tfor (var j = 0; j < 4; ++j) {\n\t\t\t\t\t\tw[j] *= inv_sum;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tpos += num_bones * 2;\n\t\t\t}\n\n\t\t\t//remap: because vertices order is now changed after parsing the mesh\n\t\t\tvar final_weights = new Float32Array(4 * num_vertices); //4 bones per vertex\n\t\t\tvar final_bone_indices = new Uint8Array(4 * num_vertices); //4 bones per vertex\n\t\t\tvar used_joints = [];\n\n\t\t\t//for every vertex in the mesh, process bone indices and weights\n\t\t\tfor (var i = 0; i < num_vertices; ++i) {\n\t\t\t\tvar p = remap[i] * 4;\n\t\t\t\tvar w = weights_array.subarray(p, p + 4);\n\t\t\t\tvar b = bone_index_array.subarray(p, p + 4);\n\n\t\t\t\t//sort by weight so relevant ones goes first\n\t\t\t\tfor (var k = 0; k < 3; ++k) {\n\t\t\t\t\tvar max_pos = k;\n\t\t\t\t\tvar max_value = w[k];\n\t\t\t\t\tfor (var j = k + 1; j < 4; ++j) {\n\t\t\t\t\t\tif (w[j] <= max_value) continue;\n\t\t\t\t\t\tmax_pos = j;\n\t\t\t\t\t\tmax_value = w[j];\n\t\t\t\t\t}\n\t\t\t\t\tif (max_pos != k) {\n\t\t\t\t\t\tvar tmp = w[k];\n\t\t\t\t\t\tw[k] = w[max_pos];\n\t\t\t\t\t\tw[max_pos] = tmp;\n\t\t\t\t\t\ttmp = b[k];\n\t\t\t\t\t\tb[k] = b[max_pos];\n\t\t\t\t\t\tb[max_pos] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t//store\n\t\t\t\tfinal_weights.set(w, i * 4);\n\t\t\t\tfinal_bone_indices.set(b, i * 4);\n\n\t\t\t\t//mark bones used\n\t\t\t\tif (w[0]) used_joints[b[0]] = true;\n\t\t\t\tif (w[1]) used_joints[b[1]] = true;\n\t\t\t\tif (w[2]) used_joints[b[2]] = true;\n\t\t\t\tif (w[3]) used_joints[b[3]] = true;\n\t\t\t}\n\n\t\t\tif (max_bone >= joints.length) console.warn(\"Mesh uses higher bone index than bones found\");\n\n\t\t\t//trim unused bones (collada could give you 100 bones for an object that only uses a fraction of them)\n\t\t\tif (1) {\n\t\t\t\tvar new_bones = [];\n\t\t\t\tvar bones_translation = {};\n\t\t\t\tfor (var i = 0; i < used_joints.length; ++i) {\n\t\t\t\t\tif (used_joints[i]) {\n\t\t\t\t\t\tbones_translation[i] = new_bones.length;\n\t\t\t\t\t\tnew_bones.push(joints[i]);\n\t\t\t\t\t}\n\t\t\t\t} //in case there are less bones in use...\n\t\t\t\tif (new_bones.length < joints.length) {\n\t\t\t\t\t//remap\n\t\t\t\t\tfor (var i = 0; i < final_bone_indices.length; i++) {\n\t\t\t\t\t\tfinal_bone_indices[i] = bones_translation[final_bone_indices[i]];\n\t\t\t\t\t}joints = new_bones;\n\t\t\t\t}\n\t\t\t\t//console.log(\"Bones: \", joints.length, \" used:\", num_used_joints );\n\t\t\t}\n\n\t\t\t//console.log(\"Bones: \", joints.length, \"Max bone: \", max_bone);\n\n\t\t\tmesh.weights = final_weights;\n\t\t\tmesh.bone_indices = final_bone_indices;\n\t\t\tmesh.bones = joints;\n\t\t\tmesh.bind_matrix = bind_matrix;\n\n\t\t\t//delete mesh[\"_remap\"];\n\t\t}\n\n\t\treturn mesh;\n\t},\n\n\t//NOT TESTED\n\treadMorphController: function readMorphController(xmlmorph, flip, scene, mesh) {\n\t\tvar id_geometry = xmlmorph.getAttribute(\"source\");\n\t\tvar base_mesh = this.readGeometry(id_geometry, flip, scene);\n\t\tif (!base_mesh) return null;\n\n\t\t//read sources with blend shapes info (which ones, and the weight)\n\t\tvar sources = this.readSources(xmlmorph, flip);\n\n\t\tvar morphs = [];\n\n\t\t//targets\n\t\tvar xmltargets = xmlmorph.querySelector(\"targets\");\n\t\tif (!xmltargets) return null;\n\n\t\tvar xmlinputs = xmltargets.querySelectorAll(\"input\");\n\t\tvar targets = null;\n\t\tvar weights = null;\n\n\t\tfor (var i = 0; i < xmlinputs.length; i++) {\n\t\t\tvar xmlinput = xmlinputs.item(i);\n\t\t\tvar semantic = xmlinput.getAttribute(\"semantic\").toUpperCase();\n\t\t\tvar data = sources[xmlinput.getAttribute(\"source\").substr(1)];\n\t\t\tif (semantic == \"MORPH_TARGET\") targets = data;else if (semantic == \"MORPH_WEIGHT\") weights = data;\n\t\t}\n\n\t\tif (!targets || !weights) {\n\t\t\tconsole.warn(\"Morph controller without targets or weights. Skipping it.\");\n\t\t\treturn null;\n\t\t}\n\n\t\t//get targets\n\t\tfor (var i in targets) {\n\t\t\tvar id = \"#\" + targets[i];\n\t\t\tvar geometry = this.readGeometry(id, flip, scene);\n\t\t\tscene.meshes[id] = geometry;\n\t\t\tmorphs.push({ mesh: id, weight: weights[i] });\n\t\t}\n\n\t\tbase_mesh.morph_targets = morphs;\n\t\treturn base_mesh;\n\t},\n\n\treadBindMaterials: function readBindMaterials(xmlbind_material, mesh) {\n\t\tvar materials = [];\n\n\t\tvar xmltechniques = xmlbind_material.querySelectorAll(\"technique_common\");\n\t\tfor (var i = 0; i < xmltechniques.length; i++) {\n\t\t\tvar xmltechnique = xmltechniques.item(i);\n\t\t\tvar xmlinstance_materials = xmltechnique.querySelectorAll(\"instance_material\");\n\t\t\tfor (var j = 0; j < xmlinstance_materials.length; j++) {\n\t\t\t\tvar xmlinstance_material = xmlinstance_materials.item(j);\n\t\t\t\tif (xmlinstance_material) materials.push(xmlinstance_material.getAttribute(\"symbol\"));\n\t\t\t}\n\t\t}\n\n\t\treturn materials;\n\t},\n\n\treadSources: function readSources(xmlnode, flip) {\n\t\t//for data sources\n\t\tvar sources = {};\n\t\tvar xmlsources = xmlnode.querySelectorAll(\"source\");\n\t\tfor (var i = 0; i < xmlsources.length; i++) {\n\t\t\tvar xmlsource = xmlsources.item(i);\n\t\t\tif (!xmlsource.querySelector) //??\n\t\t\t\tcontinue;\n\n\t\t\tvar float_array = xmlsource.querySelector(\"float_array\");\n\t\t\tif (float_array) {\n\t\t\t\tvar floats = this.readContentAsFloats(xmlsource);\n\t\t\t\tsources[xmlsource.getAttribute(\"id\")] = floats;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar name_array = xmlsource.querySelector(\"Name_array\");\n\t\t\tif (name_array) {\n\t\t\t\tvar names = this.readContentAsStringsArray(name_array);\n\t\t\t\tif (!names) continue;\n\t\t\t\tsources[xmlsource.getAttribute(\"id\")] = names;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar ref_array = xmlsource.querySelector(\"IDREF_array\");\n\t\t\tif (ref_array) {\n\t\t\t\tvar names = this.readContentAsStringsArray(ref_array);\n\t\t\t\tif (!names) continue;\n\t\t\t\tsources[xmlsource.getAttribute(\"id\")] = names;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\treturn sources;\n\t},\n\n\treadContentAsUInt32: function readContentAsUInt32(xmlnode) {\n\t\tif (!xmlnode) return null;\n\t\tvar text = xmlnode.textContent;\n\t\ttext = text.replace(/\\n/gi, \" \"); //remove line breaks\n\t\ttext = text.trim(); //remove empty spaces\n\t\tif (text.length == 0) return null;\n\t\tvar numbers = text.split(\" \"); //create array\n\t\tvar floats = new Uint32Array(numbers.length);\n\t\tfor (var k = 0; k < numbers.length; k++) {\n\t\t\tfloats[k] = parseInt(numbers[k]);\n\t\t}return floats;\n\t},\n\n\treadContentAsFloats: function readContentAsFloats(xmlnode) {\n\t\tif (!xmlnode) return null;\n\t\tvar text = xmlnode.textContent;\n\t\ttext = text.replace(/\\n/gi, \" \"); //remove line breaks\n\t\ttext = text.replace(/\\s\\s+/gi, \" \");\n\t\ttext = text.replace(/\\t/gi, \"\");\n\t\ttext = text.trim(); //remove empty spaces\n\t\tvar numbers = text.split(\" \"); //create array\n\t\tvar count = xmlnode.getAttribute(\"count\");\n\t\tvar length = count ? parseInt(count) : numbers.length;\n\t\tvar floats = new Float32Array(length);\n\t\tfor (var k = 0; k < numbers.length; k++) {\n\t\t\tfloats[k] = parseFloat(numbers[k]);\n\t\t}return floats;\n\t},\n\n\treadContentAsStringsArray: function readContentAsStringsArray(xmlnode) {\n\t\tif (!xmlnode) return null;\n\t\tvar text = xmlnode.textContent;\n\t\ttext = text.replace(/\\n/gi, \" \"); //remove line breaks\n\t\ttext = text.replace(/\\s\\s/gi, \" \");\n\t\ttext = text.trim(); //remove empty spaces\n\t\tvar words = text.split(\" \"); //create array\n\t\tfor (var k = 0; k < words.length; k++) {\n\t\t\twords[k] = words[k].trim();\n\t\t}if (xmlnode.getAttribute(\"count\") && parseInt(xmlnode.getAttribute(\"count\")) != words.length) {\n\t\t\tvar merged_words = [];\n\t\t\tvar name = \"\";\n\t\t\tfor (var i in words) {\n\t\t\t\tif (!name) name = words[i];else name += \" \" + words[i];\n\t\t\t\tif (!this._nodes_by_id[this.safeString(name)]) continue;\n\t\t\t\tmerged_words.push(this.safeString(name));\n\t\t\t\tname = \"\";\n\t\t\t}\n\n\t\t\tvar count = parseInt(xmlnode.getAttribute(\"count\"));\n\t\t\tif (merged_words.length == count) return merged_words;\n\n\t\t\tconsole.error(\"Error: bone names have spaces, avoid using spaces in names\");\n\t\t\treturn null;\n\t\t}\n\t\treturn words;\n\t},\n\n\tmax3d_matrix_0: new Float32Array([0, -1, 0, 0, 0, 0, -1, 0, 1, 0, 0, -0, 0, 0, 0, 1]),\n\t//max3d_matrix_other: new Float32Array([0, -1, 0, 0, 0, 0, -1, 0, 1, 0, 0, -0, 0, 0, 0, 1]),\n\n\ttransformMatrix: function transformMatrix(matrix, first_level, inverted) {\n\t\t_glMatrix.mat4.transpose(matrix, matrix);\n\n\t\tif (this.no_flip) return matrix;\n\n\t\t//WARNING: DO NOT CHANGE THIS FUNCTION, THE SKY WILL FALL\n\t\tif (first_level) {\n\n\t\t\t//flip row two and tree\n\t\t\tvar temp = new Float32Array(matrix.subarray(4, 8)); //swap rows\n\t\t\tmatrix.set(matrix.subarray(8, 12), 4);\n\t\t\tmatrix.set(temp, 8);\n\n\t\t\t//reverse Z\n\t\t\ttemp = matrix.subarray(8, 12);\n\t\t\tvec4.scale(temp, temp, -1);\n\t\t} else {\n\t\t\tvar M = _glMatrix.mat4.create();\n\t\t\tvar m = matrix;\n\n\t\t\t//if(inverted) mat4.invert(m,m);\n\n\t\t\t/* non trasposed\n   M.set([m[0],m[8],-m[4]], 0);\n   M.set([m[2],m[10],-m[6]], 4);\n   M.set([-m[1],-m[9],m[5]], 8);\n   M.set([m[3],m[11],-m[7]], 12);\n   */\n\n\t\t\tM.set([m[0], m[2], -m[1]], 0);\n\t\t\tM.set([m[8], m[10], -m[9]], 4);\n\t\t\tM.set([-m[4], -m[6], m[5]], 8);\n\t\t\tM.set([m[12], m[14], -m[13]], 12);\n\n\t\t\tm.set(M);\n\n\t\t\t//if(inverted) mat4.invert(m,m);\n\t\t}\n\t\treturn matrix;\n\t}\n};\n\nexports.default = Collada;\nmodule.exports = exports['default'];\n//# sourceMappingURL=Collada.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/collada-parser/lib/Collada.js\n// module id = 63\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 64\n// module chunks = 0","// EffectComposer.js\n\nimport Pass from './Pass';\nimport GL from '../GLTool';\nimport Geom from '../Geom';\nimport FrameBuffer from '../FrameBuffer';\n\nclass EffectComposer {\n\tconstructor(mWidth, mHeight, mParmas = {}) {\n\t\tthis._width = mWidth || GL.width;\n\t\tthis._height = mHeight || GL.height;\n\n\t\tthis._params = {};\n\t\tthis.setSize(mWidth, mHeight);\n\t\tthis._mesh = Geom.bigTriangle();\n\t\tthis._passes = [];\n\t\tthis._returnTexture;\n\t}\n\n\n\taddPass(pass) {\n\t\tif(pass.passes) {\n\t\t\tthis.addPass(pass.passes);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (pass.length) {\n\t\t\tfor(let i = 0; i < pass.length; i++) {\n\t\t\t\tthis._passes.push(pass[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._passes.push(pass);\n\t\t}\n\t}\n\n\trender(mSource) {\n\t\tlet source = mSource;\n\t\tlet fboTarget;\n\n\t\tthis._passes.forEach((pass) => {\n\n\t\t\t//\tget target\n\t\t\tif(pass.hasFbo) {\n\t\t\t\tfboTarget = pass.fbo;\n\t\t\t} else {\n\t\t\t\tfboTarget = this._fboTarget;\n\t\t\t}\n\n\t\t\t//\trender\n\t\t\tfboTarget.bind();\n\t\t\tGL.clear(0, 0, 0, 0);\n\t\t\tpass.render(source);\n\t\t\tGL.draw(this._mesh);\n\t\t\tfboTarget.unbind();\n\n\t\t\t//\treset source\n\t\t\tif(pass.hasFbo) {\n\t\t\t\tsource = pass.fbo.getTexture();\n\t\t\t} else {\n\t\t\t\tthis._swap();\t\n\t\t\t\tsource = this._fboCurrent.getTexture();\n\t\t\t}\n\t\t});\n\n\t\tthis._returnTexture = source;\n\n\t\treturn source;\n\t}\n\n\n\t_swap() {\n\t\tconst tmp = this._fboCurrent;\n\t\tthis._fboCurrent = this._fboTarget;\n\t\tthis._fboTarget = tmp;\n\n\t\tthis._current = this._fboCurrent;\n\t\tthis._target = this._fboTarget;\n\t}\n\n\tsetSize(mWidth, mHeight) {\n\t\tthis._width = mWidth;\n\t\tthis._height = mHeight;\n\t\tthis._fboCurrent = new FrameBuffer(this._width, this._height, this._params);\n\t\tthis._fboTarget = new FrameBuffer(this._width, this._height, this._params);\n\t}\n\n\tget passes() {\n\t\treturn this._passes;\n\t}\n\n\tgetTexture() {\n\t\treturn this._returnTexture;\n\t}\n}\n\nexport default EffectComposer;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/post/EffectComposer.js","// PassBlur.js\n\nimport PassVBlur from './PassVBlur';\nimport PassHBlur from './PassHBlur';\nimport PassMacro from './PassMacro';\n\nclass PassBlur extends PassMacro {\n\tconstructor(mQuality = 9, mWidth, mHeight, mParams) {\n\t\tsuper();\n\t\tconst vBlur = new PassVBlur(mQuality, mWidth, mHeight, mParams);\n\t\tconst hBlur = new PassHBlur(mQuality, mWidth, mHeight, mParams);\n\n\t\tthis.addPass(vBlur);\n\t\tthis.addPass(hBlur);\n\t}\n}\n\nexport default PassBlur;\n\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/post/PassBlur.js","module.exports = \"// blur5.frag\\n// source  : https://github.com/Jam3/glsl-fast-gaussian-blur\\n\\n#define SHADER_NAME BLUR_5\\n\\nprecision highp float;\\n#define GLSLIFY 1\\nvarying vec2 vTextureCoord;\\nuniform sampler2D texture;\\nuniform vec2 uDirection;\\nuniform vec2 uResolution;\\n\\nvec4 blur5(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\\n\\tvec4 color = vec4(0.0);\\n\\tvec2 off1 = vec2(1.3333333333333333) * direction;\\n\\tcolor += texture2D(image, uv) * 0.29411764705882354;\\n\\tcolor += texture2D(image, uv + (off1 / resolution)) * 0.35294117647058826;\\n\\tcolor += texture2D(image, uv - (off1 / resolution)) * 0.35294117647058826;\\n\\treturn color; \\n}\\n\\n\\nvoid main(void) {\\n    gl_FragColor = blur5(texture, vTextureCoord, uResolution, uDirection);\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/alfrid/shaders/blur5.frag\n// module id = 67\n// module chunks = 0","module.exports = \"// blur9.frag\\n// source  : https://github.com/Jam3/glsl-fast-gaussian-blur\\n\\n#define SHADER_NAME BLUR_9\\n\\nprecision highp float;\\n#define GLSLIFY 1\\nvarying vec2 vTextureCoord;\\nuniform sampler2D texture;\\nuniform vec2 uDirection;\\nuniform vec2 uResolution;\\n\\nvec4 blur9(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\\n\\tvec4 color = vec4(0.0);\\n\\tvec2 off1 = vec2(1.3846153846) * direction;\\n\\tvec2 off2 = vec2(3.2307692308) * direction;\\n\\tcolor += texture2D(image, uv) * 0.2270270270;\\n\\tcolor += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\\n\\tcolor += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\\n\\tcolor += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\\n\\tcolor += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\\n\\treturn color;\\n}\\n\\n\\nvoid main(void) {\\n    gl_FragColor = blur9(texture, vTextureCoord, uResolution, uDirection);\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/alfrid/shaders/blur9.frag\n// module id = 68\n// module chunks = 0","module.exports = \"// blur13.frag\\n// source  : https://github.com/Jam3/glsl-fast-gaussian-blur\\n\\n#define SHADER_NAME BLUR_13\\n\\nprecision highp float;\\n#define GLSLIFY 1\\nvarying vec2 vTextureCoord;\\nuniform sampler2D texture;\\nuniform vec2 uDirection;\\nuniform vec2 uResolution;\\n\\nvec4 blur13(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\\n\\tvec4 color = vec4(0.0);\\n\\tvec2 off1 = vec2(1.411764705882353) * direction;\\n\\tvec2 off2 = vec2(3.2941176470588234) * direction;\\n\\tvec2 off3 = vec2(5.176470588235294) * direction;\\n\\tcolor += texture2D(image, uv) * 0.1964825501511404;\\n\\tcolor += texture2D(image, uv + (off1 / resolution)) * 0.2969069646728344;\\n\\tcolor += texture2D(image, uv - (off1 / resolution)) * 0.2969069646728344;\\n\\tcolor += texture2D(image, uv + (off2 / resolution)) * 0.09447039785044732;\\n\\tcolor += texture2D(image, uv - (off2 / resolution)) * 0.09447039785044732;\\n\\tcolor += texture2D(image, uv + (off3 / resolution)) * 0.010381362401148057;\\n\\tcolor += texture2D(image, uv - (off3 / resolution)) * 0.010381362401148057;\\n\\treturn color;\\n}\\n\\n\\nvoid main(void) {\\n    gl_FragColor = blur13(texture, vTextureCoord, uResolution, uDirection);\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/alfrid/shaders/blur13.frag\n// module id = 69\n// module chunks = 0","// PassFxaa.js\n\nimport GL from '../GLTool';\nimport Pass from './Pass';\nimport fsFxaa from '../shaders/fxaa.frag';\n\nclass PassFxaa extends Pass {\n\tconstructor() {\n\t\tsuper(fsFxaa);\n\t\tthis.uniform('uResolution', [1/GL.width, 1/GL.height]);\n\t}\n}\n\nexport default PassFxaa;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/post/PassFxaa.js","// BatchCopy.js\n\nimport Geom from '../Geom';\nimport GLShader from '../GLShader';\nimport Batch from '../Batch';\n\nconst vs = require('../shaders/bigTriangle.vert');\nconst fs = require('../shaders/copy.frag');\n\nclass BatchCopy extends Batch {\n\n\tconstructor() {\n\t\tconst mesh = Geom.bigTriangle();\n\t\tconst shader = new GLShader(vs, fs);\n\t\tsuper(mesh, shader);\n\n\t\tshader.bind();\n\t\tshader.uniform('texture', 'uniform1i', 0);\n\t}\n\n\n\tdraw(texture) {\n\t\tthis.shader.bind();\n\t\ttexture.bind(0);\n\t\tsuper.draw();\n\t}\n\n}\n\nexport default BatchCopy;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/helpers/BatchCopy.js","// BatchAxis.js\n\nimport GL from '../GLTool';\nimport Mesh from '../Mesh';\nimport GLShader from '../GLShader';\nimport Batch from '../Batch';\n\nconst vs = require('../shaders/axis.vert');\nconst fs = require('../shaders/axis.frag');\n\n\nclass BatchAxis extends Batch {\n\n\tconstructor() {\n\t\tconst positions = [];\n\t\tconst colors = [];\n\t\tconst indices = [0, 1, 2, 3, 4, 5];\n\t\tconst r = 9999;\n\n\t\tpositions.push([-r,  0,  0]);\n\t\tpositions.push([r,  0,  0]);\n\t\tpositions.push([0, -r,  0]);\n\t\tpositions.push([0,  r,  0]);\n\t\tpositions.push([0,  0, -r]);\n\t\tpositions.push([0,  0,  r]);\n\n\n\t\tcolors.push([1, 0, 0]);\n\t\tcolors.push([1, 0, 0]);\n\t\tcolors.push([0, 1, 0]);\n\t\tcolors.push([0, 1, 0]);\n\t\tcolors.push([0, 0, 1]);\n\t\tcolors.push([0, 0, 1]);\n\n\t\tconst mesh = new Mesh(GL.LINES);\n\t\tmesh.bufferVertex(positions);\n\t\tmesh.bufferIndex(indices);\n\t\tmesh.bufferData(colors, 'aColor', 3);\n\n\t\tconst shader = new GLShader(vs, fs);\n\n\t\tsuper(mesh, shader);\n\n\t}\n\n\n}\n\n\nexport default BatchAxis;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/helpers/BatchAxis.js","module.exports = \"// axis.vert\\n\\n#define SHADER_NAME BASIC_VERTEX\\n\\nprecision highp float;\\n#define GLSLIFY 1\\nattribute vec3 aVertexPosition;\\nattribute vec3 aColor;\\nattribute vec3 aNormal;\\n\\nuniform mat4 uModelMatrix;\\nuniform mat4 uViewMatrix;\\nuniform mat4 uProjectionMatrix;\\n\\nvarying vec3 vColor;\\nvarying vec3 vNormal;\\n\\nvoid main(void) {\\n    gl_Position = uProjectionMatrix * uViewMatrix * uModelMatrix * vec4(aVertexPosition, 1.0);\\n    vColor = aColor;\\n    vNormal = aNormal;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/alfrid/shaders/axis.vert\n// module id = 73\n// module chunks = 0","module.exports = \"// axis.frag\\n\\n#define SHADER_NAME SIMPLE_TEXTURE\\n\\nprecision lowp float;\\n#define GLSLIFY 1\\nvarying vec3 vColor;\\nvarying vec3 vNormal;\\n\\nvoid main(void) {\\n\\t// vec3 color = vNormal;\\n\\tvec3 color = vColor + vNormal * 0.0001;\\n    gl_FragColor = vec4(color, 1.0);\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/alfrid/shaders/axis.frag\n// module id = 74\n// module chunks = 0","// BatchBall.js\n\nimport Geom from '../Geom';\nimport GLShader from '../GLShader';\nimport Batch from '../Batch';\n\nconst vs = require('../shaders/general.vert');\nconst fs = require('../shaders/simpleColor.frag');\n\nclass BatchBall extends Batch {\n\n\tconstructor() {\n\t\tconst mesh = Geom.sphere(1, 24);\n\t\tconst shader = new GLShader(vs, fs);\n\t\tsuper(mesh, shader);\n\t}\n\n\n\tdraw(position = [0, 0, 0], scale = [1, 1, 1], color = [1, 1, 1], opacity = 1) {\n\t\tthis.shader.bind();\n\t\tthis.shader.uniform('position', 'uniform3fv', position);\n\t\tthis.shader.uniform('scale', 'uniform3fv', scale);\n\t\tthis.shader.uniform('color', 'uniform3fv', color);\n\t\tthis.shader.uniform('opacity', 'uniform1f', opacity);\n\t\tsuper.draw();\n\t}\n\n}\n\nexport default BatchBall;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/helpers/BatchBall.js","// BatchDotsPlane.js\n\nimport GL from '../GLTool';\nimport Mesh from '../Mesh';\nimport GLShader from '../GLShader';\nimport Batch from '../Batch';\n\nconst vs = require('../shaders/dotsPlane.vert');\nconst fs = require('../shaders/simpleColor.frag');\n\nclass BatchDotsPlane extends Batch {\n\n\tconstructor() {\n\t\tconst positions = [];\n\t\tconst indices   = [];\n\t\tlet index       = 0;\n\t\tconst size      = 100;\n\t\tlet i, j;\n\n\t\tfor(i = -size; i < size; i += 1) {\n\t\t\tfor(j = -size; j < size; j += 1) {\n\t\t\t\tpositions.push([i, j, 0]);\n\t\t\t\tindices.push(index);\n\t\t\t\tindex++;\n\n\t\t\t\tpositions.push([i, 0, j]);\n\t\t\t\tindices.push(index);\n\t\t\t\tindex++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tconst mesh     = new Mesh(GL.POINTS);\n\t\tmesh.bufferVertex(positions);\n\t\tmesh.bufferIndex(indices);\n\t\t\n\t\tconst shader   = new GLShader(vs, fs);\n\t\t\n\t\tsuper(mesh, shader);\n\t\t\n\t\tthis.color   = [1, 1, 1];\n\t\tthis.opacity = 0.5;\n\t}\n\n\n\tdraw() {\n\t\tthis.shader.bind();\n\t\tthis.shader.uniform('color', 'uniform3fv', this.color);\n\t\tthis.shader.uniform('opacity', 'uniform1f', this.opacity);\n\t\t// GL.draw(this.mesh);\n\t\tsuper.draw();\n\t}\n}\n\nexport default BatchDotsPlane;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/helpers/BatchDotsPlane.js","module.exports = \"// basic.vert\\n\\n#define SHADER_NAME DOTS_PLANE_VERTEX\\n\\nprecision highp float;\\n#define GLSLIFY 1\\nattribute vec3 aVertexPosition;\\nattribute vec3 aNormal;\\n\\nuniform mat4 uModelMatrix;\\nuniform mat4 uViewMatrix;\\nuniform mat4 uProjectionMatrix;\\n\\nvarying vec3 vNormal;\\n\\nvoid main(void) {\\n    gl_Position = uProjectionMatrix * uViewMatrix * uModelMatrix * vec4(aVertexPosition + aNormal * 0.000001, 1.0);\\n    gl_PointSize = 1.0;\\n    vNormal = aNormal;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/alfrid/shaders/dotsPlane.vert\n// module id = 77\n// module chunks = 0","// BatchLine.js\n\n\nimport GL from '../GLTool';\nimport Mesh from '../Mesh';\nimport GLShader from '../GLShader';\nimport Batch from '../Batch';\n\nconst vs = require('../shaders/basic.vert');\nconst fs = require('../shaders/simpleColor.frag');\n\n\n\nclass BatchAxis extends Batch {\n\n\tconstructor() {\n\t\tconst positions = [];\n\t\tconst indices = [0, 1];\n\t\tconst coords = [[0, 0], [1, 1]];\n\t\tpositions.push([0,  0,  0]);\n\t\tpositions.push([0,  0,  0]);\n\n\t\tconst mesh = new Mesh(GL.LINES);\n\t\tmesh.bufferVertex(positions);\n\t\tmesh.bufferTexCoord(coords);\n\t\tmesh.bufferIndex(indices);\n\n\t\tconst shader = new GLShader(vs, fs);\n\n\t\tsuper(mesh, shader);\n\t}\n\n\n\tdraw(mPositionA, mPositionB, color = [1, 1, 1], opacity = 1.0) {\n\t\tthis._mesh.bufferVertex([mPositionA, mPositionB]);\n\n\t\tthis._shader.bind();\n\t\tthis._shader.uniform('color', 'vec3', color);\n\t\tthis._shader.uniform('opacity', 'float', opacity);\n\t\tsuper.draw();\n\t}\n\n\n}\n\n\nexport default BatchAxis;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/helpers/BatchLine.js","// BatchSkybox.js\n\nimport Geom from '../Geom';\nimport GLShader from '../GLShader';\nimport Batch from '../Batch';\n\nconst vs = require('../shaders/skybox.vert');\nconst fs = require('../shaders/skybox.frag');\n\n\nclass BatchSkybox extends Batch {\n\n\tconstructor(size = 20) {\n\t\tconst mesh = Geom.skybox(size);\n\t\tconst shader = new GLShader(vs, fs);\n\n\t\tsuper(mesh, shader);\n\t}\n\n\tdraw(texture) {\n\t\tthis.shader.bind();\n\t\ttexture.bind(0);\n\t\tsuper.draw();\n\t}\n\n\n}\n\n\nexport default BatchSkybox;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/helpers/BatchSkybox.js","// BatchSky.js\n\nimport Geom from '../Geom';\nimport GLShader from '../GLShader';\nimport Batch from '../Batch';\n\nconst vs = require('../shaders/sky.vert');\nconst fs = require('../shaders/copy.frag');\n\n\nclass BatchSky extends Batch {\n\n\tconstructor(size = 50, seg = 24) {\n\t\tconst mesh = Geom.sphere(size, seg, true);\n\t\tconst shader = new GLShader(vs, fs);\n\n\t\tsuper(mesh, shader);\n\t}\n\n\tdraw(texture) {\n\t\tthis.shader.bind();\n\t\ttexture.bind(0);\n\t\tsuper.draw();\n\t}\n}\n\nexport default BatchSky;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/helpers/BatchSky.js","module.exports = \"// sky.vert\\n\\nprecision highp float;\\n#define GLSLIFY 1\\nattribute vec3 aVertexPosition;\\nattribute vec2 aTextureCoord;\\nattribute vec3 aNormal;\\n\\nuniform mat4 uModelMatrix;\\nuniform mat4 uViewMatrix;\\nuniform mat4 uProjectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\nvarying vec3 vNormal;\\n\\nvoid main(void) {\\n\\tmat4 matView = uViewMatrix;\\n\\tmatView[3][0] = 0.0;\\n\\tmatView[3][1] = 0.0;\\n\\tmatView[3][2] = 0.0;\\n\\t\\n    gl_Position = uProjectionMatrix * matView * uModelMatrix * vec4(aVertexPosition, 1.0);\\n    vTextureCoord = aTextureCoord;\\n    vNormal = aNormal;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/alfrid/shaders/sky.vert\n// module id = 81\n// module chunks = 0","// BatchFXAA.js\nimport GL from '../GLTool';\nimport Geom from '../Geom';\nimport GLShader from '../GLShader';\nimport Batch from '../Batch';\n\nconst vs = require('../shaders/bigTriangle.vert');\nconst fs = require('../shaders/fxaa.frag');\n\nclass BatchFXAA extends Batch {\n\n\tconstructor() {\n\t\tconst mesh = Geom.bigTriangle();\n\t\tconst shader = new GLShader(vs, fs);\n\t\tsuper(mesh, shader);\n\n\t\tshader.bind();\n\t\tshader.uniform('texture', 'uniform1i', 0);\n\t}\n\n\n\tdraw(texture) {\n\t\tthis.shader.bind();\n\t\ttexture.bind(0);\n\t\tthis.shader.uniform('uResolution', 'vec2', [1/GL.width, 1/GL.height]);\n\t\tsuper.draw();\n\t}\n\n}\n\nexport default BatchFXAA;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/helpers/BatchFXAA.js","// Scene.js\n\nimport Scheduler from 'scheduling';\nimport GL from '../GLTool';\nimport CameraPerspective from '../cameras/CameraPerspective';\nimport CameraOrtho from '../cameras/CameraOrtho';\nimport OrbitalControl from '../utils/OrbitalControl';\n\n\nclass Scene {\n\n\n\tconstructor() {\n\t\tthis._children = [];\n\t\tthis._matrixIdentity = mat4.create();\n\t\tGL.enableAlphaBlending();\n\n\t\tthis._init();\n\t\tthis._initTextures();\n\t\tthis._initViews();\n\n\t\tthis._efIndex = Scheduler.addEF(()=>this._loop());\n\t\twindow.addEventListener('resize', ()=>this.resize());\n\t}\n\n\n\t\n\t//\tPUBLIC METHODS\n\n\tupdate() {\n\n\t}\n\n\trender() {\n\n\t}\n\n\n\tstop() {\n\t\tif(this._efIndex === -1) {\treturn; }\n\t\tthis._efIndex = Scheduler.removeEF(this._efIndex);\n\t}\n\n\n\tstart() {\n\t\tif(this._efIndex !== -1) {\n\t\t\treturn;\n\t\t} \n\n\t\tthis._efIndex = Scheduler.addEF(()=>this._loop());\n\t}\n\n\n\tresize() {\n\t\tGL.setSize(window.innerWidth, window.innerHeight);\n\t\tthis.camera.setAspectRatio(GL.aspectRatio);\n\t}\n\n\n\taddChild(mChild) {\n\t\tthis._children.push(mChild);\n\t}\n\n\tremoveChild(mChild) {\n\t\tconst index = this._children.indexOf(mChild);\n\t\tif(index == -1) {\tconsole.warn('Child no exist'); return;\t}\n\n\t\tthis._children.splice(index, 1);\n\t}\n\n\n\t//\tPROTECTED METHODS TO BE OVERRIDEN BY CHILDREN\n\n\t_initTextures() {\n\n\t}\n\n\n\t_initViews() {\n\n\t}\n\n\n\t_renderChildren() {\n\t\tlet child;\n\t\tfor(let i=0; i<this._children.length; i++) {\n\t\t\tchild = this._children[i];\n\t\t\tchild.toRender();\n\t\t}\n\n\t\tGL.rotate(this._matrixIdentity);\n\t}\n\n\t//\tPRIVATE METHODS\n\n\t_init() {\n\t\tthis.camera                 = new CameraPerspective();\n\t\tthis.camera.setPerspective(45 * Math.PI / 180, GL.aspectRatio, 0.1, 100);\n\t\tthis.orbitalControl          = new OrbitalControl(this.camera, window, 15);\n\t\tthis.orbitalControl.radius.value = 10;\n\t\t\n\t\tthis.cameraOrtho            = new CameraOrtho();\n\t}\n\n\t_loop() {\n\n\t\t//\tRESET VIEWPORT\n\t\tGL.viewport(0, 0, GL.width, GL.height);\n\n\t\t//\tRESET CAMERA\n\t\tGL.setMatrices(this.camera);\n\n\t\tthis.update();\n\t\tthis._renderChildren();\n\t\tthis.render();\n\t}\n\n}\n\n\nexport default Scene;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/helpers/Scene.js","// View.js\n\nimport GLShader from '../GLShader';\n\nclass View {\n\tconstructor(mStrVertex, mStrFrag) {\n\t\tthis.shader = new GLShader(mStrVertex, mStrFrag);\n\n\t\tthis._init();\n\t}\n\n\n\t//\tPROTECTED METHODS\n\n\t_init() {\n\n\t}\n\n\t// \tPUBLIC METHODS\n\n\trender() {\n\n\t}\n}\n\nexport default View;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/helpers/View.js","// View3D.js\n\nimport Object3D from '../objects/Object3D';\nimport GLShader from '../GLShader';\nimport GL from '../GLTool';\n\nclass View3D extends Object3D {\n\tconstructor(mStrVertex, mStrFrag) {\n\t\tsuper();\n\n\t\tthis._children = [];\n\t\tthis.shader = new GLShader(mStrVertex, mStrFrag);\n\t\tthis._init();\n\t\tthis._matrixTemp = mat4.create();\n\t}\n\n\n\t//\tPROTECTED METHODS\n\n\t_init() {\n\n\t}\n\n\t// \tPUBLIC METHODS\n\n\taddChild(mChild) {\n\t\tthis._children.push(mChild);\n\t}\n\n\tremoveChild(mChild) {\n\t\tconst index = this._children.indexOf(mChild);\n\t\tif(index == -1) {\tconsole.warn('Child no exist'); return;\t}\n\n\t\tthis._children.splice(index, 1);\n\t}\n\n\n\ttoRender(matrix) {\n\t\tif(matrix === undefined) {\n\t\t\tmatrix = mat4.create();\n\t\t}\n\t\tmat4.mul(this._matrixTemp, matrix, this.matrix);\n\t\tGL.rotate(this._matrixTemp);\n\t\tthis.render();\n\n\t\tfor(let i=0; i<this._children.length; i++) {\n\t\t\tconst child = this._children[i];\n\t\t\tchild.toRender(this.matrix);\n\t\t}\n\t}\n\n\trender() {\n\n\t}\n}\n\n\nexport default View3D;\n\n\n// WEBPACK FOOTER //\n// ./src/alfrid/helpers/View3D.js"],"sourceRoot":""}